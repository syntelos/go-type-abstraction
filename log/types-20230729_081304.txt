 }
 }]
>
] }
]>
{} }
}
}]
09.Certificate; crypto/x509.opts *crypto/x509.VerifyOptions; crypto/x509.chains *[][]*crypto/x509.Certificate }
*[0]*cmd/go/internal/load.Package
[0]*cmd/go/internal/load.Package
*[0]cmd/go/internal/modfetch/codehost.Tag
[0]cmd/go/internal/modfetch/codehost.Tag
[0]*cmd/go/internal/modload.cachedGraph
*[0]*cmd/go/internal/work.Action
[0]*cmd/go/internal/work.Action
*[0]cmd/vendor/golang.org/x/mod/sumdb/tlog.Hash
[0]cmd/vendor/golang.org/x/mod/sumdb/tlog.Hash
*[0]*crypto/x509.Certificate
[0]*crypto/x509.Certificate
*[0]encoding/json.field
[0]encoding/json.field
*[0]encoding/xml.Attr
[0]encoding/xml.Attr
[0]func()
[0]*go.shape.interface {}
[0]*go.shape.string
[0]*go.shape.struct { cmd/go/internal/modload.mg *cmd/go/internal/modload.ModuleGraph; cmd/go/internal/modload.err e
[0]*go.shape.struct { go/token.name string; go/token.base int; go/token.size int; go/token.mutex sync.Mutex; go/toke
[0]*go.shape.struct { internal/godebug.text string; internal/godebug.bisect *internal/bisect.Matcher }
[0]*go.shape.struct { math/rand.src math/rand.Source; math/rand.s64 math/rand.Source64; math/rand.readVal int64; mat
[0]*go.shape.struct { net.servers []string; net.search []string; net.ndots int; net.timeout time.Duration; net.attem
[0]*go.shape.struct { sync.m map[interface {}]*sync.entry; sync.amended bool }
*[0]go.shape.*uint8
[0]go.shape.*uint8
[0]*go/token.File
*[0]int
[0]int
*[0]int32
[0]int32
[0]*interface {}
[0]*internal/godebug.value
*[0]io/fs.DirEntry
[0]io/fs.DirEntry
*[0]io/fs.FileInfo
[0]io/fs.FileInfo
[0]*math/rand.Rand
[0]*net.dnsConfig
*[0]*net/http.Cookie
[0]*net/http.Cookie
*[0]reflect.fieldScan
[0]reflect.fieldScan
[0]*runtime.PanicNilError
*[0]string
[0]string
[0]*string
[0]*sync.readOnly
*[0]uint16
[0]uint16
*[0]uint8
[0]uint8
[0]uintptr
[100000]unsafe.Pointer
[1000]uintptr
[100]uint8
[101]runtime.finalizer
*[1024]uint8
[1024]uint8
*[1048576]runtime.inlinedCall
[1048576]runtime.inlinedCall
[1048576]uint8
[104]uint8
[108]int8
*[10]interface {}
[10]interface {}
[10]runtime.heldLockInfo
*[10]string
[10]string
[10]uint16
*[10]uint8
[10]uint8
*[1125899906842623]uint8
[1125899906842623]uint8
*[112]uint8
[112]uint8
*[11]interface {}
[11]interface {}
11 *internal/singleflight.call; internal/singleflight..autotmp_12 string; internal/singleflight..autotmp_13 func() (
*[11]uint8
[11]uint8
*[11]uintptr
[11]uintptr
[127]bool
[128][4]uint64
[128]bool
[128]float32
[128]runtime/internal/syscall.EpollEvent
[128]*runtime.mspan
[128]*runtime.sudog
[128]uint16
[128]uint32
*[128]uint8
[128]uint8
[128]uintptr
[128]vendor/golang.org/x/text/unicode/bidi.Properties
[129]*runtime.g
[129]uint8
*[12]interface {}
[12]interface {}
[12]uint16
*[12]uint8
[12]uint8
*[131072]uint16
[131072]uint16
[131072]uint32
[131072]uintptr
*[132]crypto/internal/nistec.p521Table
[132]crypto/internal/nistec.p521Table
[133]string
*[133]uint8
[133]uint8
[136]*runtime.mspan
[136]struct { runtime.mcentral runtime.mcentral; runtime.pad [24]uint8 }
[13]int32
*[13]string
[13]uint32
*[13]uint8
[13]uint8
[1408]uint16
[1408]uint8
[1]*[4194304]*runtime.heapArena
[144]uint8
148 *cmd/go/internal/work.Action }
[14]int8
[14]net._Ctype_char
*[14]uint8
[14]uint8
[15]*crypto/internal/bigmod.Nat
*[15]interface {}
[15]interface {}
[15]uint64
*[15]uint8
[15]uint8
[160]runtime/internal/atomic.Uint64
[16][16]int32
[16384]compress/flate.tableEntry
[16384]uint8
[16576]uint8
[1664]uint16
[16]compress/flate.levelInfo
[16]crypto/cipher.gcmFieldElement
[16]debug/pe.DataDirectory
[16]int
*[16]int32
[16]int32
*[16]interface {}
[16]interface {}
[16]math/big.nat
[16]*math/big.nat
[16]runtime.xmmreg1
*[16]uint32
[16]uint32
[16]uint64
*[16]uint8
[16]uint8
*[16]uintptr
[16]uintptr
[16]unicode/utf8.acceptRange
[16]vendor/golang.org/x/text/unicode/bidi.Class
*[171]uint8
[171]uint8
[17]int32
[17]string
*[17]uint8
[17]uint8
*[18]uint8
[18]uint8
*[18]uintptr
[18]uintptr
[19426]uint8
19.initOnce sync.Once }
*[19]int
[19]int
[19]int32
*[19]uint8
[19]uint8
*[1]chan<- internal/singleflight.Result
[1]chan<- internal/singleflight.Result
*[1]*cmd/go/internal/base.Command
[1]*cmd/go/internal/base.Command
*[1]*cmd/go/internal/load.Package
[1]*cmd/go/internal/load.Package
*[1]*cmd/go/internal/modindex.rawPackage
[1]*cmd/go/internal/modindex.rawPackage
*[1]*cmd/go/internal/modload.modFileIndex
[1]*cmd/go/internal/modload.modFileIndex
*[1]cmd/go/internal/modload.QueryResult
[1]cmd/go/internal/modload.QueryResult
*[1]*cmd/go/internal/search.Match
[1]*cmd/go/internal/search.Match
*[1]*cmd/go/internal/work.Action
[1]*cmd/go/internal/work.Action
*[1]cmd/vendor/golang.org/x/mod/modfile.Comment
[1]cmd/vendor/golang.org/x/mod/modfile.Comment
*[1]*cmd/vendor/golang.org/x/mod/modfile.File
[1]*cmd/vendor/golang.org/x/mod/modfile.File
*[1]*cmd/vendor/golang.org/x/mod/modfile.Line
[1]*cmd/vendor/golang.org/x/mod/modfile.Line
*[1]cmd/vendor/golang.org/x/mod/module.Version
[1]cmd/vendor/golang.org/x/mod/module.Version
*[1]cmd/vendor/golang.org/x/mod/sumdb/note.Verifier
[1]cmd/vendor/golang.org/x/mod/sumdb/note.Verifier
*[1]cmd/vendor/golang.org/x/mod/sumdb/tlog.Hash
[1]cmd/vendor/golang.org/x/mod/sumdb/tlog.Hash
*[1]*crypto/internal/edwards25519.Point
[1]*crypto/internal/edwards25519.Point
*[1]crypto/tls.keyShare
[1]crypto/tls.keyShare
*[1]crypto/tls.pskIdentity
[1]crypto/tls.pskIdentity
*[1]crypto/tls.SignatureScheme
[1]crypto/tls.SignatureScheme
*[1]crypto/tls.ticketKey
[1]crypto/tls.ticketKey
*[1]*crypto/x509.Certificate
*[1][]*crypto/x509.Certificate
[1]*crypto/x509.Certificate
[1][]*crypto/x509.Certificate
*[1]crypto/x509.ExtKeyUsage
[1]crypto/x509.ExtKeyUsage
*[1]crypto/x509/pkix.AttributeTypeAndValue
[1]crypto/x509/pkix.AttributeTypeAndValue
*[1]encoding/json.field
[1]encoding/json.field
*[1]error
[1]error
*[1]func(*cmd/go/internal/load.Package) bool
[1]func(*cmd/go/internal/load.Package) bool
*[1]go/ast.Expr
[1]go/ast.Expr
*[1]*go/ast.File
[1]*go/ast.File
*[1]*go/ast.Ident
[1]*go/ast.Ident
*[1]go/doc/comment.score·1
[1]go/doc/comment.score·1
*[1]go/doc/comment.Text
[1]go/doc/comment.Text
*[1]int
[1]int
*[1]int64
[1]int64
*[1]interface {}
[1]interface {}
*[1]internal/zstd.fseEntry
[1]internal/zstd.fseEntry
·1) int; go/doc/comment.g func(int, int) go/doc/comment.score·1; go/doc/comment.a int; go/doc/comment.b int }
*[1]math/big.Word
[1]math/big.Word
*[1]net.Addr
[1]net.Addr
*[1]net.IPAddr
[1]net.IPAddr
*[1]reflect.fieldScan
[1]reflect.fieldScan
*[1]reflect.Value
[1]reflect.Value
[1]*regexp/syntax.Regexp
[1]runtime.stackObjectRecord
[1]runtime.statDep
*[1]string
[1]string
*[1]text/template/parse.Node
[1]text/template/parse.Node
*[1]text/template.variable
[1]text/template.variable
*[1]time.zone
[1]time.zone
*[1]time.zoneTrans
[1]time.zoneTrans
*[1]uint16
[1]uint16
*[1]uint32
[1]uint32
[1]uint64
*[1]uint8
[1]uint8
*[1][]uint8
[1][]uint8
*[1]uintptr
[1]uintptr
*[1]unsafe.Pointer
[1]unsafe.Pointer
*[1]vendor/golang.org/x/net/dns/dnsmessage.Type
[1]vendor/golang.org/x/net/dns/dnsmessage.Type
*[1]vendor/golang.org/x/net/http/httpproxy.matcher
[1]vendor/golang.org/x/net/http/httpproxy.matcher
[20]uint64
[20]uint8
[2180]vendor/golang.org/x/net/idna.valueRange
[21]uint16
*[21]uint8
[21]uint8
*[222]uint8
[222]uint8
*[22]uint8
[22]uint8
*[22]uintptr
[22]uintptr
[22]uintptr }
22]uintptr }
*[23]uint8
[23]uint8
[248]uint8
[2496]uint16
[249]uint8
[24]uint32
[24]uint8
[252]uintptr
[253]uintptr
[255]uint8
[256]bool
[256]float32
[256]int
[256]int16
[256]int8
*[256]runtime.guintptr
[256]runtime.guintptr
[256]uint16
*[256]uint32
[256]uint32
[256]uint64
*[256]uint8
[256]uint8
[256][]uint8
*[256]vendor/golang.org/x/net/http2/hpack.node
[256]vendor/golang.org/x/net/http2/hpack.node
*[256]*vendor/golang.org/x/net/http2/hpack.node
[256]*vendor/golang.org/x/net/http2/hpack.node
[257]uint32
*[25]cmd/go/internal/cfg.EnvVar
[25]cmd/go/internal/cfg.EnvVar
[25]uint8
*[268435456]uintptr
[268435456]uintptr
*[26]*crypto/internal/nistec.p256OrdElement
[26]*crypto/internal/nistec.p256OrdElement
*[26]int
[26]int
*[27]uint8
[27]uint8
*[281474976710655]uint32
[281474976710655]uint32
[288]int
[2][8]runtime.pcvalueCacheEnt
*[28]uint8
[28]uint8
*[29]uint8
[29]uint8
2, []bool) bool; regexp.onePassRunes [][]int32; regexp.instQueue *regexp.queueOnePass }
*[2]cmd/go/internal/cfg.EnvVar
[2]cmd/go/internal/cfg.EnvVar
*[2]*cmd/go/internal/work.Action
[2]*cmd/go/internal/work.Action
*[2][]cmd/vendor/golang.org/x/mod/modfile.Comment
[2][]cmd/vendor/golang.org/x/mod/modfile.Comment
*[2]cmd/vendor/golang.org/x/mod/module.Version
[2]cmd/vendor/golang.org/x/mod/module.Version
*[2]*crypto/internal/edwards25519.Point
[2]*crypto/internal/edwards25519.Point
*[2]crypto/tls.SignatureScheme
[2]crypto/tls.SignatureScheme
*[2]encoding/asn1.encoder
[2]encoding/asn1.encoder
*[2]float32
[2]float32
*[2]float64
[2]float64
[2]go/token.Pos
*[2]int
[2]int
[2]int32
*[2]int64
[2]int64
*[2]interface {}
[2]interface {}
*[2]io.Reader
[2]io.Reader
*[2]io.Writer
[2]io.Writer
*[2]map[string]interface {}
[2]map[string]interface {}
*[2]net/http.http2Setting
[2]net/http.http2Setting
*[2]net/http.socksAuthMethod
[2]net/http.socksAuthMethod
*[2]reflect.StructField
[2]reflect.StructField
[2]runtime.evacDst
*[2]runtime.Frame
[2]runtime.Frame
2; runtime.goroutineProfiled runtime.goroutineProfileStateHolder; runtime.trace runtime.gTraceState; runtime.gcAssis
[2]runtime.spanSet
[2]**runtime.stackWorkBuf
[2]runtime.statDep
*[2]string
[2]string
*[2]struct { net.laddr net.TCPAddr; net.value int }
[2]struct { net.laddr net.TCPAddr; net.value int }
[2]syscall.capData
*[2]syscall._C_int
[2]syscall._C_int
*[2]syscall.Timespec
[2]syscall.Timespec
*[2]uint16
[][2]uint16
[2]uint16
*[2]uint64
[][2]uint64
[2]uint64
[2]*uint64
*[2]uint8
[2]uint8
*[2]uintptr
[2]uintptr
2]uintptr }
*[2]unsafe.Pointer
[2]unsafe.Pointer
*[2]vendor/golang.org/x/net/dns/dnsmessage.Type
[2]vendor/golang.org/x/net/dns/dnsmessage.Type
[2]vendor/golang.org/x/text/secure/bidirule.ruleTransition
·3 }
[3072]uint16
[30]int32
*[30]uint8
[30]uint8
*[316]int
[316]int
[32768]uint32
*[32]int32
[32]int32
[32]internal/zstd.fseBaselineEntry
32; net.singleRequest bool; net.useTCP bool; net.trustAD bool; net.noReload bool }
[32]*runtime._defer
32; runtime.goroutineProfiled runtime.goroutineProfileStateHolder; runtime.trace runtime.gTraceState; runtime.gcAssi
[32]string
[32]strings.span·1
[32]uint
*[32]uint8
[][32]uint8
[32]uint8
*[32]uintptr
[32]uintptr
[32]vendor/golang.org/x/text/unicode/norm.Properties
[33]float64
*[33]uint8
[33]uint8
*[33]uintptr
[33]uintptr
[35]runtime.mSpanList
*[36]uint8
[36]uint8
*[37]*cmd/go/internal/base.Command
[37]*cmd/go/internal/base.Command
*[39]string
[39]string
[39]uint8
*[39]vendor/golang.org/x/sys/cpu.option
[39]vendor/golang.org/x/sys/cpu.option
*[3]*cmd/go/internal/load.Package
[3]*cmd/go/internal/load.Package
*[3]*cmd/go/internal/work.Action
[3]*cmd/go/internal/work.Action
*[3]cmd/vendor/golang.org/x/mod/module.Version
[3]cmd/vendor/golang.org/x/mod/module.Version
*[3]crypto/tls.SignatureScheme
[3]crypto/tls.SignatureScheme
[3]go/ast.Expr
[3]int
[3]int64
*[3]interface {}
[3]interface {}
[3][]internal/zstd.fseBaselineEntry
[3]internal/zstd.seqCodeInfoData
*[3]reflect.StructField
[3]reflect.StructField
[3]runtime.heapStatsDelta
[3]runtime.memRecordCycle
[3]runtime.mutex
*[3]string
[3]string
*[3][]string
[3][]string
*[3]text/template/parse.item
[3]text/template/parse.item
[3]uint16
[3]uint32
*[3]uint64
[3]uint64
*[3]uint8
[3]uint8
*[3][]uint8
[3][]uint8
*[3]uintptr
[3]uintptr
*[4096]uint8
[4096]uint8
[40]uint8
[4][16]uint8
*[4194304]*runtime.heapArena
[4194304]*runtime.heapArena
*[43]crypto/internal/nistec.p256AffineTable
[43]crypto/internal/nistec.p256AffineTable
*[45]uint8
[45]uint8
*[46912496118442]runtime.elfSym
[46912496118442]runtime.elfSym
*[46]uint8
[46]uint8
[48]uint
*[48]uint8
[48]uint8
*[49]uint8
[49]uint8
*[4]crypto/elliptic.Curve
[4]crypto/elliptic.Curve
*[4]crypto/tls.SignatureScheme
[4]crypto/tls.SignatureScheme
[4]float64
*[4][]go/build.Directive
[4][]go/build.Directive
[4]int
*[4]interface {}
[4]interface {}
4; runtime.assistTime runtime/internal/atomic.Int64; runtime.backgroundTime runtime/internal/atomic.Int64 }
4; runtime.runnableTime int64; runtime.lockedm runtime.muintptr; runtime.sig uint32; runtime.writebuf []uint8; runti
[4]runtime.stackfreelist
*[4]string
[4]string
[4]struct { runtime.item runtime.stackpoolItem; runtime._ [40]uint8 }
[4]uint16
[4]uint32
*[4]uint64
[4]uint64
4]uint64; runtime.bufLock runtime.mutex; runtime.buf runtime.traceBufPtr }
*[4]uint8
[4]uint8
*[4]uintptr
[4]uintptr
[4]uintptr }
509.err *error; crypto/x509.c *crypto/x509.Certificate; crypto/x509.hintErr *error; crypto/x509.hintCert **crypto/x5
*[50]uint8
[50]uint8
[50]uintptr
[512]runtime.atomicMSpanPointer
[512]*runtime.itab
[512]uint32
*[512]uint8
[512]uint8
[512]uintptr
*[52]uint8
[52]uint8
*[53]uint8
[53]uint8
*[54]uint8
[54]uint8
*[562949953421311]uint16
[562949953421311]uint16
*[56]crypto/internal/nistec.p224Table
[56]crypto/internal/nistec.p224Table
[56]uint16
*[56]uint8
[56]uint8
*[57]string
[57]string
*[57]uint8
[57]uint8
5 *cmd/go/internal/work.Action }
[5]int
[5]int64
*[5]interface {}
[5]interface {}
[5][]runtime.pallocSum
*[5]string
[5]string
*[5][]string
[5][]string
*[5]struct { debug/plan9obj.name string; debug/plan9obj.size uint32 }
[5]struct { debug/plan9obj.name string; debug/plan9obj.size uint32 }
[5]sync.Pool
[5]uint
*[5]uint32
[5]uint32
[5]uint64
*[5]uint8
[5]uint8
[5][]uint8
*[5]uintptr
[5]uintptr
[5]unsafe.Pointer
6 }
[607]int64
*[60]uint8
[60]uint8
[6208]uint16
[6][2]vendor/golang.org/x/text/secure/bidirule.ruleTransition
[63]runtime.stackObject
[64488]uint8
[64]crypto/internal/edwards25519.affineCached
[64]internal/zstd.fseBaselineEntry
[64]math/big.divisor
64; runtime.runnableTime int64; runtime.lockedm runtime.muintptr; runtime.sig uint32; runtime.writebuf []uint8; runt
[64]uint
[64]uint32
*[64]uint8
[64]uint8
[64]uintptr
[65520]runtime.gcBits
[65528]uint8
*[65536]runtime.scase
[65536]runtime.scase
[65]int64
[65]int8
[65]runtime.sigTabT
[65]uint32
*[65]uint8
[65]uint8
[65]uintptr
*[66]uint8
[66]uint8
*[67]uint8
[67]uint8
[68]uint16
[68]uint32
[68]uint64
[68]uint8
[696][2]uint64
6; crypto/tls.suite *crypto/tls.cipherSuite; crypto/tls.masterSecret []uint8 }
[6]int
*[6]interface {}
[6]interface {}
*[6]internal/cpu.option
[6]internal/cpu.option
*[6]string
[6]string
[6]uint16
*[6]uint64
[6]uint64
*[6]uint8
[6]uint8
*[6]uintptr
[6]uintptr
*[70368744177663]runtime.elfDyn
[70368744177663]runtime.elfDyn
[70]uint8
[72]uint8
[730]vendor/golang.org/x/text/unicode/norm.valueRange
*[76]uint8
[76]uint8
*[7]cmd/go/internal/cfg.EnvVar
[7]cmd/go/internal/cfg.EnvVar
*[7]crypto/tls.SignatureScheme
[7]crypto/tls.SignatureScheme
*[7]interface {}
[7]interface {}
*[7]string
[7]string
*[7]uint8
[7]uint8
[800]uint8
[8192]*[8192]runtime.pallocData
[8192]*runtime.mspan
*[8192]runtime.pallocData
[8192]runtime.pallocData
[8192]runtime.traceStackPtr
[8192]uint8
[8][4][16]uint8
[8640]uint16
[8][64]uint32
[89]string
[8]crypto/internal/edwards25519.projCached
[8]crypto/tls.QUICEvent
8, error); ReadZip(context.Context, string, string, int64) (io.ReadCloser, error); RecentTag(context.Context, string
*[8]interface {}
[8]interface {}
[8]runtime.fpxreg1
*[8]runtime.pcvalueCacheEnt
[8]runtime.pcvalueCacheEnt
*[8]string
[8]string
[8]uint16
*[8]uint32
[8]uint32
[8]uint64
*[8]uint8
[8]uint8
*[8]vendor/golang.org/x/net/idna.joinState
[][8]vendor/golang.org/x/net/idna.joinState
[8]vendor/golang.org/x/net/idna.joinState
[919]vendor/golang.org/x/text/unicode/norm.valueRange
*[96]crypto/internal/nistec/fiat.P224Element
[96]crypto/internal/nistec/fiat.P224Element
*[96]crypto/internal/nistec.p384Table
[96]crypto/internal/nistec.p384Table
[96]int8
*[96]uint8
[96]uint8
*[97]uint8
[97]uint8
*[9]interface {}
[9]interface {}
*[9]string
[9]string
*[9]uint64
[9]uint64
*[9]uint8
[9]uint8
*[9]uintptr
[9]uintptr
[9]unsafe.Pointer
A bool; HasSSE3 bool; HasSSSE3 bool; HasSSE41 bool; HasSSE42 bool; internal/cpu._ internal/cpu.CacheLinePad }
ackage }
ackageOpts; cmd/go/internal/load.walk *func(*cmd/go/internal/load.Package) }
ad.current string; cmd/go/internal/modload.allowed cmd/go/internal/modload.AllowedFunc; cmd/go/internal/modload.reus
ad.loadPkg; cmd/go/internal/modload.rs *cmd/go/internal/modload.Requirements; cmd/go/internal/modload.mg *cmd/go/int
ad.loadPkg; cmd/go/internal/modload.tidy **cmd/go/internal/modload.Requirements; cmd/go/internal/modload.disambiguat
ad.Package]*cmd/go/internal/load.Package; cmd/go/internal/load.p **cmd/go/internal/load.Package; cmd/go/internal/loa
ad.parentDir string; cmd/go/internal/load.parentRoot string; cmd/go/internal/load.parentIsStd bool; cmd/go/internal/
ad.path string; cmd/go/internal/load.dir string; cmd/go/internal/load.err error }]; cmd/go/internal/par..dict *[22]u
adVal int64; math/rand.readPos int8 }]
age }
age; cmd/go/internal/load.file string; cmd/go/internal/load.updateBuildInfo func(*cmd/go/internal/load.Package, stri
ags map[string]bool; cmd/go/internal/modload.addPkg func(string) }
aHeadersFrame }
ain.fn uintptr; cmd/go/internal/toolchain._panic uintptr; cmd/go/internal/toolchain.link uintptr; cmd/go/internal/to
aintComparisons *int }
al/atomic.Bool; runtime.raceignore int8; runtime.tracking bool; runtime.trackingSeq uint8; runtime.trackingStamp int
al *cmd/go/internal/load.Package }
all.framepc uintptr }
al/list.TrackingWriter }
al/load.parentPath string; cmd/go/internal/load.parentDir string; cmd/go/internal/load.parentRoot string; cmd/go/int
al/load.path string; cmd/go/internal/load.dir string; cmd/go/internal/load.err error }]; cmd/go/internal/par..dict *
allsp uintptr; runtime.syscallpc uintptr; runtime.stktopsp uintptr; runtime.param unsafe.Pointer; runtime.atomicstat
allTags map[string]bool }
al/modfetch.args []interface {} }
al/modfetch/codehost.RevInfo, error); Tags(context.Context, string) (*cmd/go/internal/modfetch/codehost.Tags, error)
al/modfetch.isRetracted func(string) bool }
al/modfetch.overwrite bool; cmd/go/internal/modfetch.enabled bool }
al/modget.modMessage·2; cmd/go/internal/modget.i int }
al/modget.resolver; cmd/go/internal/modget.ctx context.Context }
al/modload.allowed cmd/go/internal/modload.AllowedFunc; cmd/go/internal/modload.versions *[]string; cmd/go/internal/
al/modload.err error }]
al/modload.ld *cmd/go/internal/modload.loader; cmd/go/internal/modload.needc chan map[cmd/vendor/golang.org/x/mod/mo
al/modload.match func(cmd/vendor/golang.org/x/mod/module.Version, []string, bool) *cmd/go/internal/search.Match; cmd
al/modload.old *cmd/go/internal/modfetch/codehost.Origin }
al/modload.pathIsRoot map[string]bool }
al/modload.QueryResult }
al/modload.tags map[string]bool; cmd/go/internal/modload.addPkg func(string) }
al/par..dict *[22]uintptr }
al/par.err error }]
al/par.err error }]; cmd/go/internal/par..dict *[22]uintptr }
al/search.match *func(string) bool }
al/work.Builder }
al/workcmd.arg string }
.ancestorInfo; runtime.startpc uintptr; runtime.racectx uintptr; runtime.waiting *runtime.sudog; runtime.cgoCtxt []u
ancestorInfo; runtime.startpc uintptr; runtime.racectx uintptr; runtime.waiting *runtime.sudog; runtime.cgoCtxt []ui
and.readPos int8 }
ang.org/x/mod/module.Version }
anic *runtime._panic; runtime._defer *runtime._defer; runtime.m *runtime.m; runtime.sched runtime.gobuf; runtime.sys
ap[cmd/vendor/golang.org/x/mod/module.Version]bool }
ap[string]bool; cmd/go/internal/modload.addPkg func(string) }
*archive/zip.checksumReader
archive/zip.checksumReader
archive/zip.Compressor
*archive/zip.countWriter
archive/zip.countWriter
*archive/zip.Decompressor
archive/zip.Decompressor
*archive/zip.directoryEnd
archive/zip.directoryEnd
*archive/zip.dirReader
archive/zip.dirReader
*archive/zip.dirWriter
archive/zip.dirWriter
**archive/zip.File
*archive/zip.File
[]*archive/zip.File
archive/zip.File
*archive/zip.FileHeader
archive/zip.FileHeader
archive/zip.fileInfoDirEntry
*archive/zip.fileListEntry
[]archive/zip.fileListEntry
archive/zip.fileListEntry
*archive/zip.fileWriter
archive/zip.fileWriter
**archive/zip.header
*archive/zip.header
[]*archive/zip.header
archive/zip.header
*archive/zip.headerFileInfo
archive/zip.headerFileInfo
*archive/zip.nopCloser
archive/zip.nopCloser
*archive/zip.openDir
archive/zip.openDir
archive/zip.pc uintptr; archive/zip.fn uintptr; archive/zip._panic uintptr; archive/zip.link uintptr; archive/zip.fd
*archive/zip.pooledFlateReader
archive/zip.pooledFlateReader
*archive/zip.pooledFlateWriter
archive/zip.pooledFlateWriter
*archive/zip.readBuf
archive/zip.readBuf
*archive/zip.ReadCloser
archive/zip.ReadCloser
*archive/zip.Reader
archive/zip.Reader
*archive/zip.writeBuf
archive/zip.writeBuf
*archive/zip.Writer
archive/zip.Writer
arch.Match; cmd/go/internal/modload.treeCanMatch func(string) bool; cmd/go/internal/modload.have map[string]bool; cm
arch.match *func(string) bool }
ar.err error }]
ar.err error }]; cmd/go/internal/par..dict *[22]uintptr }
arf.r debug/dwarf.typeReader; debug/dwarf.typeCache map[debug/dwarf.Offset]debug/dwarf.Type; debug/dwarf.fixups *deb
arf.typeFixer }
ar.Queue; cmd/go/internal/modload.loadOne func(cmd/vendor/golang.org/x/mod/module.Version) (*cmd/go/internal/modload
ar.v []string; cmd/go/internal/par.err error }]; cmd/go/internal/par..dict *[22]uintptr }
ash uintptr }
asToken bool }
ation; net.attempts int; net.rotate bool; net.unknownOpt bool; net.lookup []string; net.err error; net.mtime time.Ti
.autotmp_27 chan<- struct {} }
bjectIdentifier; crypto/x509.pubKeyAlgo crypto/x509.PublicKeyAlgorithm; crypto/x509.hash crypto.Hash }
bjs map[*go/ast.Object]bool; go/doc.usedDecls map[go/ast.Decl]bool; go/doc.depDecls *[]go/ast.Decl; go/doc.inspectFu
 }) bool
*bool
[]bool
bool
bool }
bool; cmd/go/internal/cache.sp uintptr; cmd/go/internal/cache.pc uintptr; cmd/go/internal/cache.fn uintptr; cmd/go/i
 bool; cmd/go/internal/load.count *int; cmd/go/internal/load.have map[string]int; cmd/go/internal/load.pid *int; cmd
) bool; cmd/go/internal/modfetch.info *cmd/go/internal/modfetch/codehost.RevInfo }
]bool; cmd/go/internal/modindex.p **go/build.Package }
) bool; cmd/go/internal/modload.have map[string]bool; cmd/go/internal/modload.isMatch func(string) bool; cmd/go/inte
"" }) bool; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.struct { Path string; Version string "json:\",
bool }; cmd/go/internal/par.err error }
bool; cmd/go/internal/trace.sp uintptr; cmd/go/internal/trace.pc uintptr; cmd/go/internal/trace.fn uintptr; cmd/go/i
 bool; HasAVX512BW bool; HasAVX512DQ bool; HasAVX512IFMA bool; HasAVX512VBMI bool; HasAVX5124VNNIW bool; HasAVX5124F
bool; HasAVX512VBMI2 bool; HasAVX512BITALG bool; HasAVX512BF16 bool; HasBMI1 bool; HasBMI2 bool; HasCX16 bool; HasER
 bool; HasCRC32 bool; HasATOMICS bool; HasCPUID bool; IsNeoverse bool; internal/cpu._ internal/cpu.CacheLinePad }
 bool; HasETF3EH bool; HasMSA bool; HasAES bool; HasAESCBC bool; HasAESCTR bool; HasAESGCM bool; HasGHASH bool; HasS
bool; internal/singleflight.sp uintptr; internal/singleflight.pc uintptr; internal/singleflight.fn uintptr; internal
 *bool; runtime.lockedExt *uint32 }
*bucket<[2]string,bool>
bucket<[2]string,bool>
*bucket<[32]uint8,string>
bucket<[32]uint8,string>
*bucket<[8]uint8,chan struct {}>
bucket<[8]uint8,chan struct {}>
*bucket<chan<- os.Signal,*os/signal.handler>
bucket<chan<- os.Signal,*os/signal.handler>
*bucket<cmd/go/internal/cache.OutputID,string>
bucket<cmd/go/internal/cache.OutputID,string>
*bucket<cmd/go/internal/cache.ProgCmd,bool>
bucket<cmd/go/internal/cache.ProgCmd,bool>
*bucket<*cmd/go/internal/load.Package,bool>
bucket<*cmd/go/internal/load.Package,bool>
*bucket<*cmd/go/internal/load.Package,*cmd/go/internal/load.Package>
bucket<*cmd/go/internal/load.Package,*cmd/go/internal/load.Package>
*bucket<*cmd/go/internal/load.PackageError,bool>
bucket<*cmd/go/internal/load.PackageError,bool>
*bucket<cmd/go/internal/modcmd.metakey,bool>
bucket<cmd/go/internal/modcmd.metakey,bool>
*bucket<cmd/go/internal/modfetch.modSum,cmd/go/internal/modfetch.modSumStatus>
bucket<cmd/go/internal/modfetch.modSum,cmd/go/internal/modfetch.modSumStatus>
*bucket<*cmd/go/internal/modinfo.ModulePublic,string>
bucket<*cmd/go/internal/modinfo.ModulePublic,string>
*bucket<*cmd/go/internal/modload.loadPkg,bool>
bucket<*cmd/go/internal/modload.loadPkg,bool>
*bucket<*cmd/go/internal/modload.loadPkg,cmd/go/internal/modload.mismatch·4>
bucket<*cmd/go/internal/modload.loadPkg,cmd/go/internal/modload.mismatch·4>
*bucket<*cmd/go/internal/work.Action,bool>
bucket<*cmd/go/internal/work.Action,bool>
*bucket<*cmd/go/internal/work.Action,int>
bucket<*cmd/go/internal/work.Action,int>
*bucket<cmd/go/internal/work.cacheKey,*cmd/go/internal/work.Action>
bucket<cmd/go/internal/work.cacheKey,*cmd/go/internal/work.Action>
*bucket<*cmd/vendor/golang.org/x/mod/modfile.Line,bool>
bucket<*cmd/vendor/golang.org/x/mod/modfile.Line,bool>
*bucket<*cmd/vendor/golang.org/x/mod/modfile.Line,*cmd/vendor/golang.org/x/mod/modfile.LineBlock>
bucket<*cmd/vendor/golang.org/x/mod/modfile.Line,*cmd/vendor/golang.org/x/mod/modfile.LineBlock>
*bucket<cmd/vendor/golang.org/x/mod/module.Version,bool>
bucket<cmd/vendor/golang.org/x/mod/module.Version,bool>
*bucket<cmd/vendor/golang.org/x/mod/module.Version,cmd/go/internal/modget.modFlags·1>
bucket<cmd/vendor/golang.org/x/mod/module.Version,cmd/go/internal/modget.modFlags·1>
*bucket<cmd/vendor/golang.org/x/mod/module.Version,*cmd/go/internal/modinfo.ModulePublic>
bucket<cmd/vendor/golang.org/x/mod/module.Version,*cmd/go/internal/modinfo.ModulePublic>
*bucket<cmd/vendor/golang.org/x/mod/module.Version,*cmd/go/internal/modload.loadPkg>
bucket<cmd/vendor/golang.org/x/mod/module.Version,*cmd/go/internal/modload.loadPkg>
*bucket<cmd/vendor/golang.org/x/mod/module.Version,*cmd/go/internal/modload.modFileIndex>
bucket<cmd/vendor/golang.org/x/mod/module.Version,*cmd/go/internal/modload.modFileIndex>
*bucket<cmd/vendor/golang.org/x/mod/module.Version,cmd/go/internal/modload.modPruning>
bucket<cmd/vendor/golang.org/x/mod/module.Version,cmd/go/internal/modload.modPruning>
*bucket<cmd/vendor/golang.org/x/mod/module.Version,cmd/go/internal/modload.perPruning[cmd/go/internal/modload.dqStat
bucket<cmd/vendor/golang.org/x/mod/module.Version,cmd/go/internal/modload.perPruning[cmd/go/internal/modload.dqState
*bucket<cmd/vendor/golang.org/x/mod/module.Version,cmd/go/internal/modload.requireMeta>
bucket<cmd/vendor/golang.org/x/mod/module.Version,cmd/go/internal/modload.requireMeta>
*bucket<cmd/vendor/golang.org/x/mod/module.Version,cmd/go/internal/modload.vendorMetadata>
bucket<cmd/vendor/golang.org/x/mod/module.Version,cmd/go/internal/modload.vendorMetadata>
*bucket<cmd/vendor/golang.org/x/mod/module.Version,*cmd/vendor/golang.org/x/mod/modfile.File>
bucket<cmd/vendor/golang.org/x/mod/module.Version,*cmd/vendor/golang.org/x/mod/modfile.File>
*bucket<cmd/vendor/golang.org/x/mod/module.Version,[]cmd/vendor/golang.org/x/mod/module.Version>
*bucket<cmd/vendor/golang.org/x/mod/module.Version,cmd/vendor/golang.org/x/mod/module.Version>
bucket<cmd/vendor/golang.org/x/mod/module.Version,[]cmd/vendor/golang.org/x/mod/module.Version>
bucket<cmd/vendor/golang.org/x/mod/module.Version,cmd/vendor/golang.org/x/mod/module.Version>
*bucket<cmd/vendor/golang.org/x/mod/module.Version,error>
bucket<cmd/vendor/golang.org/x/mod/module.Version,error>
*bucket<cmd/vendor/golang.org/x/mod/module.Version,*runtime/debug.Module>
bucket<cmd/vendor/golang.org/x/mod/module.Version,*runtime/debug.Module>
*bucket<cmd/vendor/golang.org/x/mod/module.Version,[]string>
*bucket<cmd/vendor/golang.org/x/mod/module.Version,string>
bucket<cmd/vendor/golang.org/x/mod/module.Version,[]string>
bucket<cmd/vendor/golang.org/x/mod/module.Version,string>
*bucket<cmd/vendor/golang.org/x/mod/sumdb/note.nameHash,bool>
bucket<cmd/vendor/golang.org/x/mod/sumdb/note.nameHash,bool>
*bucket<cmd/vendor/golang.org/x/mod/sumdb/note.nameHash,[]cmd/vendor/golang.org/x/mod/sumdb/note.Verifier>
bucket<cmd/vendor/golang.org/x/mod/sumdb/note.nameHash,[]cmd/vendor/golang.org/x/mod/sumdb/note.Verifier>
*bucket<cmd/vendor/golang.org/x/mod/sumdb/tlog.Tile,bool>
bucket<cmd/vendor/golang.org/x/mod/sumdb/tlog.Tile,bool>
*bucket<cmd/vendor/golang.org/x/mod/sumdb/tlog.Tile,int>
bucket<cmd/vendor/golang.org/x/mod/sumdb/tlog.Tile,int>
*bucket<context.canceler,struct {}>
bucket<context.canceler,struct {}>
*bucket<crypto.Hash,encoding/asn1.RawValue>
bucket<crypto.Hash,encoding/asn1.RawValue>
*bucket<crypto.Hash,[]uint8>
bucket<crypto.Hash,[]uint8>
*bucket<crypto/tls.alert,string>
bucket<crypto/tls.alert,string>
*bucket<crypto/x509.sum224,bool>
bucket<crypto/x509.sum224,bool>
*bucket<debug/dwarf.Attr,bool>
bucket<debug/dwarf.Attr,bool>
*bucket<debug/dwarf.Attr,debug/dwarf.Class>
bucket<debug/dwarf.Attr,debug/dwarf.Class>
*bucket<debug/dwarf.Attr,string>
bucket<debug/dwarf.Attr,string>
*bucket<debug/dwarf.Offset,debug/dwarf.Type>
bucket<debug/dwarf.Offset,debug/dwarf.Type>
*bucket<error,*cmd/go/internal/modfetch.RevInfo>
bucket<error,*cmd/go/internal/modfetch.RevInfo>
*bucket<go/ast.Decl,bool>
bucket<go/ast.Decl,bool>
*bucket<*go/ast.Object,bool>
bucket<*go/ast.Object,bool>
*bucket<*go/ast.Object,go/ast.Decl>
bucket<*go/ast.Object,go/ast.Decl>
*bucket<go.shape.struct { Path string; Version string "json:\",omitempty\"" },bool>
bucket<go.shape.struct { Path string; Version string "json:\",omitempty\"" },bool>
*bucket<go/token.Token,bool>
bucket<go/token.Token,bool>
*bucket<int32,unsafe.Pointer>
bucket<int32,unsafe.Pointer>
*bucket<int64,chan<- *cmd/go/internal/cache.ProgResponse>
bucket<int64,chan<- *cmd/go/internal/cache.ProgResponse>
*bucket<interface {},struct {}>
bucket<interface {},struct {}>
*bucket<interface {},*sync.entry>
bucket<interface {},*sync.entry>
*bucket<internal/abi.TypeOff,*internal/abi.Type>
bucket<internal/abi.TypeOff,*internal/abi.Type>
*bucket<internal/intern.key,*internal/intern.Value>
bucket<internal/intern.key,*internal/intern.Value>
*bucket<internal/intern.key,uintptr>
bucket<internal/intern.key,uintptr>
*bucket<internal/platform.OSArch,internal/platform.osArchInfo>
bucket<internal/platform.OSArch,internal/platform.osArchInfo>
*bucket<int,int>
bucket<int,int>
*bucket<int,*internal/xcoff.Symbol>
bucket<int,*internal/xcoff.Symbol>
*bucket<int,string>
bucket<int,string>
*bucket<net.hostLookupOrder,string>
bucket<net.hostLookupOrder,string>
*bucket<net/http.cancelKey,func(error)>
bucket<net/http.cancelKey,func(error)>
*bucket<net/http.connectMethodKey,int>
bucket<net/http.connectMethodKey,int>
*bucket<net/http.connectMethodKey,[]*net/http.persistConn>
bucket<net/http.connectMethodKey,[]*net/http.persistConn>
*bucket<net/http.connectMethodKey,net/http.wantConnQueue>
bucket<net/http.connectMethodKey,net/http.wantConnQueue>
*bucket<net/http.ConnState,string>
bucket<net/http.ConnState,string>
*bucket<*net/http.http2ClientConn,[]string>
bucket<*net/http.http2ClientConn,[]string>
*bucket<net/http.http2ErrCode,string>
bucket<net/http.http2ErrCode,string>
*bucket<net/http.http2Flags,string>
bucket<net/http.http2Flags,string>
*bucket<net/http.http2FrameType,map[net/http.http2Flags]string>
bucket<net/http.http2FrameType,map[net/http.http2Flags]string>
*bucket<net/http.http2FrameType,net/http.http2frameParser>
bucket<net/http.http2FrameType,net/http.http2frameParser>
*bucket<net/http.http2FrameType,string>
bucket<net/http.http2FrameType,string>
*bucket<net/http.http2SettingID,bool>
bucket<net/http.http2SettingID,bool>
*bucket<net/http.http2SettingID,string>
bucket<net/http.http2SettingID,string>
*bucket<*net/http.persistConn,*container/list.Element>
bucket<*net/http.persistConn,*container/list.Element>
*bucket<*reflect.structType,bool>
bucket<*reflect.structType,bool>
*bucket<*reflect.structType,int>
bucket<*reflect.structType,int>
*bucket<reflect.Type,bool>
bucket<reflect.Type,bool>
*bucket<reflect.Type,int>
bucket<reflect.Type,int>
*bucket<reflect.visit,bool>
bucket<reflect.visit,bool>
*bucket<*regexp/syntax.Regexp,int>
bucket<*regexp/syntax.Regexp,int>
*bucket<*regexp/syntax.Regexp,int64>
bucket<*regexp/syntax.Regexp,int64>
*bucket<runtime._typePair,struct {}>
bucket<runtime._typePair,struct {}>
*bucket<string,[32]uint8>
bucket<string,[32]uint8>
*bucket<string,*archive/zip.File>
bucket<string,*archive/zip.File>
*bucket<string,bool>
bucket<string,bool>
*bucket<string,cmd/go/internal/cache.ActionID>
bucket<string,cmd/go/internal/cache.ActionID>
*bucket<string,*cmd/go/internal/fsys.node>
bucket<string,*cmd/go/internal/fsys.node>
*bucket<string,*cmd/go/internal/load.CoverVar>
bucket<string,*cmd/go/internal/load.CoverVar>
*bucket<string,*cmd/go/internal/load.Package>
*bucket<string,[]*cmd/go/internal/load.Package>
bucket<string,*cmd/go/internal/load.Package>
bucket<string,[]*cmd/go/internal/load.Package>
*bucket<string,*cmd/go/internal/modfetch/codehost.vcsCmd>
bucket<string,*cmd/go/internal/modfetch/codehost.vcsCmd>
*bucket<string,cmd/go/internal/modget.change·3>
bucket<string,cmd/go/internal/modget.change·3>
*bucket<string,*cmd/go/internal/modget.query>
bucket<string,*cmd/go/internal/modget.query>
*bucket<string,cmd/go/internal/modget.versionReason>
bucket<string,cmd/go/internal/modget.versionReason>
*bucket<string,[]*cmd/go/internal/modinfo.ModulePublic>
bucket<string,[]*cmd/go/internal/modinfo.ModulePublic>
*bucket<string,cmd/go/internal/vcs.fetchResult>
bucket<string,cmd/go/internal/vcs.fetchResult>
*bucket<string,cmd/vendor/golang.org/x/mod/modfile.elem·1>
bucket<string,cmd/vendor/golang.org/x/mod/modfile.elem·1>
*bucket<string,*cmd/vendor/golang.org/x/mod/modfile.Replace>
bucket<string,*cmd/vendor/golang.org/x/mod/modfile.Replace>
*bucket<string,*cmd/vendor/golang.org/x/mod/modfile.Require>
bucket<string,*cmd/vendor/golang.org/x/mod/modfile.Require>
*bucket<string,cmd/vendor/golang.org/x/mod/module.Version>
bucket<string,cmd/vendor/golang.org/x/mod/module.Version>
*bucket<string,cmd/vendor/golang.org/x/mod/zip.pathInfo>
bucket<string,cmd/vendor/golang.org/x/mod/zip.pathInfo>
*bucket<string,*crypto/tls.Certificate>
bucket<string,*crypto/tls.Certificate>
*bucket<string,*encoding/json.field>
bucket<string,*encoding/json.field>
*bucket<string,*flag.Flag>
bucket<string,*flag.Flag>
*bucket<string,func(bool)>
bucket<string,func(bool)>
*bucket<string,func(string, *crypto/tls.Conn) net/http.RoundTripper>
bucket<string,func(string, *crypto/tls.Conn) net/http.RoundTripper>
*bucket<string,func(string, []uint8) (*cmd/vendor/golang.org/x/mod/modfile.File, error)>
bucket<string,func(string, []uint8) (*cmd/vendor/golang.org/x/mod/modfile.File, error)>
*bucket<string,[]go/ast.Decl>
bucket<string,[]go/ast.Decl>
*bucket<string,*go/ast.File>
bucket<string,*go/ast.File>
*bucket<string,*go/ast.Object>
bucket<string,*go/ast.Object>
*bucket<string,*go/doc/comment.LinkDef>
bucket<string,*go/doc/comment.LinkDef>
*bucket<string,[]*go/doc.Note>
bucket<string,[]*go/doc.Note>
*bucket<string,[]go/token.Position>
*bucket<string,go/token.Position>
bucket<string,[]go/token.Position>
bucket<string,go/token.Position>
*bucket<string,go/token.Token>
bucket<string,go/token.Token>
*bucket<string,[]int>
*bucket<string,int>
bucket<string,[]int>
bucket<string,int>
*bucket<string,int32>
bucket<string,int32>
*bucket<string,interface {}>
bucket<string,interface {}>
*bucket<string,*internal/singleflight.call>
bucket<string,*internal/singleflight.call>
*bucket<string,io/fs.FileInfo>
bucket<string,io/fs.FileInfo>
*bucket<string,map[cmd/vendor/golang.org/x/mod/module.Version][]string>
bucket<string,map[cmd/vendor/golang.org/x/mod/module.Version][]string>
*bucket<string,map[string]int>
bucket<string,map[string]int>
*bucket<string,map[string]string>
bucket<string,map[string]string>
*bucket<string,[]*mime/multipart.FileHeader>
bucket<string,[]*mime/multipart.FileHeader>
*bucket<string,net.byName>
bucket<string,net.byName>
*bucket<string,[]*net/http.Cookie>
bucket<string,[]*net/http.Cookie>
*bucket<string,*net/http.http2addConnCall>
bucket<string,*net/http.http2addConnCall>
*bucket<string,[]*net/http.http2ClientConn>
bucket<string,[]*net/http.http2ClientConn>
*bucket<string,*net/http.http2dialCall>
bucket<string,*net/http.http2dialCall>
*bucket<string,net/http.RoundTripper>
bucket<string,net/http.RoundTripper>
*bucket<string,[]net.nssSource>
bucket<string,[]net.nssSource>
*bucket<string,reflect.Value>
bucket<string,reflect.Value>
*bucket<string,regexp/syntax.charGroup>
bucket<string,regexp/syntax.charGroup>
*bucket<string,runtime.metricData>
bucket<string,runtime.metricData>
*bucket<string,[]string>
*bucket<string,string>
bucket<string,[]string>
bucket<string,string>
*bucket<string,struct {}>
bucket<string,struct {}>
*bucket<string,text/template/parse.itemType>
bucket<string,text/template/parse.itemType>
*bucket<string,*text/template/parse.Tree>
bucket<string,*text/template/parse.Tree>
*bucket<string,*text/template.Template>
bucket<string,*text/template.Template>
*bucket<string,uint64>
bucket<string,uint64>
*bucket<string,[]uint8>
bucket<string,[]uint8>
*bucket<string,*unicode.RangeTable>
bucket<string,*unicode.RangeTable>
*bucket<uint16,archive/zip.Compressor>
bucket<uint16,archive/zip.Compressor>
*bucket<uint16,archive/zip.Decompressor>
bucket<uint16,archive/zip.Decompressor>
*bucket<uint16,bool>
bucket<uint16,bool>
*bucket<uint16,string>
bucket<uint16,string>
*bucket<uint32,debug/dwarf.abbrev>
bucket<uint32,debug/dwarf.abbrev>
*bucket<uint32,int32>
bucket<uint32,int32>
*bucket<uint32,[]*internal/abi.Type>
bucket<uint32,[]*internal/abi.Type>
*bucket<uint32,*net/http.http2clientStream>
bucket<uint32,*net/http.http2clientStream>
*bucket<uint64,bool>
bucket<uint64,bool>
*bucket<uint64,debug/dwarf.abbrevTable>
bucket<uint64,debug/dwarf.abbrevTable>
*bucket<uint64,*debug/dwarf.typeUnit>
bucket<uint64,*debug/dwarf.typeUnit>
*bucket<uint8,uint8>
bucket<uint8,uint8>
*bucket<*uint8,[]uint8>
bucket<*uint8,[]uint8>
*bucket<unsafe.Pointer,int32>
bucket<unsafe.Pointer,int32>
*bucket<vendor/golang.org/x/net/dns/dnsmessage.Class,string>
bucket<vendor/golang.org/x/net/dns/dnsmessage.Class,string>
*bucket<vendor/golang.org/x/net/dns/dnsmessage.RCode,string>
bucket<vendor/golang.org/x/net/dns/dnsmessage.RCode,string>
*bucket<vendor/golang.org/x/net/dns/dnsmessage.section,string>
bucket<vendor/golang.org/x/net/dns/dnsmessage.section,string>
*bucket<vendor/golang.org/x/net/http2/hpack.pairNameValue,uint64>
bucket<vendor/golang.org/x/net/http2/hpack.pairNameValue,uint64>
*bufio.Reader
bufio.Reader
*bufio.Scanner
bufio.Scanner
bufio.SplitFunc
*bufio.Writer
bufio.Writer
Builder }
/build.gopath []string } }
*bytes.asciiSet
bytes.asciiSet
**bytes.Buffer
*bytes.Buffer
bytes.Buffer
*bytes.Reader
bytes.Reader
bytes.readOp
.Cache[go.shape.string,go.shape.bool]; cmd/go/internal/par..dict *[22]uintptr }
.Cache[go.shape.string,go.shape.interface { Error() string }]; cmd/go/internal/par..dict *[22]uintptr }
.Cache[go.shape.string,go.shape.string]; cmd/go/internal/par..dict *[22]uintptr }
.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v bool; cmd/go/internal/par.err error }]; cmd/go/intern
.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch/codehost.RevInfo; cmd/go/in
.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch.RevInfo; cmd/go/internal/pa
.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch.Versions; cmd/go/internal/p
.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modindex.Module; cmd/go/internal/par
.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v cmd/go/internal/vcs.Status; cmd/go/internal/par.err e
.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v cmd/vendor/golang.org/x/mod/module.Version; cmd/go/in
.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v *go/build.Package; cmd/go/internal/par.err error }]; 
.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v []uint8; cmd/go/internal/par.err error }]; cmd/go/int
.Cache[go.shape.string,go.shape.*uint8]; cmd/go/internal/par..dict *[22]uintptr }
Cache[go.shape.struct { cmd/go/internal/load.path string; cmd/go/internal/load.parentPath string; cmd/go/internal/lo
.Cache[go.shape.struct { cmd/go/internal/modget.pattern string; cmd/go/internal/modget.m cmd/vendor/golang.org/x/mod
cache.varp uintptr; cmd/go/internal/cache.framepc uintptr }
callsp uintptr; runtime.syscallpc uintptr; runtime.stktopsp uintptr; runtime.param unsafe.Pointer; runtime.atomicsta
c(*cmd/go/internal/work.Action); cmd/go/internal/work.all *[]*cmd/go/internal/work.Action }
c/comment.text *[]string }
.certBytes *[]uint8 }
cf *cmd/vendor/golang.org/x/mod/zip.CheckedFiles }
cfreetrace int32; runtime.inittrace int32; runtime.sbrk int32; runtime.panicnil runtime/internal/atomic.Int32 }
chan bool
chan<- bool
*chan<- *cmd/go/internal/cache.ProgResponse
chan *cmd/go/internal/cache.ProgResponse
chan<- *cmd/go/internal/cache.ProgResponse
chan cmd/go/internal/modcmd.token·1
chan cmd/go/internal/modcmd.token·2
chan cmd/go/internal/modconv.token·1
chan cmd/go/internal/modload.token·2
<-chan cmd/go/internal/par.queueState
chan cmd/go/internal/par.queueState
chan<- cmd/go/internal/par.queueState
<-chan cmd/go/internal/trace.traceFile
chan cmd/go/internal/trace.traceFile
chan<- cmd/go/internal/trace.traceFile
*<-chan []error
<-chan []error
<-chan error
[]<-chan []error
chan []error
chan error
chan<- error
 chan error; crypto/tls.done chan struct {} }
chan int
*chan<- internal/singleflight.Result
<-chan internal/singleflight.Result
[]chan<- internal/singleflight.Result
chan internal/singleflight.Result
chan<- internal/singleflight.Result
<-chan internal/singleflight.Result; net..autotmp_44 context.CancelFunc }
<-chan internal/singleflight.Result; net..autotmp_47 context.CancelFunc }
chan map[*cmd/go/internal/modload.loadPkg]cmd/go/internal/modload.mismatch·4
chan map[cmd/vendor/golang.org/x/mod/module.Version]bool
chan net.dialResult·2
 chan net.dialResult·2; net.returned chan struct {} }
<-chan net/http.readResult
chan net/http.readResult
chan<- net/http.readResult
<-chan net/http.requestAndChan
chan net/http.requestAndChan
chan<- net/http.requestAndChan
chan net/http.responseAndError
chan net/http.writeRequest
chan<- net/http.writeRequest
chan net.result·3
chan net.result[go.shape.int]·1
chan net.result[go.shape.[]net.IPAddr]·1
chan net.result[int]·1
chan net.result[[]net.IPAddr]·1
<-chan os/exec.ctxResult
chan os/exec.ctxResult
chan<- os/exec.ctxResult
chan os/exec.goroutineStatus·1
*chan<- os.Signal
chan os.Signal
chan<- os.Signal
*chan struct {}
<-chan struct {}
chan struct {}
chan<- struct {}
<-chan time.Time
chan time.Time
chan uint32
ch/codehost.remote string },go.shape.interface { CheckReuse(context.Context, *cmd/go/internal/modfetch/codehost.Orig
ched runtime.gobuf; runtime.syscallsp uintptr; runtime.syscallpc uintptr; runtime.stktopsp uintptr; runtime.param un
ch.RevInfo; cmd/go/internal/modload.versions *cmd/go/internal/modfetch.Versions; cmd/go/internal/modload.query strin
c() (interface {}, error) }
ckage]*cmd/go/internal/load.Package; cmd/go/internal/load.p **cmd/go/internal/load.Package; cmd/go/internal/load.pre
*cmd/go/internal/auth.netrcLine
[]cmd/go/internal/auth.netrcLine
cmd/go/internal/auth.netrcLine
cmd/go/internal/base.boolFlag
**cmd/go/internal/base.Command
*cmd/go/internal/base.Command
[]*cmd/go/internal/base.Command
cmd/go/internal/base.Command
*cmd/go/internal/base.explicitStringFlag
cmd/go/internal/base.explicitStringFlag
*cmd/go/internal/base.netTokenChecker
cmd/go/internal/base.netTokenChecker
*cmd/go/internal/base.StringsFlag
cmd/go/internal/base.StringsFlag
cmd/go/internal/bug.framepc uintptr }
cmd/go/internal/bug.sp uintptr; cmd/go/internal/bug.pc uintptr; cmd/go/internal/bug.fn uintptr; cmd/go/internal/bug.
*cmd/go/internal/cache.ActionID
cmd/go/internal/cache.ActionID
cmd/go/internal/cache.Cache
*cmd/go/internal/cache.DiskCache
cmd/go/internal/cache.DiskCache
*cmd/go/internal/cache.Entry
cmd/go/internal/cache.Entry
*cmd/go/internal/cache.entryNotFoundError
cmd/go/internal/cache.entryNotFoundError
*cmd/go/internal/cache.Hash
cmd/go/internal/cache.Hash
*cmd/go/internal/cache.noVerifyReadSeeker
cmd/go/internal/cache.noVerifyReadSeeker
*cmd/go/internal/cache.OutputID
cmd/go/internal/cache.OutputID
*cmd/go/internal/cache.ProgCache
cmd/go/internal/cache.ProgCache
*cmd/go/internal/cache.ProgCmd
[]cmd/go/internal/cache.ProgCmd
cmd/go/internal/cache.ProgCmd
*cmd/go/internal/cache.ProgRequest
cmd/go/internal/cache.ProgRequest
**cmd/go/internal/cache.ProgResponse
*cmd/go/internal/cache.ProgResponse
cmd/go/internal/cache.ProgResponse
; cmd/go/internal/cache.req *cmd/go/internal/cache.ProgRequest }
cmd/go/internal/cfg.buildXContextKey
*cmd/go/internal/cfg.EnvVar
[]cmd/go/internal/cfg.EnvVar
cmd/go/internal/cfg.EnvVar
cmd/go/internal/cmdflag.boolFlag
*cmd/go/internal/cmdflag.FlagNotDefinedError
cmd/go/internal/cmdflag.FlagNotDefinedError
*cmd/go/internal/cmdflag.NonFlagError
cmd/go/internal/cmdflag.NonFlagError
*cmd/go/internal/fsys.fakeDir
cmd/go/internal/fsys.fakeDir
*cmd/go/internal/fsys.fakeFile
cmd/go/internal/fsys.fakeFile
*cmd/go/internal/fsys.missingFile
cmd/go/internal/fsys.missingFile
**cmd/go/internal/fsys.node
*cmd/go/internal/fsys.node
cmd/go/internal/fsys.node
*cmd/go/internal/fsys.OverlayJSON
cmd/go/internal/fsys.OverlayJSON
*cmd/go/internal/generate.Generator
cmd/go/internal/generate.Generator
cmd/go/internal/gover.Switcher
**cmd/go/internal/gover.TooNewError
*cmd/go/internal/gover.TooNewError
cmd/go/internal/gover.TooNewError
*cmd/go/internal/gover.version
cmd/go/internal/gover.version
*cmd/go/internal/help.commentWriter
cmd/go/internal/help.commentWriter
*cmd/go/internal/help.errWriter
cmd/go/internal/help.errWriter
*cmd/go/internal/imports.importReader
cmd/go/internal/imports.importReader
**cmd/go/internal/list.Context
*cmd/go/internal/list.Context
cmd/go/internal/list.Context
*cmd/go/internal/list.jsonFlag
cmd/go/internal/list.jsonFlag
*cmd/go/internal/list.testPackageSet·1
[]cmd/go/internal/list.testPackageSet·1
cmd/go/internal/list.testPackageSet·1
*cmd/go/internal/list.TrackingWriter
cmd/go/internal/list.TrackingWriter
*cmd/go/internal/load.coverInfo
[]cmd/go/internal/load.coverInfo
cmd/go/internal/load.coverInfo
**cmd/go/internal/load.CoverVar
*cmd/go/internal/load.CoverVar
cmd/go/internal/load.CoverVar
cmd/go/internal/load.ctx context.Context; cmd/go/internal/load.path string; cmd/go/internal/load.mode int; cmd/go/in
**cmd/go/internal/load.EmbedError
*cmd/go/internal/load.EmbedError
cmd/go/internal/load.EmbedError
 cmd/go/internal/load.err error }]
cmd/go/internal/load.err error }]
cmd/go/internal/load.file string; cmd/go/internal/load.updateBuildInfo func(*cmd/go/internal/load.Package, string); 
*cmd/go/internal/load.importError
cmd/go/internal/load.importError
*cmd/go/internal/load.ImportPathError
cmd/go/internal/load.ImportPathError
*cmd/go/internal/load.importSpec
cmd/go/internal/load.importSpec
*cmd/go/internal/load.ImportStack
cmd/go/internal/load.ImportStack
; cmd/go/internal/load.list *[]string }
*cmd/go/internal/load.mainPackageError
cmd/go/internal/load.mainPackageError
**cmd/go/internal/load.NoGoError
*cmd/go/internal/load.NoGoError
cmd/go/internal/load.NoGoError
**cmd/go/internal/load.Package
*[]*cmd/go/internal/load.Package
*cmd/go/internal/load.Package
[]*cmd/go/internal/load.Package
cmd/go/internal/load.Package
cmd/go/internal/load.Package; cmd/go/internal/load.stk *cmd/go/internal/load.ImportStack; cmd/go/internal/load.pxtes
**cmd/go/internal/load.PackageError
*cmd/go/internal/load.PackageError
[]*cmd/go/internal/load.PackageError
cmd/go/internal/load.PackageError
cmd/go/internal/load.PackageInternal
*cmd/go/internal/load.PackageOpts
cmd/go/internal/load.PackageOpts
*cmd/go/internal/load.PackagePublic
cmd/go/internal/load.PackagePublic
; cmd/go/internal/load.parentDir string; cmd/go/internal/load.parentRoot string; cmd/go/internal/load.parentIsStd bo
*cmd/go/internal/load.PerPackageFlag
cmd/go/internal/load.PerPackageFlag
*cmd/go/internal/load.ppfValue
[]cmd/go/internal/load.ppfValue
cmd/go/internal/load.ppfValue
*cmd/go/internal/load.preload
cmd/go/internal/load.preload
*cmd/go/internal/load.resolvedImport
cmd/go/internal/load.resolvedImport
cmd/go/internal/load.split *func(*cmd/go/internal/load.Package) *cmd/go/internal/load.Package }
cmd/go/internal/load.TargetDir
*cmd/go/internal/load.TestCover
cmd/go/internal/load.TestCover
*cmd/go/internal/load.testFunc
[]cmd/go/internal/load.testFunc
cmd/go/internal/load.testFunc
*cmd/go/internal/load.testFuncs
cmd/go/internal/load.testFuncs
*cmd/go/internal/lockedfile.File
cmd/go/internal/lockedfile.File
cmd/go/internal/lockedfile.File }
cmd/go/internal/lockedfile/internal/filelock.File
cmd/go/internal/lockedfile/internal/filelock.lockType
*cmd/go/internal/lockedfile.Mutex
cmd/go/internal/lockedfile.Mutex
*cmd/go/internal/lockedfile.osFile
cmd/go/internal/lockedfile.osFile
cmd/go/internal/mmap.Data
*cmd/go/internal/modcmd.editModuleJSON
cmd/go/internal/modcmd.editModuleJSON
*cmd/go/internal/modcmd.fileJSON
cmd/go/internal/modcmd.fileJSON
*cmd/go/internal/modcmd.flagFunc
cmd/go/internal/modcmd.flagFunc
*cmd/go/internal/modcmd.goVersionFlag
cmd/go/internal/modcmd.goVersionFlag
*cmd/go/internal/modcmd.metakey
cmd/go/internal/modcmd.metakey
**cmd/go/internal/modcmd.ModuleJSON
*cmd/go/internal/modcmd.ModuleJSON
[]*cmd/go/internal/modcmd.ModuleJSON
cmd/go/internal/modcmd.ModuleJSON
*cmd/go/internal/modcmd.replaceJSON
[]cmd/go/internal/modcmd.replaceJSON
cmd/go/internal/modcmd.replaceJSON
*cmd/go/internal/modcmd.requireJSON
[]cmd/go/internal/modcmd.requireJSON
cmd/go/internal/modcmd.requireJSON
*cmd/go/internal/modcmd.retractJSON
[]cmd/go/internal/modcmd.retractJSON
cmd/go/internal/modcmd.retractJSON
*cmd/go/internal/modcmd.token·1
cmd/go/internal/modcmd.token·1
*cmd/go/internal/modcmd.token·2
cmd/go/internal/modcmd.token·2
 cmd/go/internal/modconv..autotmp_39 int; cmd/go/internal/modconv..autotmp_40 cmd/vendor/golang.org/x/mod/module.Ver
*cmd/go/internal/modconv.pkg·2
[]cmd/go/internal/modconv.pkg·2
cmd/go/internal/modconv.pkg·2
*cmd/go/internal/modconv.token·1
cmd/go/internal/modconv.token·1
; cmd/go/internal/modconv.varp uintptr; cmd/go/internal/modconv.framepc uintptr }
*cmd/go/internal/modfetch.cachingRepo
cmd/go/internal/modfetch.cachingRepo
*cmd/go/internal/modfetch/codehost.deleteCloser
cmd/go/internal/modfetch/codehost.deleteCloser
*cmd/go/internal/modfetch/codehost.gitRepo
cmd/go/internal/modfetch/codehost.gitRepo
*cmd/go/internal/modfetch/codehost.limitedWriter
cmd/go/internal/modfetch/codehost.limitedWriter
*cmd/go/internal/modfetch/codehost.listEntry·1
[]cmd/go/internal/modfetch/codehost.listEntry·1
cmd/go/internal/modfetch/codehost.listEntry·1
*cmd/go/internal/modfetch/codehost.noCommitsError
cmd/go/internal/modfetch/codehost.noCommitsError
*cmd/go/internal/modfetch/codehost.notExistError
cmd/go/internal/modfetch/codehost.notExistError
**cmd/go/internal/modfetch/codehost.Origin
*cmd/go/internal/modfetch/codehost.Origin
cmd/go/internal/modfetch/codehost.Origin
*cmd/go/internal/modfetch/codehost.Origin) error; GoMod(context.Context, string) ([]uint8, error); Latest(context.Co
*cmd/go/internal/modfetch/codehost.Repo
cmd/go/internal/modfetch/codehost.Repo
**cmd/go/internal/modfetch/codehost.RevInfo
*cmd/go/internal/modfetch/codehost.RevInfo
cmd/go/internal/modfetch/codehost.RevInfo
 (*cmd/go/internal/modfetch/codehost.RevInfo, error); ReadFile(context.Context, string, string, int64) ([]uint8, err
(*cmd/go/internal/modfetch/codehost.RevInfo, error); ReadFile(context.Context, string, string, int64) ([]uint8, erro
*cmd/go/internal/modfetch/codehost.RunError
cmd/go/internal/modfetch/codehost.RunError
*cmd/go/internal/modfetch/codehost.Tag
[]cmd/go/internal/modfetch/codehost.Tag
cmd/go/internal/modfetch/codehost.Tag
*cmd/go/internal/modfetch/codehost.Tags
cmd/go/internal/modfetch/codehost.Tags
*cmd/go/internal/modfetch/codehost.UnknownRevisionError
cmd/go/internal/modfetch/codehost.UnknownRevisionError
*cmd/go/internal/modfetch/codehost.vcsCacheKey
cmd/go/internal/modfetch/codehost.vcsCacheKey
**cmd/go/internal/modfetch/codehost.vcsCmd
*cmd/go/internal/modfetch/codehost.vcsCmd
cmd/go/internal/modfetch/codehost.vcsCmd
*cmd/go/internal/modfetch/codehost.VCSError
cmd/go/internal/modfetch/codehost.VCSError
*cmd/go/internal/modfetch/codehost.vcsRepo
cmd/go/internal/modfetch/codehost.vcsRepo
*cmd/go/internal/modfetch.codeRepo
cmd/go/internal/modfetch.codeRepo
cmd/go/internal/modfetch.codeRepo; cmd/go/internal/modfetch.canUseIncompatible func(string) bool; cmd/go/internal/mo
*cmd/go/internal/modfetch.dataFile
cmd/go/internal/modfetch.dataFile
*cmd/go/internal/modfetch.dataFileInfo
cmd/go/internal/modfetch.dataFileInfo
*cmd/go/internal/modfetch.dbClient
cmd/go/internal/modfetch.dbClient
*cmd/go/internal/modfetch.DownloadDirPartialError
cmd/go/internal/modfetch.DownloadDirPartialError
*cmd/go/internal/modfetch.errRepo
cmd/go/internal/modfetch.errRepo
*cmd/go/internal/modfetch.loggingRepo
cmd/go/internal/modfetch.loggingRepo
*cmd/go/internal/modfetch.lookupCacheKey
cmd/go/internal/modfetch.lookupCacheKey
*cmd/go/internal/modfetch.lookupDisabledError
cmd/go/internal/modfetch.lookupDisabledError
 cmd/go/internal/modfetch.mod cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/modfetch.f *os.File }
*cmd/go/internal/modfetch.modSum
cmd/go/internal/modfetch.modSum
*cmd/go/internal/modfetch.modSumStatus
cmd/go/internal/modfetch.modSumStatus
*cmd/go/internal/modfetch.notExistError
cmd/go/internal/modfetch.notExistError
*[]cmd/go/internal/modfetch.pathMode·1
*cmd/go/internal/modfetch.pathMode·1
[]cmd/go/internal/modfetch.pathMode·1
cmd/go/internal/modfetch.pathMode·1
*cmd/go/internal/modfetch.proxyRepo
cmd/go/internal/modfetch.proxyRepo
*cmd/go/internal/modfetch.proxySpec
[]cmd/go/internal/modfetch.proxySpec
cmd/go/internal/modfetch.proxySpec
*cmd/go/internal/modfetch.Repo
cmd/go/internal/modfetch.Repo
**cmd/go/internal/modfetch.RevInfo
*cmd/go/internal/modfetch.RevInfo
cmd/go/internal/modfetch.RevInfo
*cmd/go/internal/modfetch.toolchainRepo
cmd/go/internal/modfetch.toolchainRepo
**cmd/go/internal/modfetch.Versions
*cmd/go/internal/modfetch.Versions
cmd/go/internal/modfetch.Versions
cmd/go/internal/modfetch.Versions, error); Zip(context.Context, io.Writer, string) error }
*cmd/go/internal/modfetch.zipFile
cmd/go/internal/modfetch.zipFile
*cmd/go/internal/modget.change·3
[]cmd/go/internal/modget.change·3
cmd/go/internal/modget.change·3
*cmd/go/internal/modget.conflictError
cmd/go/internal/modget.conflictError
*cmd/go/internal/modget.matchInModuleKey
cmd/go/internal/modget.matchInModuleKey
*cmd/go/internal/modget.modFlags·1
cmd/go/internal/modget.modFlags·1
*cmd/go/internal/modget.modMessage·2
[]cmd/go/internal/modget.modMessage·2
cmd/go/internal/modget.modMessage·2
*[]cmd/go/internal/modget.pathSet
*cmd/go/internal/modget.pathSet
[]cmd/go/internal/modget.pathSet
cmd/go/internal/modget.pathSet
**cmd/go/internal/modget.query
*cmd/go/internal/modget.query
[]*cmd/go/internal/modget.query
cmd/go/internal/modget.query
*cmd/go/internal/modget.resolver
cmd/go/internal/modget.resolver
*cmd/go/internal/modget.upgradeFlag
cmd/go/internal/modget.upgradeFlag
*cmd/go/internal/modget.versionReason
cmd/go/internal/modget.versionReason
cmd/go/internal/modindex.addrer·1
*cmd/go/internal/modindex.Context
cmd/go/internal/modindex.Context
*cmd/go/internal/modindex.decoder
cmd/go/internal/modindex.decoder
*cmd/go/internal/modindex.embed
[]cmd/go/internal/modindex.embed
cmd/go/internal/modindex.embed
*cmd/go/internal/modindex.encoder
cmd/go/internal/modindex.encoder
*cmd/go/internal/modindex.fileEmbed
[]cmd/go/internal/modindex.fileEmbed
cmd/go/internal/modindex.fileEmbed
*cmd/go/internal/modindex.fileImport
[]cmd/go/internal/modindex.fileImport
cmd/go/internal/modindex.fileImport
*cmd/go/internal/modindex.fileInfo
cmd/go/internal/modindex.fileInfo
*cmd/go/internal/modindex.importReader
cmd/go/internal/modindex.importReader
**cmd/go/internal/modindex.IndexPackage
*cmd/go/internal/modindex.IndexPackage
cmd/go/internal/modindex.IndexPackage
**cmd/go/internal/modindex.Module
*cmd/go/internal/modindex.Module
cmd/go/internal/modindex.Module
*cmd/go/internal/modindex.MultiplePackageError
cmd/go/internal/modindex.MultiplePackageError
*cmd/go/internal/modindex.parseError
cmd/go/internal/modindex.parseError
; cmd/go/internal/modindex.p **go/build.Package }
**cmd/go/internal/modindex.rawFile
*cmd/go/internal/modindex.rawFile
[]*cmd/go/internal/modindex.rawFile
cmd/go/internal/modindex.rawFile
*cmd/go/internal/modindex.rawImport
[]cmd/go/internal/modindex.rawImport
cmd/go/internal/modindex.rawImport
**cmd/go/internal/modindex.rawPackage
*[]*cmd/go/internal/modindex.rawPackage
*cmd/go/internal/modindex.rawPackage
[]*cmd/go/internal/modindex.rawPackage
cmd/go/internal/modindex.rawPackage
*cmd/go/internal/modindex.reader
cmd/go/internal/modindex.reader
**cmd/go/internal/modindex.sourceFile
*cmd/go/internal/modindex.sourceFile
[]*cmd/go/internal/modindex.sourceFile
cmd/go/internal/modindex.sourceFile
*cmd/go/internal/modinfo.ModuleError
cmd/go/internal/modinfo.ModuleError
*cmd/go/internal/modinfo.moduleErrorNoMethods
cmd/go/internal/modinfo.moduleErrorNoMethods
**cmd/go/internal/modinfo.ModulePublic
*[]*cmd/go/internal/modinfo.ModulePublic
*cmd/go/internal/modinfo.ModulePublic
[]*cmd/go/internal/modinfo.ModulePublic
cmd/go/internal/modinfo.ModulePublic
cmd/go/internal/modload.addToolchainRoot
 cmd/go/internal/modload.allowed cmd/go/internal/modload.AllowedFunc; cmd/go/internal/modload.match func(cmd/vendor/
cmd/go/internal/modload.AllowedFunc
**cmd/go/internal/modload.AmbiguousImportError
*cmd/go/internal/modload.AmbiguousImportError
cmd/go/internal/modload.AmbiguousImportError
*cmd/go/internal/modload.atomicLoadPkgFlags
cmd/go/internal/modload.atomicLoadPkgFlags
*cmd/go/internal/modload.cachedGraph
cmd/go/internal/modload.cachedGraph
*cmd/go/internal/modload.Conflict
[]cmd/go/internal/modload.Conflict
cmd/go/internal/modload.Conflict
**cmd/go/internal/modload.ConstraintError
*cmd/go/internal/modload.ConstraintError
cmd/go/internal/modload.ConstraintError
; cmd/go/internal/modload.ctx context.Context; cmd/go/internal/modload.flags cmd/go/internal/modload.loadPkgFlags }
*cmd/go/internal/modload.dedupKey·1
cmd/go/internal/modload.dedupKey·1
*cmd/go/internal/modload.DirectImportFromImplicitDependencyError
cmd/go/internal/modload.DirectImportFromImplicitDependencyError
*cmd/go/internal/modload.dqState
cmd/go/internal/modload.dqState
*cmd/go/internal/modload.dqTracker
cmd/go/internal/modload.dqTracker
*cmd/go/internal/modload.emptyRepo
cmd/go/internal/modload.emptyRepo
*cmd/go/internal/modload.excludedError
cmd/go/internal/modload.excludedError
*cmd/go/internal/modload.goModDirtyError
cmd/go/internal/modload.goModDirtyError
**cmd/go/internal/modload.ImportMissingError
*cmd/go/internal/modload.ImportMissingError
cmd/go/internal/modload.ImportMissingError
**cmd/go/internal/modload.ImportMissingSumError
*cmd/go/internal/modload.ImportMissingSumError
cmd/go/internal/modload.ImportMissingSumError
*cmd/go/internal/modload.invalidImportError
cmd/go/internal/modload.invalidImportError
cmd/go/internal/modload.ListMode
cmd/go/internal/modload.ListMode; cmd/go/internal/modload.ctx context.Context }
 *cmd/go/internal/modload.loader }
*cmd/go/internal/modload.loader
cmd/go/internal/modload.loader
cmd/go/internal/modload.loader; cmd/go/internal/modload.ctx context.Context; cmd/go/internal/modload.testFlags cmd/g
cmd/go/internal/modload.loaderParams
**cmd/go/internal/modload.loadPkg
*cmd/go/internal/modload.loadPkg
[]*cmd/go/internal/modload.loadPkg
cmd/go/internal/modload.loadPkg
cmd/go/internal/modload.loadPkgFlags
*cmd/go/internal/modload.MainModuleSet
cmd/go/internal/modload.MainModuleSet
; cmd/go/internal/modload.matchPattern func(string) bool; cmd/go/internal/modload.firstError func(*cmd/go/internal/s
*cmd/go/internal/modload.mismatch·4
cmd/go/internal/modload.mismatch·4
**cmd/go/internal/modload.modFileIndex
*cmd/go/internal/modload.modFileIndex
[]*cmd/go/internal/modload.modFileIndex
cmd/go/internal/modload.modFileIndex
**cmd/go/internal/modload.modFileSummary
*cmd/go/internal/modload.modFileSummary
cmd/go/internal/modload.modFileSummary
*cmd/go/internal/modload.modPruning
cmd/go/internal/modload.modPruning
*cmd/go/internal/modload.ModuleGraph
cmd/go/internal/modload.ModuleGraph
**cmd/go/internal/modload.ModuleRetractedError
*cmd/go/internal/modload.ModuleRetractedError
cmd/go/internal/modload.ModuleRetractedError
*cmd/go/internal/modload.mvsReqs
cmd/go/internal/modload.mvsReqs
**cmd/go/internal/modload.NoMatchingVersionError
*cmd/go/internal/modload.NoMatchingVersionError
cmd/go/internal/modload.NoMatchingVersionError
*cmd/go/internal/modload.NoPatchBaseError
cmd/go/internal/modload.NoPatchBaseError
**cmd/go/internal/modload.PackageNotInModuleError
*cmd/go/internal/modload.PackageNotInModuleError
cmd/go/internal/modload.PackageNotInModuleError
*cmd/go/internal/modload.PackageOpts
cmd/go/internal/modload.PackageOpts
*cmd/go/internal/modload.PackageOpts; cmd/go/internal/modload.ctx context.Context }
*cmd/go/internal/modload.perPruning[cmd/go/internal/modload.dqState]
cmd/go/internal/modload.perPruning[cmd/go/internal/modload.dqState]
cmd/go/internal/modload.perPruning[go.shape.struct { cmd/go/internal/modload.err error; cmd/go/internal/modload.dep 
*cmd/go/internal/modload.pkgMod·3
[]cmd/go/internal/modload.pkgMod·3
cmd/go/internal/modload.pkgMod·3
cmd/go/internal/modload.pruning·6
*cmd/go/internal/modload.queryDisabledError
cmd/go/internal/modload.queryDisabledError
**cmd/go/internal/modload.queryMatcher
*cmd/go/internal/modload.queryMatcher
cmd/go/internal/modload.queryMatcher
*cmd/go/internal/modload.QueryMatchesMainModulesError
cmd/go/internal/modload.QueryMatchesMainModulesError
*cmd/go/internal/modload.QueryMatchesPackagesInMainModuleError
cmd/go/internal/modload.QueryMatchesPackagesInMainModuleError
**cmd/go/internal/modload.QueryResult
*[]cmd/go/internal/modload.QueryResult
*cmd/go/internal/modload.QueryResult
[]cmd/go/internal/modload.QueryResult
cmd/go/internal/modload.QueryResult
 cmd/go/internal/modload.query string; cmd/go/internal/modload.allowed cmd/go/internal/modload.AllowedFunc; cmd/go/i
*cmd/go/internal/modload.QueryUpgradesAllError
cmd/go/internal/modload.QueryUpgradesAllError
*cmd/go/internal/modload.replacementRepo
cmd/go/internal/modload.replacementRepo
**cmd/go/internal/modload.Requirements
*cmd/go/internal/modload.Requirements
cmd/go/internal/modload.Requirements
*cmd/go/internal/modload.requireMeta
cmd/go/internal/modload.requireMeta
*cmd/go/internal/modload.result·5
[]cmd/go/internal/modload.result·5
cmd/go/internal/modload.result·5
; cmd/go/internal/modload.results *[]cmd/go/internal/modload.QueryResult; cmd/go/internal/modload.modOnly **cmd/go/i
*cmd/go/internal/modload.retraction
[]cmd/go/internal/modload.retraction
cmd/go/internal/modload.retraction
*cmd/go/internal/modload.retractionLoadingError
cmd/go/internal/modload.retractionLoadingError
cmd/go/internal/modload.Root
cmd/go/internal/modload.stdFilter
**cmd/go/internal/modload.sumMissingError
*cmd/go/internal/modload.sumMissingError
cmd/go/internal/modload.sumMissingError
*cmd/go/internal/modload.token·2
cmd/go/internal/modload.token·2
cmd/go/internal/modload.token·2 }
; cmd/go/internal/modload.varp uintptr; cmd/go/internal/modload.framepc uintptr }
*cmd/go/internal/modload.vendorMetadata
cmd/go/internal/modload.vendorMetadata
cmd/go/internal/modload.versionRepo
cmd/go/internal/modload.whichSums
*cmd/go/internal/modload.WildcardInFirstElementError
cmd/go/internal/modload.WildcardInFirstElementError
cmd/go/internal/modload.WriteOpts
*cmd/go/internal/mvs.BuildListError
cmd/go/internal/mvs.BuildListError
*cmd/go/internal/mvs.buildListErrorElem
[]cmd/go/internal/mvs.buildListErrorElem
cmd/go/internal/mvs.buildListErrorElem
*cmd/go/internal/mvs.Graph
cmd/go/internal/mvs.Graph
*cmd/go/internal/mvs.Graph; cmd/go/internal/mvs.work *cmd/go/internal/par.Work[cmd/vendor/golang.org/x/mod/module.Ve
cmd/go/internal/mvs.Reqs
*cmd/go/internal/par.Cache[[2]string,cmd/go/internal/par.errValue[*cmd/go/internal/modindex.IndexPackage]]
cmd/go/internal/par.Cache[[2]string,cmd/go/internal/par.errValue[*cmd/go/internal/modindex.IndexPackage]]
*cmd/go/internal/par.Cache[cmd/go/internal/load.importSpec,cmd/go/internal/load.resolvedImport]
cmd/go/internal/par.Cache[cmd/go/internal/load.importSpec,cmd/go/internal/load.resolvedImport]
*cmd/go/internal/par.Cache[cmd/go/internal/modfetch/codehost.vcsCacheKey,cmd/go/internal/par.errValue[cmd/go/interna
cmd/go/internal/par.Cache[cmd/go/internal/modfetch/codehost.vcsCacheKey,cmd/go/internal/par.errValue[cmd/go/internal
*cmd/go/internal/par.Cache[cmd/go/internal/modfetch.lookupCacheKey,cmd/go/internal/modfetch.Repo]
cmd/go/internal/par.Cache[cmd/go/internal/modfetch.lookupCacheKey,cmd/go/internal/modfetch.Repo]
*cmd/go/internal/par.Cache[cmd/go/internal/modget.matchInModuleKey,cmd/go/internal/par.errValue[[]string]]
cmd/go/internal/par.Cache[cmd/go/internal/modget.matchInModuleKey,cmd/go/internal/par.errValue[[]string]]
*cmd/go/internal/par.Cache[cmd/vendor/golang.org/x/mod/module.Version,cmd/go/internal/par.errValue[*cmd/go/internal/
cmd/go/internal/par.Cache[cmd/vendor/golang.org/x/mod/module.Version,cmd/go/internal/par.errValue[*cmd/go/internal/m
*cmd/go/internal/par.Cache[cmd/vendor/golang.org/x/mod/module.Version,cmd/go/internal/par.errValue[string]]
cmd/go/internal/par.Cache[cmd/vendor/golang.org/x/mod/module.Version,cmd/go/internal/par.errValue[string]]
*cmd/go/internal/par.cacheEntry[bool]
cmd/go/internal/par.cacheEntry[bool]
*cmd/go/internal/par.cacheEntry[cmd/go/internal/load.resolvedImport]
cmd/go/internal/par.cacheEntry[cmd/go/internal/load.resolvedImport]
*cmd/go/internal/par.cacheEntry[cmd/go/internal/modfetch.Repo]
cmd/go/internal/par.cacheEntry[cmd/go/internal/modfetch.Repo]
*cmd/go/internal/par.cacheEntry[*cmd/go/internal/modload.loadPkg]
cmd/go/internal/par.cacheEntry[*cmd/go/internal/modload.loadPkg]
*cmd/go/internal/par.cacheEntry[cmd/go/internal/par.errValue[bool]]
cmd/go/internal/par.cacheEntry[cmd/go/internal/par.errValue[bool]]
*cmd/go/internal/par.cacheEntry[cmd/go/internal/par.errValue[cmd/go/internal/modfetch/codehost.Repo]]
cmd/go/internal/par.cacheEntry[cmd/go/internal/par.errValue[cmd/go/internal/modfetch/codehost.Repo]]
*cmd/go/internal/par.cacheEntry[cmd/go/internal/par.errValue[*cmd/go/internal/modfetch/codehost.RevInfo]]
cmd/go/internal/par.cacheEntry[cmd/go/internal/par.errValue[*cmd/go/internal/modfetch/codehost.RevInfo]]
*cmd/go/internal/par.cacheEntry[cmd/go/internal/par.errValue[*cmd/go/internal/modfetch.RevInfo]]
cmd/go/internal/par.cacheEntry[cmd/go/internal/par.errValue[*cmd/go/internal/modfetch.RevInfo]]
*cmd/go/internal/par.cacheEntry[cmd/go/internal/par.errValue[*cmd/go/internal/modfetch.Versions]]
cmd/go/internal/par.cacheEntry[cmd/go/internal/par.errValue[*cmd/go/internal/modfetch.Versions]]
*cmd/go/internal/par.cacheEntry[cmd/go/internal/par.errValue[*cmd/go/internal/modindex.IndexPackage]]
cmd/go/internal/par.cacheEntry[cmd/go/internal/par.errValue[*cmd/go/internal/modindex.IndexPackage]]
*cmd/go/internal/par.cacheEntry[cmd/go/internal/par.errValue[*cmd/go/internal/modindex.Module]]
cmd/go/internal/par.cacheEntry[cmd/go/internal/par.errValue[*cmd/go/internal/modindex.Module]]
*cmd/go/internal/par.cacheEntry[cmd/go/internal/par.errValue[*cmd/go/internal/modload.modFileSummary]]
cmd/go/internal/par.cacheEntry[cmd/go/internal/par.errValue[*cmd/go/internal/modload.modFileSummary]]
*cmd/go/internal/par.cacheEntry[cmd/go/internal/par.errValue[cmd/go/internal/vcs.Status]]
cmd/go/internal/par.cacheEntry[cmd/go/internal/par.errValue[cmd/go/internal/vcs.Status]]
*cmd/go/internal/par.cacheEntry[cmd/go/internal/par.errValue[cmd/vendor/golang.org/x/mod/module.Version]]
cmd/go/internal/par.cacheEntry[cmd/go/internal/par.errValue[cmd/vendor/golang.org/x/mod/module.Version]]
*cmd/go/internal/par.cacheEntry[cmd/go/internal/par.errValue[*go/build.Package]]
cmd/go/internal/par.cacheEntry[cmd/go/internal/par.errValue[*go/build.Package]]
*cmd/go/internal/par.cacheEntry[cmd/go/internal/par.errValue[string]]
cmd/go/internal/par.cacheEntry[cmd/go/internal/par.errValue[string]]
*cmd/go/internal/par.cacheEntry[error]
cmd/go/internal/par.cacheEntry[error]
*cmd/go/internal/par.cacheEntry[go.shape.bool]
cmd/go/internal/par.cacheEntry[go.shape.bool]
*cmd/go/internal/par.cacheEntry[go.shape.interface { CheckReuse(context.Context, *cmd/go/internal/modfetch/codehost.
cmd/go/internal/par.cacheEntry[go.shape.interface { CheckReuse(context.Context, *cmd/go/internal/modfetch/codehost.O
*cmd/go/internal/par.cacheEntry[go.shape.interface { Error() string }]
cmd/go/internal/par.cacheEntry[go.shape.interface { Error() string }]
*cmd/go/internal/par.cacheEntry[go.shape.string]
cmd/go/internal/par.cacheEntry[go.shape.string]
*cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/load.path string; cmd/go/internal/load.dir string;
cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/load.path string; cmd/go/internal/load.dir string; 
*cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v bool; cmd/go/internal/par.err error }]
cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v bool; cmd/go/internal/par.err error }]
*cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v cmd/go/internal/modfetch/codehost.Repo; cmd/
cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v cmd/go/internal/modfetch/codehost.Repo; cmd/g
*cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch/codehost.RevInfo; 
cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch/codehost.RevInfo; c
*cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch.RevInfo; cmd/go/in
cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch.RevInfo; cmd/go/int
*cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch.Versions; cmd/go/i
cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch.Versions; cmd/go/in
*cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modindex.IndexPackage; cmd/
cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modindex.IndexPackage; cmd/g
*cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modindex.Module; cmd/go/int
cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modindex.Module; cmd/go/inte
*cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modload.modFileSummary; cmd
cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modload.modFileSummary; cmd/
*cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v cmd/go/internal/vcs.Status; cmd/go/internal/
cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v cmd/go/internal/vcs.Status; cmd/go/internal/p
*cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v cmd/vendor/golang.org/x/mod/module.Version; 
cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v cmd/vendor/golang.org/x/mod/module.Version; c
*cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v *go/build.Package; cmd/go/internal/par.err e
cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v *go/build.Package; cmd/go/internal/par.err er
*cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v go.shape.bool; cmd/go/internal/par.err error
cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v go.shape.bool; cmd/go/internal/par.err error 
*cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v go.shape.interface { CheckReuse(context.Cont
cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v go.shape.interface { CheckReuse(context.Conte
*cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v go.shape.[]string; cmd/go/internal/par.err e
cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v go.shape.[]string; cmd/go/internal/par.err er
*cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v go.shape.string; cmd/go/internal/par.err err
cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v go.shape.string; cmd/go/internal/par.err erro
*cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v go.shape.struct { Path string; Version strin
cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v go.shape.struct { Path string; Version string
*cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v go.shape.struct { Revision string; CommitTim
cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v go.shape.struct { Revision string; CommitTime
*cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v go.shape.[]uint8; cmd/go/internal/par.err er
*cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v go.shape.*uint8; cmd/go/internal/par.err err
cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v go.shape.[]uint8; cmd/go/internal/par.err err
cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v go.shape.*uint8; cmd/go/internal/par.err erro
*cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v []string; cmd/go/internal/par.err error }]
*cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v string; cmd/go/internal/par.err error }]
cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v []string; cmd/go/internal/par.err error }]
cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v string; cmd/go/internal/par.err error }]
*cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v []uint8; cmd/go/internal/par.err error }]
cmd/go/internal/par.cacheEntry[go.shape.struct { cmd/go/internal/par.v []uint8; cmd/go/internal/par.err error }]
*cmd/go/internal/par.cacheEntry[go.shape.*uint8]
cmd/go/internal/par.cacheEntry[go.shape.*uint8]
*cmd/go/internal/par.cacheEntry[string]
cmd/go/internal/par.cacheEntry[string]
*cmd/go/internal/par.Cache[go.shape.[2]string,go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modindex.Inde
cmd/go/internal/par.Cache[go.shape.[2]string,go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modindex.Index
*cmd/go/internal/par.Cache[go.shape.[2]string,go.shape.struct { cmd/go/internal/par.v go.shape.*uint8; cmd/go/intern
cmd/go/internal/par.Cache[go.shape.[2]string,go.shape.struct { cmd/go/internal/par.v go.shape.*uint8; cmd/go/interna
*cmd/go/internal/par.Cache[go.shape.string,go.shape.bool]
cmd/go/internal/par.Cache[go.shape.string,go.shape.bool]
*cmd/go/internal/par.Cache[go.shape.string,go.shape.interface { Error() string }]
cmd/go/internal/par.Cache[go.shape.string,go.shape.interface { Error() string }]
*cmd/go/internal/par.Cache[go.shape.string,go.shape.string]
cmd/go/internal/par.Cache[go.shape.string,go.shape.string]
*cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v bool; cmd/go/internal/par.err err
cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v bool; cmd/go/internal/par.err erro
*cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch/codehos
cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch/codehost
*cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch.RevInfo
cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch.RevInfo;
*cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch.Version
cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch.Versions
*cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modindex.Module;
cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modindex.Module; 
*cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v cmd/go/internal/vcs.Status; cmd/g
cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v cmd/go/internal/vcs.Status; cmd/go
*cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v cmd/vendor/golang.org/x/mod/modul
cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v cmd/vendor/golang.org/x/mod/module
*cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v *go/build.Package; cmd/go/interna
cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v *go/build.Package; cmd/go/internal
*cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v go.shape.bool; cmd/go/internal/pa
cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v go.shape.bool; cmd/go/internal/par
*cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v go.shape.struct { Path string; Ve
cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v go.shape.struct { Path string; Ver
*cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v go.shape.struct { Revision string
cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v go.shape.struct { Revision string;
*cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v go.shape.*uint8; cmd/go/internal/
*cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v go.shape.[]uint8; cmd/go/internal
cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v go.shape.[]uint8; cmd/go/internal/
cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v go.shape.*uint8; cmd/go/internal/p
*cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v []uint8; cmd/go/internal/par.err 
cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v []uint8; cmd/go/internal/par.err e
*cmd/go/internal/par.Cache[go.shape.string,go.shape.*uint8]
cmd/go/internal/par.Cache[go.shape.string,go.shape.*uint8]
*cmd/go/internal/par.Cache[go.shape.struct { cmd/go/internal/load.path string; cmd/go/internal/load.parentPath strin
cmd/go/internal/par.Cache[go.shape.struct { cmd/go/internal/load.path string; cmd/go/internal/load.parentPath string
*cmd/go/internal/par.Cache[go.shape.struct { cmd/go/internal/modfetch/codehost.vcs string; cmd/go/internal/modfetch/
cmd/go/internal/par.Cache[go.shape.struct { cmd/go/internal/modfetch/codehost.vcs string; cmd/go/internal/modfetch/c
*cmd/go/internal/par.Cache[go.shape.struct { cmd/go/internal/modfetch.proxy string; cmd/go/internal/modfetch.path st
cmd/go/internal/par.Cache[go.shape.struct { cmd/go/internal/modfetch.proxy string; cmd/go/internal/modfetch.path str
*cmd/go/internal/par.Cache[go.shape.struct { cmd/go/internal/modget.pattern string; cmd/go/internal/modget.m cmd/ven
cmd/go/internal/par.Cache[go.shape.struct { cmd/go/internal/modget.pattern string; cmd/go/internal/modget.m cmd/vend
*cmd/go/internal/par.Cache[go.shape.struct {},go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch.RevI
cmd/go/internal/par.Cache[go.shape.struct {},go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch.RevIn
*cmd/go/internal/par.Cache[go.shape.struct {},go.shape.struct { cmd/go/internal/par.v go.shape.*uint8; cmd/go/intern
cmd/go/internal/par.Cache[go.shape.struct {},go.shape.struct { cmd/go/internal/par.v go.shape.*uint8; cmd/go/interna
*cmd/go/internal/par.Cache[go.shape.struct { Path string; Version string "json:\",omitempty\"" },go.shape.struct { c
cmd/go/internal/par.Cache[go.shape.struct { Path string; Version string "json:\",omitempty\"" },go.shape.struct { cm
*cmd/go/internal/par.Cache[string,bool]
cmd/go/internal/par.Cache[string,bool]
*cmd/go/internal/par.Cache[string,*cmd/go/internal/modload.loadPkg]
cmd/go/internal/par.Cache[string,*cmd/go/internal/modload.loadPkg]
*cmd/go/internal/par.Cache[string,cmd/go/internal/par.errValue[bool]]
cmd/go/internal/par.Cache[string,cmd/go/internal/par.errValue[bool]]
*cmd/go/internal/par.Cache[string,cmd/go/internal/par.errValue[*cmd/go/internal/modfetch/codehost.RevInfo]]
cmd/go/internal/par.Cache[string,cmd/go/internal/par.errValue[*cmd/go/internal/modfetch/codehost.RevInfo]]
*cmd/go/internal/par.Cache[string,cmd/go/internal/par.errValue[*cmd/go/internal/modfetch.RevInfo]]
cmd/go/internal/par.Cache[string,cmd/go/internal/par.errValue[*cmd/go/internal/modfetch.RevInfo]]
*cmd/go/internal/par.Cache[string,cmd/go/internal/par.errValue[*cmd/go/internal/modfetch.Versions]]
cmd/go/internal/par.Cache[string,cmd/go/internal/par.errValue[*cmd/go/internal/modfetch.Versions]]
*cmd/go/internal/par.Cache[string,cmd/go/internal/par.errValue[*cmd/go/internal/modindex.Module]]
cmd/go/internal/par.Cache[string,cmd/go/internal/par.errValue[*cmd/go/internal/modindex.Module]]
*cmd/go/internal/par.Cache[string,cmd/go/internal/par.errValue[cmd/go/internal/vcs.Status]]
cmd/go/internal/par.Cache[string,cmd/go/internal/par.errValue[cmd/go/internal/vcs.Status]]
*cmd/go/internal/par.Cache[string,cmd/go/internal/par.errValue[cmd/vendor/golang.org/x/mod/module.Version]]
cmd/go/internal/par.Cache[string,cmd/go/internal/par.errValue[cmd/vendor/golang.org/x/mod/module.Version]]
*cmd/go/internal/par.Cache[string,cmd/go/internal/par.errValue[*go/build.Package]]
cmd/go/internal/par.Cache[string,cmd/go/internal/par.errValue[*go/build.Package]]
*cmd/go/internal/par.Cache[string,cmd/go/internal/par.errValue[[]uint8]]
cmd/go/internal/par.Cache[string,cmd/go/internal/par.errValue[[]uint8]]
*cmd/go/internal/par.Cache[string,error]
cmd/go/internal/par.Cache[string,error]
*cmd/go/internal/par.Cache[string,string]
cmd/go/internal/par.Cache[string,string]
*cmd/go/internal/par.Cache[struct {},cmd/go/internal/par.errValue[*cmd/go/internal/modfetch.RevInfo]]
cmd/go/internal/par.Cache[struct {},cmd/go/internal/par.errValue[*cmd/go/internal/modfetch.RevInfo]]
 }]; cmd/go/internal/par..dict *[22]uintptr }
cmd/go/internal/par..dict *[22]uintptr }
*cmd/go/internal/par.ErrCache[[2]string,*cmd/go/internal/modindex.IndexPackage]
cmd/go/internal/par.ErrCache[[2]string,*cmd/go/internal/modindex.IndexPackage]
*cmd/go/internal/par.ErrCache[cmd/go/internal/modfetch/codehost.vcsCacheKey,cmd/go/internal/modfetch/codehost.Repo]
cmd/go/internal/par.ErrCache[cmd/go/internal/modfetch/codehost.vcsCacheKey,cmd/go/internal/modfetch/codehost.Repo]
*cmd/go/internal/par.ErrCache[cmd/go/internal/modget.matchInModuleKey,[]string]
cmd/go/internal/par.ErrCache[cmd/go/internal/modget.matchInModuleKey,[]string]
*cmd/go/internal/par.ErrCache[cmd/vendor/golang.org/x/mod/module.Version,*cmd/go/internal/modload.modFileSummary]
cmd/go/internal/par.ErrCache[cmd/vendor/golang.org/x/mod/module.Version,*cmd/go/internal/modload.modFileSummary]
*cmd/go/internal/par.ErrCache[cmd/vendor/golang.org/x/mod/module.Version,string]
cmd/go/internal/par.ErrCache[cmd/vendor/golang.org/x/mod/module.Version,string]
*cmd/go/internal/par.ErrCache[go.shape.[2]string,go.shape.*uint8]
cmd/go/internal/par.ErrCache[go.shape.[2]string,go.shape.*uint8]
*cmd/go/internal/par.ErrCache[go.shape.string,go.shape.bool]
cmd/go/internal/par.ErrCache[go.shape.string,go.shape.bool]
*cmd/go/internal/par.ErrCache[go.shape.string,go.shape.struct { Path string; Version string "json:\",omitempty\"" }]
cmd/go/internal/par.ErrCache[go.shape.string,go.shape.struct { Path string; Version string "json:\",omitempty\"" }]
*cmd/go/internal/par.ErrCache[go.shape.string,go.shape.struct { Revision string; CommitTime time.Time; Uncommitted b
cmd/go/internal/par.ErrCache[go.shape.string,go.shape.struct { Revision string; CommitTime time.Time; Uncommitted bo
*cmd/go/internal/par.ErrCache[go.shape.string,go.shape.*uint8]
*cmd/go/internal/par.ErrCache[go.shape.string,go.shape.[]uint8]
cmd/go/internal/par.ErrCache[go.shape.string,go.shape.*uint8]
cmd/go/internal/par.ErrCache[go.shape.string,go.shape.[]uint8]
*cmd/go/internal/par.ErrCache[go.shape.struct { cmd/go/internal/modfetch/codehost.vcs string; cmd/go/internal/modfet
cmd/go/internal/par.ErrCache[go.shape.struct { cmd/go/internal/modfetch/codehost.vcs string; cmd/go/internal/modfetc
*cmd/go/internal/par.ErrCache[go.shape.struct { cmd/go/internal/modget.pattern string; cmd/go/internal/modget.m cmd/
cmd/go/internal/par.ErrCache[go.shape.struct { cmd/go/internal/modget.pattern string; cmd/go/internal/modget.m cmd/v
*cmd/go/internal/par.ErrCache[go.shape.struct {},go.shape.*uint8]
cmd/go/internal/par.ErrCache[go.shape.struct {},go.shape.*uint8]
*cmd/go/internal/par.ErrCache[go.shape.struct { Path string; Version string "json:\",omitempty\"" },go.shape.string]
cmd/go/internal/par.ErrCache[go.shape.struct { Path string; Version string "json:\",omitempty\"" },go.shape.string]
*cmd/go/internal/par.ErrCache[go.shape.struct { Path string; Version string "json:\",omitempty\"" },go.shape.*uint8]
cmd/go/internal/par.ErrCache[go.shape.struct { Path string; Version string "json:\",omitempty\"" },go.shape.*uint8]
*cmd/go/internal/par.ErrCache[string,bool]
cmd/go/internal/par.ErrCache[string,bool]
*cmd/go/internal/par.ErrCache[string,*cmd/go/internal/modfetch/codehost.RevInfo]
cmd/go/internal/par.ErrCache[string,*cmd/go/internal/modfetch/codehost.RevInfo]
*cmd/go/internal/par.ErrCache[string,*cmd/go/internal/modfetch.RevInfo]
cmd/go/internal/par.ErrCache[string,*cmd/go/internal/modfetch.RevInfo]
*cmd/go/internal/par.ErrCache[string,*cmd/go/internal/modfetch.Versions]
cmd/go/internal/par.ErrCache[string,*cmd/go/internal/modfetch.Versions]
*cmd/go/internal/par.ErrCache[string,*cmd/go/internal/modindex.Module]
cmd/go/internal/par.ErrCache[string,*cmd/go/internal/modindex.Module]
*cmd/go/internal/par.ErrCache[string,cmd/go/internal/vcs.Status]
cmd/go/internal/par.ErrCache[string,cmd/go/internal/vcs.Status]
*cmd/go/internal/par.ErrCache[string,cmd/vendor/golang.org/x/mod/module.Version]
cmd/go/internal/par.ErrCache[string,cmd/vendor/golang.org/x/mod/module.Version]
*cmd/go/internal/par.ErrCache[string,*go/build.Package]
cmd/go/internal/par.ErrCache[string,*go/build.Package]
*cmd/go/internal/par.ErrCache[string,[]uint8]
cmd/go/internal/par.ErrCache[string,[]uint8]
*cmd/go/internal/par.ErrCache[struct {},*cmd/go/internal/modfetch.RevInfo]
cmd/go/internal/par.ErrCache[struct {},*cmd/go/internal/modfetch.RevInfo]
 }; cmd/go/internal/par.err error }]
 cmd/go/internal/par.err error }
 cmd/go/internal/par.err error }]
; cmd/go/internal/par.err error }
; cmd/go/internal/par.err error }]
}; cmd/go/internal/par.err error }]
cmd/go/internal/par.err error }]
*cmd/go/internal/par.errValue[bool]
cmd/go/internal/par.errValue[bool]
*cmd/go/internal/par.errValue[cmd/go/internal/modfetch/codehost.Repo]
cmd/go/internal/par.errValue[cmd/go/internal/modfetch/codehost.Repo]
*cmd/go/internal/par.errValue[*cmd/go/internal/modfetch/codehost.RevInfo]
cmd/go/internal/par.errValue[*cmd/go/internal/modfetch/codehost.RevInfo]
*cmd/go/internal/par.errValue[*cmd/go/internal/modfetch.RevInfo]
cmd/go/internal/par.errValue[*cmd/go/internal/modfetch.RevInfo]
*cmd/go/internal/par.errValue[*cmd/go/internal/modfetch.Versions]
cmd/go/internal/par.errValue[*cmd/go/internal/modfetch.Versions]
*cmd/go/internal/par.errValue[*cmd/go/internal/modindex.IndexPackage]
cmd/go/internal/par.errValue[*cmd/go/internal/modindex.IndexPackage]
*cmd/go/internal/par.errValue[*cmd/go/internal/modindex.Module]
cmd/go/internal/par.errValue[*cmd/go/internal/modindex.Module]
*cmd/go/internal/par.errValue[*cmd/go/internal/modload.modFileSummary]
cmd/go/internal/par.errValue[*cmd/go/internal/modload.modFileSummary]
*cmd/go/internal/par.errValue[cmd/go/internal/vcs.Status]
cmd/go/internal/par.errValue[cmd/go/internal/vcs.Status]
*cmd/go/internal/par.errValue[cmd/vendor/golang.org/x/mod/module.Version]
cmd/go/internal/par.errValue[cmd/vendor/golang.org/x/mod/module.Version]
*cmd/go/internal/par.errValue[*go/build.Package]
cmd/go/internal/par.errValue[*go/build.Package]
cmd/go/internal/par.errValue[go.shape.bool]
cmd/go/internal/par.errValue[go.shape.interface { CheckReuse(context.Context, *cmd/go/internal/modfetch/codehost.Ori
cmd/go/internal/par.errValue[go.shape.[]string]
cmd/go/internal/par.errValue[go.shape.string]
cmd/go/internal/par.errValue[go.shape.struct { Path string; Version string "json:\",omitempty\"" }]
cmd/go/internal/par.errValue[go.shape.struct { Revision string; CommitTime time.Time; Uncommitted bool }]
cmd/go/internal/par.errValue[go.shape.*uint8]
cmd/go/internal/par.errValue[go.shape.[]uint8]
*cmd/go/internal/par.errValue[[]string]
*cmd/go/internal/par.errValue[string]
cmd/go/internal/par.errValue[[]string]
cmd/go/internal/par.errValue[string]
*cmd/go/internal/par.errValue[[]uint8]
cmd/go/internal/par.errValue[[]uint8]
cmd/go/internal/par.framepc uintptr }
*cmd/go/internal/par.Queue
cmd/go/internal/par.Queue
*cmd/go/internal/par.queueState
cmd/go/internal/par.queueState
cmd/go/internal/par.sp uintptr; cmd/go/internal/par.pc uintptr; cmd/go/internal/par.fn uintptr; cmd/go/internal/par.
*cmd/go/internal/par.Work[cmd/vendor/golang.org/x/mod/module.Version]
cmd/go/internal/par.Work[cmd/vendor/golang.org/x/mod/module.Version]
*cmd/go/internal/par.Work[go.shape.struct { Path string; Version string "json:\",omitempty\"" }]
cmd/go/internal/par.Work[go.shape.struct { Path string; Version string "json:\",omitempty\"" }]
cmd/go/internal/run.framepc uintptr }
cmd/go/internal/run.sp uintptr; cmd/go/internal/run.pc uintptr; cmd/go/internal/run.fn uintptr; cmd/go/internal/run.
**cmd/go/internal/search.Match
*[]*cmd/go/internal/search.Match
*cmd/go/internal/search.Match
[]*cmd/go/internal/search.Match
cmd/go/internal/search.Match
*cmd/go/internal/search.MatchError
cmd/go/internal/search.MatchError
; cmd/go/internal/search.treeCanMatch *func(string) bool; cmd/go/internal/search.have map[string]bool; cmd/go/intern
*cmd/go/internal/test.lockedStdout
cmd/go/internal/test.lockedStdout
*cmd/go/internal/test.outputdirFlag
cmd/go/internal/test.outputdirFlag
*cmd/go/internal/test.runCache
cmd/go/internal/test.runCache
*cmd/go/internal/test.runTestActor
cmd/go/internal/test.runTestActor
*cmd/go/internal/test.shuffleFlag
cmd/go/internal/test.shuffleFlag
*cmd/go/internal/test.testVFlag
cmd/go/internal/test.testVFlag
*cmd/go/internal/test.vetFlag
cmd/go/internal/test.vetFlag
*cmd/go/internal/toolchain.Switcher
cmd/go/internal/toolchain.Switcher
*cmd/go/internal/tool.jsonResult·1
[]cmd/go/internal/tool.jsonResult·1
cmd/go/internal/tool.jsonResult·1
*cmd/go/internal/trace.Span
cmd/go/internal/trace.Span
cmd/go/internal/trace.traceContext
*cmd/go/internal/trace.traceFile
cmd/go/internal/trace.traceFile
cmd/go/internal/trace.traceKey
*cmd/go/internal/trace.tracer
cmd/go/internal/trace.tracer
**cmd/go/internal/vcs.Cmd
*cmd/go/internal/vcs.Cmd
[]*cmd/go/internal/vcs.Cmd
cmd/go/internal/vcs.Cmd
*cmd/go/internal/vcs.fetchResult
cmd/go/internal/vcs.fetchResult
cmd/go/internal/vcs.framepc uintptr }
*cmd/go/internal/vcs.govcsConfig
cmd/go/internal/vcs.govcsConfig
*cmd/go/internal/vcs.govcsRule
cmd/go/internal/vcs.govcsRule
*cmd/go/internal/vcs.importError
cmd/go/internal/vcs.importError
*cmd/go/internal/vcs.ImportMismatchError
cmd/go/internal/vcs.ImportMismatchError
*cmd/go/internal/vcs.metaImport
[]cmd/go/internal/vcs.metaImport
cmd/go/internal/vcs.metaImport
; cmd/go/internal/vcs.mod cmd/go/internal/vcs.ModuleMode }
cmd/go/internal/vcs.ModuleMode
*cmd/go/internal/vcs.RepoRoot
cmd/go/internal/vcs.RepoRoot
*cmd/go/internal/vcs.rootName
[]cmd/go/internal/vcs.rootName
cmd/go/internal/vcs.rootName
cmd/go/internal/vcs.sp uintptr; cmd/go/internal/vcs.pc uintptr; cmd/go/internal/vcs.fn uintptr; cmd/go/internal/vcs.
*cmd/go/internal/vcs.Status
cmd/go/internal/vcs.Status
*cmd/go/internal/vcs.tagCmd
[]cmd/go/internal/vcs.tagCmd
cmd/go/internal/vcs.tagCmd
*cmd/go/internal/vcs.vcsNotFoundError
cmd/go/internal/vcs.vcsNotFoundError
**cmd/go/internal/vcs.vcsPath
*cmd/go/internal/vcs.vcsPath
[]*cmd/go/internal/vcs.vcsPath
cmd/go/internal/vcs.vcsPath
cmd/go/internal/vet.framepc uintptr }
cmd/go/internal/vet.sp uintptr; cmd/go/internal/vet.pc uintptr; cmd/go/internal/vet.fn uintptr; cmd/go/internal/vet.
*cmd/go/internal/web.errorDetailBuffer
cmd/go/internal/web.errorDetailBuffer
cmd/go/internal/web.framepc uintptr }
*cmd/go/internal/web.hookCloser
cmd/go/internal/web.hookCloser
*cmd/go/internal/web.HTTPError
cmd/go/internal/web.HTTPError
*cmd/go/internal/web.Interceptor
[]cmd/go/internal/web.Interceptor
cmd/go/internal/web.Interceptor
*cmd/go/internal/web.Response
cmd/go/internal/web.Response
cmd/go/internal/web.SecurityMode
cmd/go/internal/web.sp uintptr; cmd/go/internal/web.pc uintptr; cmd/go/internal/web.fn uintptr; cmd/go/internal/web.
**cmd/go/internal/work.Action
*[]*cmd/go/internal/work.Action
*cmd/go/internal/work.Action
*cmd/go/internal/work.Action }
[]*cmd/go/internal/work.Action
[]*cmd/go/internal/work.Action }
cmd/go/internal/work.Action
**cmd/go/internal/work.actionJSON
*cmd/go/internal/work.actionJSON
[]*cmd/go/internal/work.actionJSON
cmd/go/internal/work.actionJSON
*cmd/go/internal/work.actionQueue
cmd/go/internal/work.actionQueue
cmd/go/internal/work.Actor
*cmd/go/internal/work.ActorFunc
cmd/go/internal/work.ActorFunc
cmd/go/internal/work.buildAction *cmd/go/internal/work.Action }
*cmd/go/internal/work.buildCompiler
cmd/go/internal/work.buildCompiler
*cmd/go/internal/work.Builder
cmd/go/internal/work.Builder
cmd/go/internal/work.BuildFlagMask
cmd/go/internal/work.BuildMode
*cmd/go/internal/work.buildvcsFlag
cmd/go/internal/work.buildvcsFlag
*cmd/go/internal/work.cacheKey
cmd/go/internal/work.cacheKey
*cmd/go/internal/workcmd.flagFunc
cmd/go/internal/workcmd.flagFunc
*cmd/go/internal/workcmd.replaceJSON
[]cmd/go/internal/workcmd.replaceJSON
cmd/go/internal/workcmd.replaceJSON
; cmd/go/internal/workcmd.sw *cmd/go/internal/toolchain.Switcher }
*cmd/go/internal/workcmd.useJSON
[]cmd/go/internal/workcmd.useJSON
cmd/go/internal/workcmd.useJSON
*cmd/go/internal/workcmd.workfileJSON
cmd/go/internal/workcmd.workfileJSON
*cmd/go/internal/work.commaListFlag
cmd/go/internal/work.commaListFlag
*cmd/go/internal/work.coverFlag
cmd/go/internal/work.coverFlag
*cmd/go/internal/work.coverModeFlag
cmd/go/internal/work.coverModeFlag
cmd/go/internal/work.depMode cmd/go/internal/work.BuildMode; cmd/go/internal/work.shlib string }
*cmd/go/internal/work.gccgoToolchain
cmd/go/internal/work.gccgoToolchain
*cmd/go/internal/work.gcToolchain
cmd/go/internal/work.gcToolchain
*cmd/go/internal/work.noToolchain
cmd/go/internal/work.noToolchain
*cmd/go/internal/work.prefixSuffixError
cmd/go/internal/work.prefixSuffixError
*cmd/go/internal/work.stringFlag
cmd/go/internal/work.stringFlag
*cmd/go/internal/work.tagsFlag
cmd/go/internal/work.tagsFlag
cmd/go/internal/work.toolchain
cmd/go/internal/work.version
*cmd/go/internal/work.vetConfig
cmd/go/internal/work.vetConfig
*cmd/internal/buildid.excludedReader
cmd/internal/buildid.excludedReader
*cmd/internal/codesign.Blob
cmd/internal/codesign.Blob
*cmd/internal/codesign.CodeDirectory
cmd/internal/codesign.CodeDirectory
cmd/internal/codesign.CodeSigCmd
*cmd/internal/codesign.SuperBlob
cmd/internal/codesign.SuperBlob
*cmd/internal/notsha256.digest
cmd/internal/notsha256.digest
cmd/internal/objabi.HeadType
cmd/internal/objabi.RelocType
cmd/internal/objabi.SymKind
cmd/internal/sys.ArchFamily
*cmd/internal/test2json.Converter
cmd/internal/test2json.Converter
**cmd/internal/test2json.event
*cmd/internal/test2json.event
[]*cmd/internal/test2json.event
cmd/internal/test2json.event
*cmd/internal/test2json.lineBuffer
cmd/internal/test2json.lineBuffer
cmd/internal/test2json.Mode
*cmd/internal/test2json.textBytes
cmd/internal/test2json.textBytes
*cmd/internal/traceviewer.Event
cmd/internal/traceviewer.Event
*cmd/vendor/golang.org/x/mod/internal/lazyregexp.Regexp
cmd/vendor/golang.org/x/mod/internal/lazyregexp.Regexp
*[]cmd/vendor/golang.org/x/mod/modfile.Comment
*cmd/vendor/golang.org/x/mod/modfile.Comment
[][]cmd/vendor/golang.org/x/mod/modfile.Comment
[]cmd/vendor/golang.org/x/mod/modfile.Comment
cmd/vendor/golang.org/x/mod/modfile.Comment
*cmd/vendor/golang.org/x/mod/modfile.CommentBlock
cmd/vendor/golang.org/x/mod/modfile.CommentBlock
*cmd/vendor/golang.org/x/mod/modfile.Comments
cmd/vendor/golang.org/x/mod/modfile.Comments
*cmd/vendor/golang.org/x/mod/modfile.elem·1
cmd/vendor/golang.org/x/mod/modfile.elem·1
**cmd/vendor/golang.org/x/mod/modfile.Error
*cmd/vendor/golang.org/x/mod/modfile.Error
cmd/vendor/golang.org/x/mod/modfile.Error
*cmd/vendor/golang.org/x/mod/modfile.ErrorList
cmd/vendor/golang.org/x/mod/modfile.ErrorList
**cmd/vendor/golang.org/x/mod/modfile.Exclude
*[]*cmd/vendor/golang.org/x/mod/modfile.Exclude
*cmd/vendor/golang.org/x/mod/modfile.Exclude
[]*cmd/vendor/golang.org/x/mod/modfile.Exclude
cmd/vendor/golang.org/x/mod/modfile.Exclude
*cmd/vendor/golang.org/x/mod/modfile.Expr
[]cmd/vendor/golang.org/x/mod/modfile.Expr
cmd/vendor/golang.org/x/mod/modfile.Expr
**cmd/vendor/golang.org/x/mod/modfile.File
*cmd/vendor/golang.org/x/mod/modfile.File
[]*cmd/vendor/golang.org/x/mod/modfile.File
cmd/vendor/golang.org/x/mod/modfile.File
 *cmd/vendor/golang.org/x/mod/modfile.FileSyntax }
*cmd/vendor/golang.org/x/mod/modfile.FileSyntax
cmd/vendor/golang.org/x/mod/modfile.FileSyntax
*cmd/vendor/golang.org/x/mod/modfile.Go
cmd/vendor/golang.org/x/mod/modfile.Go
*cmd/vendor/golang.org/x/mod/modfile.input
cmd/vendor/golang.org/x/mod/modfile.input
**cmd/vendor/golang.org/x/mod/modfile.Line
*cmd/vendor/golang.org/x/mod/modfile.Line
*cmd/vendor/golang.org/x/mod/modfile.Line }
[]*cmd/vendor/golang.org/x/mod/modfile.Line
cmd/vendor/golang.org/x/mod/modfile.Line
cmd/vendor/golang.org/x/mod/modfile.Line }
**cmd/vendor/golang.org/x/mod/modfile.LineBlock
*cmd/vendor/golang.org/x/mod/modfile.LineBlock
cmd/vendor/golang.org/x/mod/modfile.LineBlock
cmd/vendor/golang.org/x/mod/modfile.Line) bool; cmd/vendor/golang.org/x/mod/modfile.block *cmd/vendor/golang.org/x/m
*cmd/vendor/golang.org/x/mod/modfile.Line; cmd/vendor/golang.org/x/mod/modfile.verb string }
cmd/vendor/golang.org/x/mod/modfile.Line; cmd/vendor/golang.org/x/mod/modfile.verb string }
*cmd/vendor/golang.org/x/mod/modfile.LParen
cmd/vendor/golang.org/x/mod/modfile.LParen
*cmd/vendor/golang.org/x/mod/modfile.Module
cmd/vendor/golang.org/x/mod/modfile.Module
cmd/vendor/golang.org/x/mod/modfile.Position
*cmd/vendor/golang.org/x/mod/modfile.printer
cmd/vendor/golang.org/x/mod/modfile.printer
**cmd/vendor/golang.org/x/mod/modfile.Replace
*[]*cmd/vendor/golang.org/x/mod/modfile.Replace
*cmd/vendor/golang.org/x/mod/modfile.Replace
[]*cmd/vendor/golang.org/x/mod/modfile.Replace
cmd/vendor/golang.org/x/mod/modfile.Replace
**cmd/vendor/golang.org/x/mod/modfile.Require
*cmd/vendor/golang.org/x/mod/modfile.Require
[]*cmd/vendor/golang.org/x/mod/modfile.Require
cmd/vendor/golang.org/x/mod/modfile.Require
**cmd/vendor/golang.org/x/mod/modfile.Retract
*cmd/vendor/golang.org/x/mod/modfile.Retract
[]*cmd/vendor/golang.org/x/mod/modfile.Retract
cmd/vendor/golang.org/x/mod/modfile.Retract
*cmd/vendor/golang.org/x/mod/modfile.RParen
cmd/vendor/golang.org/x/mod/modfile.RParen
*cmd/vendor/golang.org/x/mod/modfile.token
cmd/vendor/golang.org/x/mod/modfile.token
*cmd/vendor/golang.org/x/mod/modfile.tokenKind
cmd/vendor/golang.org/x/mod/modfile.tokenKind
*cmd/vendor/golang.org/x/mod/modfile.Toolchain
cmd/vendor/golang.org/x/mod/modfile.Toolchain
**cmd/vendor/golang.org/x/mod/modfile.Use
*cmd/vendor/golang.org/x/mod/modfile.Use
[]*cmd/vendor/golang.org/x/mod/modfile.Use
cmd/vendor/golang.org/x/mod/modfile.Use
cmd/vendor/golang.org/x/mod/modfile.VersionFixer
*cmd/vendor/golang.org/x/mod/modfile.VersionInterval
[]cmd/vendor/golang.org/x/mod/modfile.VersionInterval
cmd/vendor/golang.org/x/mod/modfile.VersionInterval
*cmd/vendor/golang.org/x/mod/modfile.WorkFile
cmd/vendor/golang.org/x/mod/modfile.WorkFile
*cmd/vendor/golang.org/x/mod/module.InvalidPathError
cmd/vendor/golang.org/x/mod/module.InvalidPathError
*cmd/vendor/golang.org/x/mod/module.InvalidVersionError
cmd/vendor/golang.org/x/mod/module.InvalidVersionError
**cmd/vendor/golang.org/x/mod/module.ModuleError
*cmd/vendor/golang.org/x/mod/module.ModuleError
cmd/vendor/golang.org/x/mod/module.ModuleError
cmd/vendor/golang.org/x/mod/module.pathKind
*[]cmd/vendor/golang.org/x/mod/module.Version
*cmd/vendor/golang.org/x/mod/module.Version
[]cmd/vendor/golang.org/x/mod/module.Version
cmd/vendor/golang.org/x/mod/module.Version
cmd/vendor/golang.org/x/mod/module.Version }]
[cmd/vendor/golang.org/x/mod/module.Version]*cmd/go/internal/modinfo.ModulePublic }
*cmd/vendor/golang.org/x/mod/semver.ByVersion
cmd/vendor/golang.org/x/mod/semver.ByVersion
cmd/vendor/golang.org/x/mod/semver.parsed
cmd/vendor/golang.org/x/mod/sumdb.cached·1
cmd/vendor/golang.org/x/mod/sumdb.cached·2
*cmd/vendor/golang.org/x/mod/sumdb.cacheEntry
cmd/vendor/golang.org/x/mod/sumdb.cacheEntry
*cmd/vendor/golang.org/x/mod/sumdb.Client
cmd/vendor/golang.org/x/mod/sumdb.Client
cmd/vendor/golang.org/x/mod/sumdb.ClientOps
cmd/vendor/golang.org/x/mod/sumdb/dirhash.Hash
*cmd/vendor/golang.org/x/mod/sumdb/note.ambiguousVerifierError
cmd/vendor/golang.org/x/mod/sumdb/note.ambiguousVerifierError
*cmd/vendor/golang.org/x/mod/sumdb/note.InvalidSignatureError
cmd/vendor/golang.org/x/mod/sumdb/note.InvalidSignatureError
*cmd/vendor/golang.org/x/mod/sumdb/note.nameHash
cmd/vendor/golang.org/x/mod/sumdb/note.nameHash
*cmd/vendor/golang.org/x/mod/sumdb/note.Note
cmd/vendor/golang.org/x/mod/sumdb/note.Note
*cmd/vendor/golang.org/x/mod/sumdb/note.Signature
[]cmd/vendor/golang.org/x/mod/sumdb/note.Signature
cmd/vendor/golang.org/x/mod/sumdb/note.Signature
*cmd/vendor/golang.org/x/mod/sumdb/note.UnknownVerifierError
cmd/vendor/golang.org/x/mod/sumdb/note.UnknownVerifierError
*cmd/vendor/golang.org/x/mod/sumdb/note.UnverifiedNoteError
cmd/vendor/golang.org/x/mod/sumdb/note.UnverifiedNoteError
*cmd/vendor/golang.org/x/mod/sumdb/note.verifier
cmd/vendor/golang.org/x/mod/sumdb/note.verifier
*[]cmd/vendor/golang.org/x/mod/sumdb/note.Verifier
*cmd/vendor/golang.org/x/mod/sumdb/note.Verifier
[]cmd/vendor/golang.org/x/mod/sumdb/note.Verifier
cmd/vendor/golang.org/x/mod/sumdb/note.Verifier
*cmd/vendor/golang.org/x/mod/sumdb/note.verifierMap
cmd/vendor/golang.org/x/mod/sumdb/note.verifierMap
cmd/vendor/golang.org/x/mod/sumdb/note.Verifiers
*cmd/vendor/golang.org/x/mod/sumdb.parCache
cmd/vendor/golang.org/x/mod/sumdb.parCache
*cmd/vendor/golang.org/x/mod/sumdb.tileReader
cmd/vendor/golang.org/x/mod/sumdb.tileReader
*cmd/vendor/golang.org/x/mod/sumdb/tlog.Hash
[]cmd/vendor/golang.org/x/mod/sumdb/tlog.Hash
cmd/vendor/golang.org/x/mod/sumdb/tlog.Hash
cmd/vendor/golang.org/x/mod/sumdb/tlog.HashReader
*cmd/vendor/golang.org/x/mod/sumdb/tlog.Tile
[]cmd/vendor/golang.org/x/mod/sumdb/tlog.Tile
cmd/vendor/golang.org/x/mod/sumdb/tlog.Tile
*cmd/vendor/golang.org/x/mod/sumdb/tlog.tileHashReader
cmd/vendor/golang.org/x/mod/sumdb/tlog.tileHashReader
cmd/vendor/golang.org/x/mod/sumdb/tlog.TileReader
*cmd/vendor/golang.org/x/mod/sumdb/tlog.Tree
cmd/vendor/golang.org/x/mod/sumdb/tlog.Tree
cmd/vendor/golang.org/x/mod/sumdb/tlog.TreeProof
*cmd/vendor/golang.org/x/mod/zip.CheckedFiles
cmd/vendor/golang.org/x/mod/zip.CheckedFiles
cmd/vendor/golang.org/x/mod/zip.collisionChecker
*cmd/vendor/golang.org/x/mod/zip.File
[]cmd/vendor/golang.org/x/mod/zip.File
cmd/vendor/golang.org/x/mod/zip.File
*cmd/vendor/golang.org/x/mod/zip.FileError
[]cmd/vendor/golang.org/x/mod/zip.FileError
cmd/vendor/golang.org/x/mod/zip.FileError
*cmd/vendor/golang.org/x/mod/zip.FileErrorList
cmd/vendor/golang.org/x/mod/zip.FileErrorList
*cmd/vendor/golang.org/x/mod/zip.pathInfo
cmd/vendor/golang.org/x/mod/zip.pathInfo
*cmd/vendor/golang.org/x/mod/zip.zipError
cmd/vendor/golang.org/x/mod/zip.zipError
cmd/vendor/golang.org/x/sync/semaphore.waiter
*cmd/vendor/golang.org/x/sync/semaphore.Weighted
cmd/vendor/golang.org/x/sync/semaphore.Weighted
c.Mutex; go/token.lines []int; go/token.infos []go/token.lineInfo }]
code1 uintptr; runtime.sigpc uintptr; runtime.parentGoid uint64; runtime.gopc uintptr; runtime.ancestors *[]runtime.
codehost.Origin, string) error; DescendsFrom(context.Context, string, string) (bool, error); Latest(context.Context)
codehost.remote string },go.shape.struct { cmd/go/internal/par.v cmd/go/internal/modfetch/codehost.Repo; cmd/go/inte
codehost.remote string },go.shape.struct { cmd/go/internal/par.v go.shape.interface { CheckReuse(context.Context, *c
codehost.rev string; cmd/go/internal/modfetch/codehost.prefix string; cmd/go/internal/modfetch/codehost.allowed func
/codehost.varp uintptr; cmd/go/internal/modfetch/codehost.framepc uintptr }
comment.parseDoc; go/doc/comment.text string }
 CommitTime time.Time; Uncommitted bool }; cmd/go/internal/par.err error }]
; CommitTime time.Time; Uncommitted bool }; cmd/go/internal/par.err error }]
compatibleOk map[string]bool; cmd/go/internal/modfetch.ctx context.Context; cmd/go/internal/modfetch.info *cmd/go/in
*complex128
complex128
*complex64
complex64
*compress/flate.byFreq
compress/flate.byFreq
*compress/flate.byLiteral
compress/flate.byLiteral
*compress/flate.compressionLevel
[]compress/flate.compressionLevel
compress/flate.compressionLevel
*compress/flate.compressor
compress/flate.compressor
*compress/flate.CorruptInputError
compress/flate.CorruptInputError
*compress/flate.decompressor
compress/flate.decompressor
*compress/flate.deflateFast
compress/flate.deflateFast
*compress/flate.dictDecoder
compress/flate.dictDecoder
*compress/flate.dictWriter
compress/flate.dictWriter
*compress/flate.hcode
[]compress/flate.hcode
compress/flate.hcode
*compress/flate.huffmanBitWriter
compress/flate.huffmanBitWriter
*compress/flate.huffmanDecoder
compress/flate.huffmanDecoder
*compress/flate.huffmanEncoder
compress/flate.huffmanEncoder
*compress/flate.InternalError
compress/flate.InternalError
*compress/flate.levelInfo
compress/flate.levelInfo
*compress/flate.literalNode
[]compress/flate.literalNode
compress/flate.literalNode
compress/flate.Reader
*compress/flate.tableEntry
[]compress/flate.tableEntry
compress/flate.tableEntry
*compress/flate.token
[]compress/flate.token
compress/flate.token
*compress/flate.Writer
compress/flate.Writer
compress/gzip.Header
*compress/gzip.Reader
compress/gzip.Reader
*compress/zlib.reader
compress/zlib.reader
Conn }
container/heap.Interface
**container/list.Element
*container/list.Element
container/list.Element
*container/list.List
container/list.List
.Context }
context.afterFuncer
*context.backgroundCtx
context.backgroundCtx
*context.cancelCtx
context.cancelCtx
*context.canceler
context.canceler
context.CancelFunc
Context; cmd/go/internal/get.stk *cmd/go/internal/load.ImportStack }
.Context; cmd/go/internal/modload.pkg *cmd/go/internal/modload.loadPkg }
*context.Context
context.Context
context.Context }
context.Context; cmd/go/internal/modfetch.prefix string }
 context.Context; cmd/go/internal/modload.m *cmd/go/internal/modinfo.ModulePublic; cmd/go/internal/modload.sem chan 
 context.Context; net/http.timer *time.Timer; net/http.errc chan error }
context.Context, string) (*cmd/go/internal/modfetch/codehost.Tags, error) }]
(context.Context, string, string, func(string) bool) (string, error); Stat(context.Context, string) (*cmd/go/interna
(context.Context, string, string, int64) (io.ReadCloser, error); RecentTag(context.Context, string, string, func(str
context.Context, string, string, int64) (io.ReadCloser, error); RecentTag(context.Context, string, string, func(stri
*context.deadlineExceededError
context.deadlineExceededError
*context.emptyCtx
context.emptyCtx
*context.stopCtx
context.stopCtx
context.stringer
*context.timerCtx
context.timerCtx
*context.todoCtx
context.todoCtx
*context.valueCtx
context.valueCtx
context.withoutCancelCtx
core·1) int; go/doc/comment.g func(int, int) go/doc/comment.score·1 }
/cpu.CacheLinePad }
*crypto/aes.aesCipher
crypto/aes.aesCipher
*crypto/aes.aesCipherAsm
crypto/aes.aesCipherAsm
*crypto/aes.aesCipherGCM
crypto/aes.aesCipherGCM
*crypto/aes.gcmAsm
crypto/aes.gcmAsm
*crypto/aes.KeySizeError
crypto/aes.KeySizeError
crypto/cipher.AEAD
crypto/cipher.Block
crypto/cipher.BlockMode
*crypto/cipher.cbc
crypto/cipher.cbc
crypto/cipher.cbcDecAble
*crypto/cipher.cbcDecrypter
crypto/cipher.cbcDecrypter
crypto/cipher.cbcEncAble
*crypto/cipher.cbcEncrypter
crypto/cipher.cbcEncrypter
*crypto/cipher.ctr
crypto/cipher.ctr
crypto/cipher.ctrAble
*crypto/cipher.gcm
crypto/cipher.gcm
crypto/cipher.gcmAble
*crypto/cipher.gcmFieldElement
crypto/cipher.gcmFieldElement
crypto/cipher.Stream
crypto.Decrypter
*crypto/des.desCipher
crypto/des.desCipher
*crypto/des.KeySizeError
crypto/des.KeySizeError
*crypto/des.tripleDESCipher
crypto/des.tripleDESCipher
crypto/dsa.Parameters
crypto/dsa.ParameterSizes
*crypto/dsa.PublicKey
crypto/dsa.PublicKey
crypto/ecdh.Curve
*crypto/ecdh.nistCurve[*crypto/internal/nistec.P256Point]
crypto/ecdh.nistCurve[*crypto/internal/nistec.P256Point]
*crypto/ecdh.nistCurve[*crypto/internal/nistec.P384Point]
crypto/ecdh.nistCurve[*crypto/internal/nistec.P384Point]
*crypto/ecdh.nistCurve[*crypto/internal/nistec.P521Point]
crypto/ecdh.nistCurve[*crypto/internal/nistec.P521Point]
*crypto/ecdh.nistCurve[go.shape.*uint8]
crypto/ecdh.nistCurve[go.shape.*uint8]
*crypto/ecdh.PrivateKey
crypto/ecdh.PrivateKey
*crypto/ecdh.PublicKey
crypto/ecdh.PublicKey
*crypto/ecdh.x25519Curve
crypto/ecdh.x25519Curve
*crypto/ecdsa.nistCurve[*crypto/internal/nistec.P224Point]
crypto/ecdsa.nistCurve[*crypto/internal/nistec.P224Point]
*crypto/ecdsa.nistCurve[*crypto/internal/nistec.P256Point]
crypto/ecdsa.nistCurve[*crypto/internal/nistec.P256Point]
*crypto/ecdsa.nistCurve[*crypto/internal/nistec.P384Point]
crypto/ecdsa.nistCurve[*crypto/internal/nistec.P384Point]
*crypto/ecdsa.nistCurve[*crypto/internal/nistec.P521Point]
crypto/ecdsa.nistCurve[*crypto/internal/nistec.P521Point]
*crypto/ecdsa.nistCurve[go.shape.*uint8]
crypto/ecdsa.nistCurve[go.shape.*uint8]
*crypto/ecdsa.PrivateKey
crypto/ecdsa.PrivateKey
*crypto/ecdsa.PublicKey
crypto/ecdsa.PublicKey
*crypto/ed25519.PublicKey
crypto/ed25519.PublicKey
*crypto/elliptic.Curve
[]crypto/elliptic.Curve
crypto/elliptic.Curve
*crypto/elliptic.CurveParams
crypto/elliptic.CurveParams
*crypto/elliptic.nistCurve[*crypto/internal/nistec.P224Point]
crypto/elliptic.nistCurve[*crypto/internal/nistec.P224Point]
*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]
crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]
*crypto/elliptic.nistCurve[*crypto/internal/nistec.P384Point]
crypto/elliptic.nistCurve[*crypto/internal/nistec.P384Point]
*crypto/elliptic.nistCurve[*crypto/internal/nistec.P521Point]
crypto/elliptic.nistCurve[*crypto/internal/nistec.P521Point]
*crypto/elliptic.nistCurve[go.shape.*uint8]
crypto/elliptic.nistCurve[go.shape.*uint8]
*crypto/elliptic.p256Curve
crypto/elliptic.p256Curve
crypto/elliptic.unmarshaler
*crypto.Hash
crypto.Hash
*crypto/hmac.hmac
crypto/hmac.hmac
crypto/hmac.marshalable
crypto/hmac.pc uintptr; crypto/hmac.fn uintptr; crypto/hmac._panic uintptr; crypto/hmac.link uintptr; crypto/hmac.fd
crypto/internal/bigmod.choice
*crypto/internal/bigmod.Modulus
crypto/internal/bigmod.Modulus
*crypto/internal/bigmod.Nat
crypto/internal/bigmod.Nat
*crypto/internal/boring.PrivateKeyECDH
crypto/internal/boring.PrivateKeyECDH
*crypto/internal/boring.PublicKeyECDH
crypto/internal/boring.PublicKeyECDH
crypto/internal/boring.randReader
*crypto/internal/edwards25519.affineCached
crypto/internal/edwards25519.affineCached
*crypto/internal/edwards25519.fiatScalarMontgomeryDomainFieldElement
crypto/internal/edwards25519.fiatScalarMontgomeryDomainFieldElement
*crypto/internal/edwards25519.fiatScalarNonMontgomeryDomainFieldElement
crypto/internal/edwards25519.fiatScalarNonMontgomeryDomainFieldElement
crypto/internal/edwards25519.fiatScalarUint1
*crypto/internal/edwards25519/field.Element
crypto/internal/edwards25519/field.Element
crypto/internal/edwards25519.incomparable
*crypto/internal/edwards25519.nafLookupTable5
crypto/internal/edwards25519.nafLookupTable5
*crypto/internal/edwards25519.nafLookupTable8
crypto/internal/edwards25519.nafLookupTable8
**crypto/internal/edwards25519.Point
*crypto/internal/edwards25519.Point
[]*crypto/internal/edwards25519.Point
crypto/internal/edwards25519.Point
*crypto/internal/edwards25519.projCached
crypto/internal/edwards25519.projCached
*crypto/internal/edwards25519.projP1xP1
crypto/internal/edwards25519.projP1xP1
*crypto/internal/edwards25519.projP2
crypto/internal/edwards25519.projP2
*crypto/internal/edwards25519.Scalar
crypto/internal/edwards25519.Scalar
*crypto/internal/nistec/fiat.P224Element
crypto/internal/nistec/fiat.P224Element
*crypto/internal/nistec/fiat.p224MontgomeryDomainFieldElement
crypto/internal/nistec/fiat.p224MontgomeryDomainFieldElement
*crypto/internal/nistec/fiat.p224NonMontgomeryDomainFieldElement
crypto/internal/nistec/fiat.p224NonMontgomeryDomainFieldElement
crypto/internal/nistec/fiat.p224Uint1
*crypto/internal/nistec/fiat.P384Element
crypto/internal/nistec/fiat.P384Element
*crypto/internal/nistec/fiat.p384MontgomeryDomainFieldElement
crypto/internal/nistec/fiat.p384MontgomeryDomainFieldElement
*crypto/internal/nistec/fiat.p384NonMontgomeryDomainFieldElement
crypto/internal/nistec/fiat.p384NonMontgomeryDomainFieldElement
crypto/internal/nistec/fiat.p384Uint1
*crypto/internal/nistec/fiat.P521Element
crypto/internal/nistec/fiat.P521Element
*crypto/internal/nistec/fiat.p521MontgomeryDomainFieldElement
crypto/internal/nistec/fiat.p521MontgomeryDomainFieldElement
*crypto/internal/nistec/fiat.p521NonMontgomeryDomainFieldElement
crypto/internal/nistec/fiat.p521NonMontgomeryDomainFieldElement
crypto/internal/nistec/fiat.p521Uint1
**crypto/internal/nistec.P224Point
*crypto/internal/nistec.P224Point
crypto/internal/nistec.P224Point
*crypto/internal/nistec.p224Table
crypto/internal/nistec.p224Table
crypto/internal/nistec.p256AffinePoint
*crypto/internal/nistec.p256AffineTable
crypto/internal/nistec.p256AffineTable
*crypto/internal/nistec.p256Element
crypto/internal/nistec.p256Element
**crypto/internal/nistec.p256OrdElement
*crypto/internal/nistec.p256OrdElement
[]*crypto/internal/nistec.p256OrdElement
crypto/internal/nistec.p256OrdElement
**crypto/internal/nistec.P256Point
*crypto/internal/nistec.P256Point
crypto/internal/nistec.P256Point
crypto/internal/nistec.p256Table
**crypto/internal/nistec.P384Point
*crypto/internal/nistec.P384Point
crypto/internal/nistec.P384Point
*crypto/internal/nistec.p384Table
crypto/internal/nistec.p384Table
**crypto/internal/nistec.P521Point
*crypto/internal/nistec.P521Point
crypto/internal/nistec.P521Point
*crypto/internal/nistec.p521Table
crypto/internal/nistec.p521Table
*crypto/md5.digest
crypto/md5.digest
crypto.PrivateKey
crypto.PublicKey
*crypto/rand.hideAgainReader
crypto/rand.hideAgainReader
crypto/rand.pc uintptr; crypto/rand.fn uintptr; crypto/rand._panic uintptr; crypto/rand.link uintptr; crypto/rand.fd
*crypto/rand.reader
crypto/rand.reader
*crypto/rc4.Cipher
crypto/rc4.Cipher
*crypto/rc4.KeySizeError
crypto/rc4.KeySizeError
*crypto/rsa.CRTValue
[]crypto/rsa.CRTValue
crypto/rsa.CRTValue
crypto/rsa.PrecomputedValues
crypto/rsa.PrivateKey
*crypto/rsa.PSSOptions
crypto/rsa.PSSOptions
*crypto/rsa.PublicKey
crypto/rsa.PublicKey
*crypto/sha1.digest
crypto/sha1.digest
*crypto/sha256.digest
crypto/sha256.digest
*crypto/sha512.digest
crypto/sha512.digest
crypto.Signer
crypto.SignerOpts
**crypto/tls.activeCert
*crypto/tls.activeCert
[]*crypto/tls.activeCert
crypto/tls.activeCert
*crypto/tls.aead
crypto/tls.aead
*crypto/tls.alert
crypto/tls.alert
*crypto/tls.AlertError
crypto/tls.AlertError
*crypto/tls.atLeastReader
crypto/tls.atLeastReader
*crypto/tls.cacheEntry
crypto/tls.cacheEntry
crypto/tls.cbcMode
*crypto/tls.certCache
crypto/tls.certCache
**crypto/tls.Certificate
*crypto/tls.Certificate
[]crypto/tls.Certificate
crypto/tls.Certificate
*crypto/tls.certificateMsg
crypto/tls.certificateMsg
*crypto/tls.certificateMsgTLS13
crypto/tls.certificateMsgTLS13
*crypto/tls.CertificateRequestInfo
crypto/tls.CertificateRequestInfo
*crypto/tls.certificateRequestMsg
crypto/tls.certificateRequestMsg
*crypto/tls.certificateRequestMsgTLS13
crypto/tls.certificateRequestMsgTLS13
*crypto/tls.certificateStatusMsg
crypto/tls.certificateStatusMsg
*crypto/tls.CertificateVerificationError
crypto/tls.CertificateVerificationError
*crypto/tls.certificateVerifyMsg
crypto/tls.certificateVerifyMsg
**crypto/tls.cipherSuite
*crypto/tls.cipherSuite
[]*crypto/tls.cipherSuite
crypto/tls.cipherSuite
**crypto/tls.cipherSuiteTLS13
*crypto/tls.cipherSuiteTLS13
[]*crypto/tls.cipherSuiteTLS13
crypto/tls.cipherSuiteTLS13
*crypto/tls.ClientAuthType
crypto/tls.ClientAuthType
*crypto/tls.clientHandshakeState
crypto/tls.clientHandshakeState
*crypto/tls.clientHandshakeStateTLS13
crypto/tls.clientHandshakeStateTLS13
*crypto/tls.ClientHelloInfo
crypto/tls.ClientHelloInfo
*crypto/tls.clientHelloMsg
crypto/tls.clientHelloMsg
*crypto/tls.clientKeyExchangeMsg
crypto/tls.clientKeyExchangeMsg
crypto/tls.ClientSessionCache
*crypto/tls.ClientSessionState
crypto/tls.ClientSessionState
**crypto/tls.Config
*crypto/tls.Config
crypto/tls.Config
*crypto/tls.Conn
crypto/tls.Conn
*crypto/tls.ConnectionState
crypto/tls.ConnectionState
crypto/tls.constantTimeHash
*crypto/tls.cthWrapper
crypto/tls.cthWrapper
*crypto/tls.CurveID
[]crypto/tls.CurveID
crypto/tls.CurveID
*crypto/tls.Dialer
crypto/tls.Dialer
*crypto/tls.ecdheKeyAgreement
crypto/tls.ecdheKeyAgreement
*crypto/tls.encryptedExtensionsMsg
crypto/tls.encryptedExtensionsMsg
*crypto/tls.endOfEarlyDataMsg
crypto/tls.endOfEarlyDataMsg
*crypto/tls.finishedHash
crypto/tls.finishedHash
*crypto/tls.finishedMsg
crypto/tls.finishedMsg
*crypto/tls.halfConn
crypto/tls.halfConn
crypto/tls.handshakeMessage
*crypto/tls.helloRequestMsg
crypto/tls.helloRequestMsg
*crypto/tls.keyAgreement
crypto/tls.keyAgreement
*crypto/tls.keyShare
[]crypto/tls.keyShare
crypto/tls.keyShare
*crypto/tls.keyUpdateMsg
crypto/tls.keyUpdateMsg
*crypto/tls.marshalingFunction
crypto/tls.marshalingFunction
*crypto/tls.newSessionTicketMsg
crypto/tls.newSessionTicketMsg
*crypto/tls.newSessionTicketMsgTLS13
crypto/tls.newSessionTicketMsgTLS13
*crypto/tls.permanentError
crypto/tls.permanentError
*crypto/tls.prefixNonceAEAD
crypto/tls.prefixNonceAEAD
*crypto/tls.pskIdentity
[]crypto/tls.pskIdentity
crypto/tls.pskIdentity
*crypto/tls.QUICEncryptionLevel
crypto/tls.QUICEncryptionLevel
*crypto/tls.QUICEvent
[]crypto/tls.QUICEvent
crypto/tls.QUICEvent
crypto/tls.QUICEventKind
*crypto/tls.quicState
crypto/tls.quicState
*crypto/tls.RecordHeaderError
crypto/tls.RecordHeaderError
crypto/tls.recordType
crypto/tls.RenegotiationSupport
*crypto/tls.rsaKeyAgreement
crypto/tls.rsaKeyAgreement
*crypto/tls.serverHelloDoneMsg
crypto/tls.serverHelloDoneMsg
*crypto/tls.serverHelloMsg
crypto/tls.serverHelloMsg
*crypto/tls.serverKeyExchangeMsg
crypto/tls.serverKeyExchangeMsg
**crypto/tls.SessionState
*crypto/tls.SessionState
crypto/tls.SessionState
*crypto/tls.SignatureScheme
[]crypto/tls.SignatureScheme
crypto/tls.SignatureScheme
*crypto/tls.ticketKey
[]crypto/tls.ticketKey
crypto/tls.ticketKey
crypto/tls.transcriptHash
 crypto/tls.varp uintptr; crypto/tls.framepc uintptr }
*crypto/tls.xorNonceAEAD
crypto/tls.xorNonceAEAD
crypto/x509.authKeyId
**crypto/x509.Certificate
*[]*crypto/x509.Certificate
*[][]*crypto/x509.Certificate
*crypto/x509.Certificate
[]*crypto/x509.Certificate
[][]*crypto/x509.Certificate
crypto/x509.Certificate
*crypto/x509.CertificateInvalidError
crypto/x509.CertificateInvalidError
*crypto/x509.CertPool
crypto/x509.CertPool
*crypto/x509.ConstraintViolationError
crypto/x509.ConstraintViolationError
*crypto/x509.ExtKeyUsage
[]crypto/x509.ExtKeyUsage
crypto/x509.ExtKeyUsage
*crypto/x509.HostnameError
crypto/x509.HostnameError
*crypto/x509.InsecureAlgorithmError
crypto/x509.InsecureAlgorithmError
crypto/x509.InvalidReason
crypto/x509.KeyUsage
*crypto/x509.lazyCert
[]crypto/x509.lazyCert
crypto/x509.lazyCert
crypto/x509.pc uintptr; crypto/x509.fn uintptr; crypto/x509._panic uintptr; crypto/x509.link uintptr; crypto/x509.fd
crypto/x509.PEMCipher
*crypto/x509.pkcs1PublicKey
crypto/x509.pkcs1PublicKey
*crypto/x509/pkix.AlgorithmIdentifier
crypto/x509/pkix.AlgorithmIdentifier
*crypto/x509/pkix.AttributeTypeAndValue
[]crypto/x509/pkix.AttributeTypeAndValue
crypto/x509/pkix.AttributeTypeAndValue
*crypto/x509/pkix.CertificateList
crypto/x509/pkix.CertificateList
*crypto/x509/pkix.Extension
[]crypto/x509/pkix.Extension
crypto/x509/pkix.Extension
*crypto/x509/pkix.Name
crypto/x509/pkix.Name
*crypto/x509/pkix.RDNSequence
crypto/x509/pkix.RDNSequence
*crypto/x509/pkix.RelativeDistinguishedNameSET
crypto/x509/pkix.RelativeDistinguishedNameSET
*crypto/x509/pkix.RevokedCertificate
[]crypto/x509/pkix.RevokedCertificate
crypto/x509/pkix.RevokedCertificate
crypto/x509/pkix.TBSCertificateList
*crypto/x509.pssParameters
crypto/x509.pssParameters
crypto/x509.pubKeyEqual·1
*crypto/x509.PublicKeyAlgorithm
crypto/x509.PublicKeyAlgorithm
*crypto/x509.publicKeyInfo
crypto/x509.publicKeyInfo
*crypto/x509.rfc2821Mailbox
crypto/x509.rfc2821Mailbox
*crypto/x509.SignatureAlgorithm
crypto/x509.SignatureAlgorithm
*crypto/x509.sum224
crypto/x509.sum224
*crypto/x509.SystemRootsError
crypto/x509.SystemRootsError
*crypto/x509.UnhandledCriticalExtension
crypto/x509.UnhandledCriticalExtension
*crypto/x509.UnknownAuthorityError
crypto/x509.UnknownAuthorityError
*crypto/x509.VerifyOptions
crypto/x509.VerifyOptions
cs string; cmd/go/internal/modfetch/codehost.remote string }
ct *[22]uintptr }
ct { cmd/go/internal/par.v cmd/go/internal/modfetch/codehost.Repo; cmd/go/internal/par.err error }]; cmd/go/internal
ction) }
.ctx context.Context }
ctx context.Context }
.ctx context.Context; cmd/go/internal/modfetch.prefix string }
ctx context.Context; cmd/go/internal/modload.revErr *cmd/go/internal/modfetch.RevInfo; cmd/go/internal/modload.merge
current string }
d.all bool; cmd/go/internal/load.count *int; cmd/go/internal/load.have map[string]int; cmd/go/internal/load.pid *int
d; cmd/go/internal/load.opts cmd/go/internal/load.PackageOpts }
d.ctx context.Context; cmd/go/internal/modload.pkg *cmd/go/internal/modload.loadPkg; cmd/go/internal/modload.ld *cmd
ddecommit int32; runtime.adaptivestackstart int32; runtime.tracefpunwindoff int32; runtime.malloc bool; runtime.allo
*debug/buildinfo.elfExe
debug/buildinfo.elfExe
debug/buildinfo.exe
*debug/buildinfo.machoExe
debug/buildinfo.machoExe
*debug/buildinfo.peExe
debug/buildinfo.peExe
*debug/buildinfo.plan9objExe
debug/buildinfo.plan9objExe
*debug/buildinfo.xcoffExe
debug/buildinfo.xcoffExe
*debug/dwarf.abbrev
debug/dwarf.abbrev
*debug/dwarf.abbrevTable
debug/dwarf.abbrevTable
*debug/dwarf.AddrType
debug/dwarf.AddrType
*debug/dwarf.afield
[]debug/dwarf.afield
debug/dwarf.afield
*debug/dwarf.ArrayType
debug/dwarf.ArrayType
*debug/dwarf.Attr
debug/dwarf.Attr
*debug/dwarf.BasicType
debug/dwarf.BasicType
*debug/dwarf.BoolType
debug/dwarf.BoolType
*debug/dwarf.buf
debug/dwarf.buf
*debug/dwarf.CharType
debug/dwarf.CharType
*debug/dwarf.Class
debug/dwarf.Class
*debug/dwarf.CommonType
debug/dwarf.CommonType
*debug/dwarf.ComplexType
debug/dwarf.ComplexType
*debug/dwarf.Data
debug/dwarf.Data
debug/dwarf.dataFormat
*debug/dwarf.DecodeError
debug/dwarf.DecodeError
*debug/dwarf.delayed·1
[]debug/dwarf.delayed·1
debug/dwarf.delayed·1
*debug/dwarf.DotDotDotType
debug/dwarf.DotDotDotType
**debug/dwarf.Entry
*debug/dwarf.Entry
debug/dwarf.Entry
*debug/dwarf.EnumType
debug/dwarf.EnumType
**debug/dwarf.EnumValue
*debug/dwarf.EnumValue
[]*debug/dwarf.EnumValue
debug/dwarf.EnumValue
*debug/dwarf.Field
[]debug/dwarf.Field
debug/dwarf.Field
*debug/dwarf.FloatType
debug/dwarf.FloatType
debug/dwarf.format
*debug/dwarf.FuncType
debug/dwarf.FuncType
*debug/dwarf.IntType
debug/dwarf.IntType
*debug/dwarf.LineEntry
debug/dwarf.LineEntry
**debug/dwarf.LineFile
*debug/dwarf.LineFile
[]*debug/dwarf.LineFile
debug/dwarf.LineFile
*debug/dwarf.LineReader
debug/dwarf.LineReader
*debug/dwarf.LineReaderPos
debug/dwarf.LineReaderPos
*debug/dwarf.lnctForm
[]debug/dwarf.lnctForm
debug/dwarf.lnctForm
 debug/dwarf.name string; debug/dwarf.nextDepth *int }
debug/dwarf.Offset
debug/dwarf.pc uintptr; debug/dwarf.fn uintptr; debug/dwarf._panic uintptr; debug/dwarf.link uintptr; debug/dwarf.fd
*debug/dwarf.PtrType
debug/dwarf.PtrType
*debug/dwarf.QualType
debug/dwarf.QualType
*debug/dwarf.Reader
debug/dwarf.Reader
**debug/dwarf.StructField
*debug/dwarf.StructField
[]*debug/dwarf.StructField
debug/dwarf.StructField
*debug/dwarf.StructType
debug/dwarf.StructType
*debug/dwarf.Tag
debug/dwarf.Tag
**debug/dwarf.Type
*debug/dwarf.Type
[]*debug/dwarf.Type
[]debug/dwarf.Type
debug/dwarf.Type
**debug/dwarf.TypedefType
*debug/dwarf.TypedefType
[]*debug/dwarf.TypedefType
debug/dwarf.TypedefType
*debug/dwarf.typeFixer
debug/dwarf.typeFixer
debug/dwarf.typeReader
 debug/dwarf.typeReader; debug/dwarf.typeCache map[debug/dwarf.Offset]debug/dwarf.Type; debug/dwarf.fixups *debug/dw
**debug/dwarf.typeUnit
*debug/dwarf.typeUnit
debug/dwarf.typeUnit
*debug/dwarf.typeUnitReader
debug/dwarf.typeUnitReader
*debug/dwarf.UcharType
debug/dwarf.UcharType
*debug/dwarf.UintType
debug/dwarf.UintType
*debug/dwarf.unit
[]debug/dwarf.unit
debug/dwarf.unit
*debug/dwarf.unknownFormat
debug/dwarf.unknownFormat
*debug/dwarf.UnspecifiedType
debug/dwarf.UnspecifiedType
*debug/dwarf.UnsupportedType
debug/dwarf.UnsupportedType
*debug/dwarf.VoidType
debug/dwarf.VoidType
*debug/elf.Chdr32
debug/elf.Chdr32
*debug/elf.Chdr64
debug/elf.Chdr64
*debug/elf.Class
debug/elf.Class
*debug/elf.CompressionType
debug/elf.CompressionType
*debug/elf.Data
debug/elf.Data
debug/elf.DynFlag
debug/elf.DynFlag1
*debug/elf.DynTag
debug/elf.DynTag
*debug/elf.errorReader
debug/elf.errorReader
*debug/elf.File
debug/elf.File
*debug/elf.FileHeader
debug/elf.FileHeader
*debug/elf.FormatError
debug/elf.FormatError
*debug/elf.Header32
debug/elf.Header32
*debug/elf.Header64
debug/elf.Header64
*debug/elf.ImportedSymbol
[]debug/elf.ImportedSymbol
debug/elf.ImportedSymbol
*debug/elf.intName
[]debug/elf.intName
debug/elf.intName
*debug/elf.Machine
debug/elf.Machine
*debug/elf.nobitsSectionReader
debug/elf.nobitsSectionReader
debug/elf.NType
*debug/elf.OSABI
debug/elf.OSABI
**debug/elf.Prog
*debug/elf.Prog
[]*debug/elf.Prog
debug/elf.Prog
*debug/elf.Prog32
debug/elf.Prog32
*debug/elf.Prog64
debug/elf.Prog64
*debug/elf.ProgFlag
debug/elf.ProgFlag
*debug/elf.ProgHeader
debug/elf.ProgHeader
*debug/elf.ProgType
debug/elf.ProgType
debug/elf.R_386
debug/elf.R_390
debug/elf.R_AARCH64
debug/elf.R_ALPHA
debug/elf.R_ARM
*debug/elf.readSeekerFromReader
debug/elf.readSeekerFromReader
*debug/elf.Rel32
debug/elf.Rel32
*debug/elf.Rela32
debug/elf.Rela32
*debug/elf.Rela64
debug/elf.Rela64
debug/elf.R_LARCH
debug/elf.R_MIPS
debug/elf.R_PPC
debug/elf.R_PPC64
debug/elf.R_RISCV
debug/elf.R_SPARC
debug/elf.R_X86_64
**debug/elf.Section
*debug/elf.Section
[]*debug/elf.Section
debug/elf.Section
*debug/elf.Section32
debug/elf.Section32
*debug/elf.Section64
debug/elf.Section64
*debug/elf.SectionFlag
debug/elf.SectionFlag
*debug/elf.SectionHeader
debug/elf.SectionHeader
*debug/elf.SectionIndex
debug/elf.SectionIndex
*debug/elf.SectionType
debug/elf.SectionType
*debug/elf.Sym32
debug/elf.Sym32
*debug/elf.Sym64
debug/elf.Sym64
debug/elf.SymBind
*debug/elf.Symbol
[]debug/elf.Symbol
debug/elf.Symbol
debug/elf.SymType
debug/elf.SymVis
*debug/elf.Type
debug/elf.Type
*debug/elf.verneed
[]debug/elf.verneed
debug/elf.verneed
*debug/elf.Version
debug/elf.Version
*debug/macho.Cpu
debug/macho.Cpu
*debug/macho.Dylib
debug/macho.Dylib
*debug/macho.DylibCmd
debug/macho.DylibCmd
*debug/macho.Dysymtab
debug/macho.Dysymtab
*debug/macho.DysymtabCmd
debug/macho.DysymtabCmd
*debug/macho.FatArch
[]debug/macho.FatArch
debug/macho.FatArch
*debug/macho.FatArchHeader
debug/macho.FatArchHeader
*debug/macho.FatFile
debug/macho.FatFile
*debug/macho.File
debug/macho.File
*debug/macho.FileHeader
debug/macho.FileHeader
*debug/macho.FormatError
debug/macho.FormatError
*debug/macho.intName
[]debug/macho.intName
debug/macho.intName
*debug/macho.Load
[]debug/macho.Load
debug/macho.Load
*debug/macho.LoadBytes
debug/macho.LoadBytes
*debug/macho.LoadCmd
debug/macho.LoadCmd
*debug/macho.Nlist32
debug/macho.Nlist32
*debug/macho.Nlist64
debug/macho.Nlist64
*debug/macho.Reloc
[]debug/macho.Reloc
debug/macho.Reloc
*debug/macho.relocInfo
debug/macho.relocInfo
debug/macho.RelocTypeARM
debug/macho.RelocTypeARM64
debug/macho.RelocTypeGeneric
debug/macho.RelocTypeX86_64
*debug/macho.Rpath
debug/macho.Rpath
*debug/macho.RpathCmd
debug/macho.RpathCmd
**debug/macho.Section
*debug/macho.Section
[]*debug/macho.Section
debug/macho.Section
*debug/macho.Section32
debug/macho.Section32
*debug/macho.Section64
debug/macho.Section64
*debug/macho.SectionHeader
debug/macho.SectionHeader
*debug/macho.Segment
debug/macho.Segment
*debug/macho.Segment32
debug/macho.Segment32
*debug/macho.Segment64
debug/macho.Segment64
*debug/macho.SegmentHeader
debug/macho.SegmentHeader
*debug/macho.Symbol
[]debug/macho.Symbol
debug/macho.Symbol
*debug/macho.Symtab
debug/macho.Symtab
*debug/macho.SymtabCmd
debug/macho.SymtabCmd
*debug/macho.Type
debug/macho.Type
debug.Module; cmd/go/internal/load.ctx context.Context }
*debug/pe.COFFSymbol
[]debug/pe.COFFSymbol
debug/pe.COFFSymbol
*debug/pe.COFFSymbolAuxFormat5
debug/pe.COFFSymbolAuxFormat5
*debug/pe.DataDirectory
[]debug/pe.DataDirectory
debug/pe.DataDirectory
*debug/pe.File
debug/pe.File
*debug/pe.FileHeader
debug/pe.FileHeader
*debug/pe.ImportDirectory
[]debug/pe.ImportDirectory
debug/pe.ImportDirectory
*debug/pe.nobitsSectionReader
debug/pe.nobitsSectionReader
*debug/pe.OptionalHeader32
debug/pe.OptionalHeader32
*debug/pe.OptionalHeader64
debug/pe.OptionalHeader64
*debug/pe.Reloc
[]debug/pe.Reloc
debug/pe.Reloc
**debug/pe.Section
*debug/pe.Section
[]*debug/pe.Section
debug/pe.Section
*debug/pe.SectionHeader
debug/pe.SectionHeader
*debug/pe.SectionHeader32
debug/pe.SectionHeader32
*debug/pe.StringTable
debug/pe.StringTable
**debug/pe.Symbol
*debug/pe.Symbol
[]*debug/pe.Symbol
debug/pe.Symbol
*debug/plan9obj.File
debug/plan9obj.File
debug/plan9obj.FileHeader
*debug/plan9obj.formatError
debug/plan9obj.formatError
*debug/plan9obj.prog
debug/plan9obj.prog
**debug/plan9obj.Section
*debug/plan9obj.Section
[]*debug/plan9obj.Section
debug/plan9obj.Section
*debug/plan9obj.SectionHeader
debug/plan9obj.SectionHeader
debug/plan9obj.sym
*[]debug/plan9obj.Sym
*debug/plan9obj.Sym
[]debug/plan9obj.Sym
debug/plan9obj.Sym
Defer bool; cmd/go/internal/modconv.sp uintptr; cmd/go/internal/modconv.pc uintptr; cmd/go/internal/modconv.fn uintp
Defer bool; cmd/go/internal/modload.sp uintptr; cmd/go/internal/modload.pc uintptr; cmd/go/internal/modload.fn uintp
detail int32; runtime.schedtrace int32; runtime.tracebackancestors int32; runtime.asyncpreemptoff int32; runtime.har
dfetch.isRetracted func(string) bool }
dfile.File; cmd/go/internal/lockedfile.old []uint8 }
dfile.LineBlock }
dget.ctx context.Context }
dget.old cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/modget.sumErrs []error; cmd/go/internal/modget.
d/go/internal/envcmd._panic uintptr; cmd/go/internal/envcmd.link uintptr; cmd/go/internal/envcmd.fd uintptr; cmd/go/
d/go/internal/modcmd._panic uintptr; cmd/go/internal/modcmd.link uintptr; cmd/go/internal/modcmd.fd uintptr; cmd/go/
d/go/internal/modfetch/codehost.link uintptr; cmd/go/internal/modfetch/codehost.fd uintptr; cmd/go/internal/modfetch
d/go/internal/modfetch/codehost.Origin, string) error; DescendsFrom(context.Context, string, string) (bool, error); 
d/go/internal/modfetch/codehost.Tags, error) }
d/go/internal/modget._panic uintptr; cmd/go/internal/modget.link uintptr; cmd/go/internal/modget.fd uintptr; cmd/go/
d/go/internal/modinfo.ModulePublic }
d/go/internal/modload.current string; cmd/go/internal/modload.allowed cmd/go/internal/modload.AllowedFunc; cmd/go/in
d/go/internal/modload.dqTracker; cmd/go/internal/modload.mg *cmd/go/internal/modload.ModuleGraph }
d/go/internal/modload.isMatch func(string) bool; cmd/go/internal/modload.q *cmd/go/internal/par.Queue; cmd/go/intern
d/go/internal/modload.modPruning) }
d/go/internal/par.err error }]; cmd/go/internal/par..dict *[22]uintptr }
d/go/internal/par.v *cmd/go/internal/modload.modFileSummary; cmd/go/internal/par.err error }]
d/go/internal/par.v go.shape.string; cmd/go/internal/par.err error }]
d/go/internal/par.v go.shape.*uint8; cmd/go/internal/par.err error }]
d/go/internal/par.v string; cmd/go/internal/par.err error }]
d/go/internal/work.gccgoToolchain; cmd/go/internal/work.arArgs []string; cmd/go/internal/work.readCgoFlags func(stri
..dict *[22]uintptr }
dload.modFileSummary, error); cmd/go/internal/modload.unprune map[cmd/vendor/golang.org/x/mod/module.Version]bool; c
dload.pathIsRoot map[string]bool }
dload.pattern string; cmd/go/internal/modload.ctx context.Context; cmd/go/internal/modload.candidateModules []string
dload.tags map[string]bool; cmd/go/internal/modload.addPkg func(string) }
d.mg *cmd/go/internal/modload.ModuleGraph }
/doc/comment.parseDoc; go/doc/comment.text string }
dor/golang.org/x/crypto/cryptobyte.Builder }
dor/golang.org/x/mod/modfile.err *error }
dor/golang.org/x/mod/module.Version; cmd/go/internal/modget.q *cmd/go/internal/modget.query; cmd/go/internal/modget.
dor/golang.org/x/mod/module.Version) error; cmd/go/internal/mvs.postorder *[]cmd/vendor/golang.org/x/mod/module.Vers
dor/golang.org/x/mod/module.Version },go.shape.struct { cmd/go/internal/par.v go.shape.[]string; cmd/go/internal/par
dor/golang.org/x/mod/module.Version },go.shape.struct { cmd/go/internal/par.v []string; cmd/go/internal/par.err erro
dor/golang.org/x/mod/sumdb/tlog.Tile }
d.parentDir string; cmd/go/internal/load.parentRoot string; cmd/go/internal/load.parentIsStd bool; cmd/go/internal/l
d.preal *cmd/go/internal/load.Package }
dr]·1; net..dict *[4]uintptr }
d.Requirements }
d.Requirements; cmd/go/internal/modload.mode cmd/go/internal/modload.ListMode }
d.token·2 }
d uintptr; cmd/go/internal/generate.varp uintptr; cmd/go/internal/generate.framepc uintptr }
d uintptr; cmd/go/internal/modfetch.varp uintptr; cmd/go/internal/modfetch.framepc uintptr }
d uintptr; cmd/go/internal/modindex.varp uintptr; cmd/go/internal/modindex.framepc uintptr }
dule) }
duleJSON; cmd/go/internal/modcmd.sem chan cmd/go/internal/modcmd.token·1 }
dule.Version) bool }
dule.Version]bool }
dule.Version) bool; cmd/go/internal/modget.ctx context.Context; cmd/go/internal/modget.path string }
d/vendor/golang.org/x/mod/module.Version; cmd/go/internal/modget.q *cmd/go/internal/modget.query; cmd/go/internal/mo
d/vendor/golang.org/x/mod/module.Version) error; cmd/go/internal/mvs.postorder *[]cmd/vendor/golang.org/x/mod/module
d/vendor/golang.org/x/mod/sumdb.link uintptr; cmd/vendor/golang.org/x/mod/sumdb.fd uintptr; cmd/vendor/golang.org/x/
d/vendor/golang.org/x/mod/sumdb.vers string }
e }
e]>
eadVal int64; math/rand.readPos int8 }]
e.all bool; runtime.n *int }
earch.Match) error; cmd/go/internal/modload.pattern string }
earch.match func(string) bool; cmd/go/internal/search.m *cmd/go/internal/search.Match }
e chan net.result·3 }
e chan struct {} }
ect.framepc uintptr }
ectFunc *func(go/ast.Node) bool }
ectIdentifier; crypto/x509.pubKeyAlgo crypto/x509.PublicKeyAlgorithm; crypto/x509.hash crypto.Hash }
eep map[cmd/vendor/golang.org/x/mod/module.Version]bool }
e.f *cmd/go/internal/lockedfile.File }
efix string }
eflect.fun [100000]unsafe.Pointer }
e.footerWritten bool; runtime.shutdownSema uint32; runtime.seqStart uint64; runtime.startTicks int64; runtime.endTic
egexp.fn uintptr; regexp._panic uintptr; regexp.link uintptr; regexp.fd uintptr; regexp.varp uintptr; regexp.framepc
e[go.shape.struct { cmd/go/internal/modget.pattern string; cmd/go/internal/modget.m cmd/vendor/golang.org/x/mod/modu
ehost.pc uintptr; cmd/go/internal/modfetch/codehost.fn uintptr; cmd/go/internal/modfetch/codehost._panic uintptr; cm
ehost.vcs string; cmd/go/internal/modfetch/codehost.remote string },go.shape.struct { cmd/go/internal/par.v cmd/go/i
e int8; runtime.tracking bool; runtime.trackingSeq uint8; runtime.trackingStamp int64; runtime.runnableTime int64; r
e map[cmd/vendor/golang.org/x/mod/module.Version]*cmd/go/internal/modinfo.ModulePublic }
e/multipart.numDiskFiles *int; mime/multipart.form *mime/multipart.Form }
em unsafe.Pointer }
en bool }
encoding/asn1.ampersandFlag
encoding/asn1.asteriskFlag
*encoding/asn1.BitString
encoding/asn1.BitString
*encoding/asn1.bitStringEncoder
encoding/asn1.bitStringEncoder
*encoding/asn1.byteEncoder
encoding/asn1.byteEncoder
*encoding/asn1.bytesEncoder
encoding/asn1.bytesEncoder
*encoding/asn1.encoder
[]encoding/asn1.encoder
encoding/asn1.encoder
*encoding/asn1.Enumerated
encoding/asn1.Enumerated
*encoding/asn1.fieldParameters
encoding/asn1.fieldParameters
*encoding/asn1.Flag
encoding/asn1.Flag
*encoding/asn1.int64Encoder
encoding/asn1.int64Encoder
*encoding/asn1.invalidUnmarshalError
encoding/asn1.invalidUnmarshalError
*encoding/asn1.multiEncoder
encoding/asn1.multiEncoder
*encoding/asn1.ObjectIdentifier
[]encoding/asn1.ObjectIdentifier
encoding/asn1.ObjectIdentifier
*encoding/asn1.oidEncoder
encoding/asn1.oidEncoder
encoding/asn1.RawContent
*encoding/asn1.RawValue
encoding/asn1.RawValue
*encoding/asn1.setEncoder
encoding/asn1.setEncoder
*encoding/asn1.stringEncoder
encoding/asn1.stringEncoder
*encoding/asn1.StructuralError
encoding/asn1.StructuralError
*encoding/asn1.SyntaxError
encoding/asn1.SyntaxError
*encoding/asn1.tagAndLength
encoding/asn1.tagAndLength
*encoding/asn1.taggedEncoder
encoding/asn1.taggedEncoder
*encoding/base64.CorruptInputError
encoding/base64.CorruptInputError
*encoding/base64.encoder
encoding/base64.encoder
*encoding/base64.Encoding
encoding/base64.Encoding
*encoding/binary.bigEndian
encoding/binary.bigEndian
encoding/binary.ByteOrder
*encoding/binary.decoder
encoding/binary.decoder
*encoding/binary.littleEndian
encoding/binary.littleEndian
*encoding/hex.InvalidByteError
encoding/hex.InvalidByteError
encoding/json.arrayEncoder
*encoding/json.byIndex
encoding/json.byIndex
encoding/json.condAddrEncoder
*encoding/json.Decoder
encoding/json.Decoder
*encoding/json.decodeState
encoding/json.decodeState
*encoding/json.Encoder
encoding/json.Encoder
*encoding/json.encoderFunc
encoding/json.encoderFunc
*encoding/json.encodeState
encoding/json.encodeState
encoding/json.encOpts
*encoding/json.errorContext
encoding/json.errorContext
; encoding/json.fd uintptr; encoding/json.varp uintptr; encoding/json.framepc uintptr }
**encoding/json.field
*[]encoding/json.field
*encoding/json.field
[]encoding/json.field
encoding/json.field
encoding/json.floatEncoder
*encoding/json.InvalidUnmarshalError
encoding/json.InvalidUnmarshalError
*encoding/json.jsonError
encoding/json.jsonError
encoding/json.mapEncoder
*encoding/json.Marshaler
encoding/json.Marshaler
*encoding/json.MarshalerError
encoding/json.MarshalerError
*encoding/json.Number
encoding/json.Number
encoding/json.ptrEncoder
*encoding/json.reflectWithString
[]encoding/json.reflectWithString
encoding/json.reflectWithString
*encoding/json.scanner
encoding/json.scanner
encoding/json.sliceEncoder
*encoding/json.structEncoder
encoding/json.structEncoder
encoding/json.structFields
*encoding/json.SyntaxError
encoding/json.SyntaxError
encoding/json.tagOptions
encoding/json.Unmarshaler
*encoding/json.UnmarshalTypeError
encoding/json.UnmarshalTypeError
encoding/json.unquotedValue
*encoding/json.UnsupportedTypeError
encoding/json.UnsupportedTypeError
*encoding/json.UnsupportedValueError
encoding/json.UnsupportedValueError
*encoding/pem.Block
encoding/pem.Block
*encoding.TextMarshaler
encoding.TextMarshaler
*encoding.TextUnmarshaler
encoding.TextUnmarshaler
*encoding/xml.Attr
[]encoding/xml.Attr
encoding/xml.Attr
*encoding/xml.CharData
encoding/xml.CharData
*encoding/xml.Comment
encoding/xml.Comment
*encoding/xml.Decoder
encoding/xml.Decoder
*encoding/xml.Directive
encoding/xml.Directive
*encoding/xml.Encoder
encoding/xml.Encoder
*encoding/xml.EndElement
encoding/xml.EndElement
encoding/xml.fieldFlags
*encoding/xml.fieldInfo
[]encoding/xml.fieldInfo
encoding/xml.fieldInfo
*encoding/xml.Marshaler
encoding/xml.Marshaler
*encoding/xml.MarshalerAttr
encoding/xml.MarshalerAttr
*encoding/xml.Name
[]encoding/xml.Name
encoding/xml.Name
*encoding/xml.parentStack
encoding/xml.parentStack
*encoding/xml.printer
encoding/xml.printer
*encoding/xml.ProcInst
encoding/xml.ProcInst
*encoding/xml.stack
encoding/xml.stack
*encoding/xml.StartElement
encoding/xml.StartElement
*encoding/xml.SyntaxError
encoding/xml.SyntaxError
*encoding/xml.TagPathError
encoding/xml.TagPathError
encoding/xml.Token
encoding/xml.TokenReader
*encoding/xml.typeInfo
encoding/xml.typeInfo
*encoding/xml.Unmarshaler
encoding/xml.Unmarshaler
*encoding/xml.UnmarshalerAttr
encoding/xml.UnmarshalerAttr
*encoding/xml.UnmarshalError
encoding/xml.UnmarshalError
*encoding/xml.UnsupportedTypeError
encoding/xml.UnsupportedTypeError
endor/golang.org/x/mod/modfile.Line) bool; cmd/vendor/golang.org/x/mod/modfile.block *cmd/vendor/golang.org/x/mod/mo
endor/golang.org/x/mod/module.Version },go.shape.[]string]
e; net/http.reqs *[]*net/http.Request }
entDir string; cmd/go/internal/load.parentRoot string; cmd/go/internal/load.parentIsStd bool; cmd/go/internal/load.m
ent.score·1) int; go/doc/comment.g func(int, int) go/doc/comment.score·1 }
eOpts; cmd/go/internal/load.walk *func(*cmd/go/internal/load.Package) }
er bool; cmd/go/internal/envcmd.sp uintptr; cmd/go/internal/envcmd.pc uintptr; cmd/go/internal/envcmd.fn uintptr; cm
er bool; cmd/go/internal/modcmd.sp uintptr; cmd/go/internal/modcmd.pc uintptr; cmd/go/internal/modcmd.fn uintptr; cm
er bool; cmd/go/internal/modget.sp uintptr; cmd/go/internal/modget.pc uintptr; cmd/go/internal/modget.fn uintptr; cm
ernal/load.ImportStack; cmd/go/internal/load.path string; cmd/go/internal/load.importPos []go/token.Position }
ernal/load.parentIsStd bool; cmd/go/internal/load.mode int }) bool; cmd/go/internal/par.c *cmd/go/internal/par.Cache
ernal/lockedfile.fd uintptr; cmd/go/internal/lockedfile.varp uintptr; cmd/go/internal/lockedfile.framepc uintptr }
ernal/modfetch/codehost.ctx context.Context }
ernal/modfetch/codehost.ctx context.Context; cmd/go/internal/modfetch/codehost.rev string }
ernal/modfetch/codehost.Origin, string) error; DescendsFrom(context.Context, string, string) (bool, error); Latest(c
ernal/modfetch/codehost.RevInfo, error); ReadFile(context.Context, string, string, int64) ([]uint8, error); ReadZip(
ernal/modget.m cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/modget.versionOk *bool }
ernal/modload..autotmp_27 string; cmd/go/internal/modload..autotmp_28 *cmd/go/internal/modload.result·5 }
ernal/modload.index *cmd/go/internal/modload.modFileIndex }
ernal/modload.loadPkgFlags; cmd/go/internal/modload.createdTest *bool }
ernal/modload.ModuleGraph; cmd/go/internal/modload.ld *cmd/go/internal/modload.loader; cmd/go/internal/modload.misma
ernal/modload.pre114 bool; cmd/go/internal/modload.vendErrorf func(cmd/vendor/golang.org/x/mod/module.Version, strin
ernal/modload.pruning cmd/go/internal/modload.modPruning; cmd/go/internal/modload.unprune map[cmd/vendor/golang.org/
ernal/par..dict *[22]uintptr }
ernal/par.err error }]
ernal/test.cancelSignaled *bool }
ernal/trace.traceFile }
ernal/work.BuildMode; cmd/go/internal/work.depMode cmd/go/internal/work.BuildMode; cmd/go/internal/work.p *cmd/go/in
ern.link uintptr; internal/intern.fd uintptr; internal/intern.varp uintptr; internal/intern.framepc uintptr }
ern.sp uintptr; internal/intern.pc uintptr; internal/intern.fn uintptr; internal/intern._panic uintptr; internal/int
eRoot *sync.Map }
.err *error }
.err error }]
err error }]
.err error }]; cmd/go/internal/par..dict *[22]uintptr }
err error }]; cmd/go/internal/par..dict *[22]uintptr }
 *error }
 error }
*[]error
*error
*error }
[]error
error
error }]
Error }
"" }, error); cmd/go/internal/par..dict *[11]uintptr }
error; cmd/vendor/golang.org/x/mod/sumdb.data [][]uint8; cmd/vendor/golang.org/x/mod/sumdb.r *cmd/vendor/golang.org/
error); Latest(context.Context) (*cmd/go/internal/modfetch/codehost.RevInfo, error); ReadFile(context.Context, strin
*errors.errorString
errors.errorString
*errors.joinError
errors.joinError
ersFrame }
ersion][]string; cmd/go/internal/modfetch.w map[string]map[cmd/vendor/golang.org/x/mod/module.Version][]string; cmd/
ers string; net/http.contentLength int64; net/http.addGzipHeader bool }
escendsFrom(context.Context, string, string) (bool, error); Latest(context.Context) (*cmd/go/internal/modfetch/codeh
es map[cmd/vendor/golang.org/x/mod/module.Version]cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/mvs.g 
e.stringsLock runtime.mutex; runtime.strings map[string]uint64; runtime.stringSeq uint64; runtime.markWorkerLabels [
esult·3 }
etch/codehost.RevInfo, error); Tags(context.Context, string) (*cmd/go/internal/modfetch/codehost.Tags, error) }; cmd
etch.err2info *map[error]*cmd/go/internal/modfetch.RevInfo }
e time.Time; Uncommitted bool }; cmd/go/internal/par.err error }]
et.IPAddr, error); net.network string; net.host string }
e.Version }
e.Version; cmd/go/internal/par.err error }]
evInfo, error); ModulePath() string; Stat(context.Context, string) (*cmd/go/internal/modfetch.RevInfo, error); Versi
ext, *cmd/go/internal/modfetch/codehost.Origin) error; GoMod(context.Context, string) ([]uint8, error); Latest(conte
ext, *cmd/go/internal/modfetch/codehost.Origin, string) error; DescendsFrom(context.Context, string, string) (bool, 
ext.Context; cmd/go/internal/modget.path string; cmd/go/internal/modget.q **cmd/go/internal/modget.query; cmd/go/int
ext.Context; cmd/go/internal/modget.q **cmd/go/internal/modget.query }
ext.Context; cmd/go/internal/modload.m *cmd/go/internal/modinfo.ModulePublic; cmd/go/internal/modload.sem chan cmd/g
ext.Context; net.done chan struct {} }
ext.Context, string) ([]uint8, error); Latest(context.Context) (*cmd/go/internal/modfetch.RevInfo, error); ModulePat
ext.framepc uintptr }
fd uintptr; vendor/golang.org/x/crypto/cryptobyte.varp uintptr; vendor/golang.org/x/crypto/cryptobyte.framepc uintpt
fetch/codehost.Origin, string) error; DescendsFrom(context.Context, string, string) (bool, error); Latest(context.Co
fetchResult) (cmd/go/internal/vcs.fetchResult, error); cmd/go/internal/vcs.security cmd/go/internal/web.SecurityMode
Field }
.File; cmd/go/internal/lockedfile.old []uint8 }
file.Error }
FileMode }
file.openDefer bool; cmd/go/internal/lockedfile.sp uintptr; cmd/go/internal/lockedfile.pc uintptr; cmd/go/internal/l
fix cmd/vendor/golang.org/x/mod/modfile.VersionFixer; cmd/vendor/golang.org/x/mod/modfile.parsed **cmd/vendor/golang
flag.boolFlag
*flag.boolFuncValue
flag.boolFuncValue
*flag.boolValue
flag.boolValue
*flag.durationValue
flag.durationValue
flag.ErrorHandling
**flag.Flag
*flag.Flag
[]*flag.Flag
flag.Flag
*flag.FlagSet
flag.FlagSet
*flag.float64Value
flag.float64Value
*flag.funcValue
flag.funcValue
*flag.int64Value
flag.int64Value
*flag.intValue
flag.intValue
*flag.stringValue
flag.stringValue
*flag.textValue
flag.textValue
*flag.uint64Value
flag.uint64Value
*flag.uintValue
flag.uintValue
flag.Value
*float32
[]float32
float32
*float64
[]float64
float64
*fmt.buffer
fmt.buffer
*fmt.fmt
fmt.fmt
fmt.fmtFlags
fmt.Formatter
fmt.GoStringer
fmt._panic uintptr; fmt.link uintptr; fmt.fd uintptr; fmt.varp uintptr; fmt.framepc uintptr }
*fmt.pp
fmt.pp
*fmt.readRune
fmt.readRune
fmt.scanError
fmt.Scanner
fmt.ScanState
*fmt.ss
fmt.ss
*fmt.ssave
fmt.ssave
fmt.State
*fmt.Stringer
fmt.Stringer
*fmt.stringReader
fmt.stringReader
*fmt.wrapError
fmt.wrapError
*fmt.wrapErrors
fmt.wrapErrors
fn uintptr; bytes._panic uintptr; bytes.link uintptr; bytes.fd uintptr; bytes.varp uintptr; bytes.framepc uintptr }
fo; cmd/go/internal/par.err error }]
From(context.Context, string, string) (bool, error); Latest(context.Context) (*cmd/go/internal/modfetch/codehost.Rev
*func()
[]func()
func()
func([2]string) bool
func(*archive/zip.File, error)
*func(bool)
func() bool
func(bool)
func() (bool, bool)
func() (bool, error)
func(bool) int
func(<-chan internal/singleflight.Result, context.CancelFunc)
func(*cmd/go/internal/base.netTokenChecker)
func() *cmd/go/internal/list.Context
func(cmd/go/internal/load.importSpec) bool
*func(*cmd/go/internal/load.Package)
func(*cmd/go/internal/load.Package)
*func(*cmd/go/internal/load.Package) bool
[]func(*cmd/go/internal/load.Package) bool
func(*cmd/go/internal/load.Package) bool
*func(*cmd/go/internal/load.Package) *cmd/go/internal/load.Package
func(*cmd/go/internal/load.Package) *cmd/go/internal/load.Package
func([]*cmd/go/internal/load.Package) []*cmd/go/internal/load.Package
func(*cmd/go/internal/load.Package, string)
func(*cmd/go/internal/load.Package, []string, string) error
func() cmd/go/internal/load.resolvedImport
func(*cmd/go/internal/lockedfile.File)
func() (cmd/go/internal/modfetch/codehost.Repo, error)
func() (*cmd/go/internal/modfetch/codehost.RevInfo, error)
func(cmd/go/internal/modfetch/codehost.vcsCacheKey) bool
func(cmd/go/internal/modfetch.lookupCacheKey) bool
func() cmd/go/internal/modfetch.Repo
func(*cmd/go/internal/modfetch.RevInfo, *cmd/go/internal/modfetch/codehost.Origin) *cmd/go/internal/modfetch.RevInfo
func() (*cmd/go/internal/modfetch.RevInfo, error)
func() (*cmd/go/internal/modfetch.Versions, error)
func(cmd/go/internal/modget.matchInModuleKey) bool
func() cmd/go/internal/modget.pathSet
func(*cmd/go/internal/modget.query, string) string
func() (*cmd/go/internal/modindex.IndexPackage, error)
func() (*cmd/go/internal/modindex.Module, error)
func(*cmd/go/internal/modinfo.ModulePublic)
*func(*cmd/go/internal/modinfo.ModulePublic) *runtime/debug.Module
func(*cmd/go/internal/modinfo.ModulePublic) *runtime/debug.Module
func(*cmd/go/internal/modinfo.ModulePublic) string
func() *cmd/go/internal/modload.loadPkg
func() (*cmd/go/internal/modload.modFileSummary, error)
func(*cmd/go/internal/modload.Requirements, *cmd/go/internal/modload.loader)
func(*cmd/go/internal/modload.Requirements) []string
func() cmd/go/internal/par.errValue[bool]
func() cmd/go/internal/par.errValue[cmd/go/internal/modfetch/codehost.Repo]
func() cmd/go/internal/par.errValue[*cmd/go/internal/modfetch/codehost.RevInfo]
func() cmd/go/internal/par.errValue[*cmd/go/internal/modfetch.RevInfo]
func() cmd/go/internal/par.errValue[*cmd/go/internal/modfetch.Versions]
func() cmd/go/internal/par.errValue[*cmd/go/internal/modindex.IndexPackage]
func() cmd/go/internal/par.errValue[*cmd/go/internal/modindex.Module]
func() cmd/go/internal/par.errValue[*cmd/go/internal/modload.modFileSummary]
func() cmd/go/internal/par.errValue[cmd/go/internal/vcs.Status]
func() cmd/go/internal/par.errValue[cmd/vendor/golang.org/x/mod/module.Version]
func() cmd/go/internal/par.errValue[*go/build.Package]
func() cmd/go/internal/par.errValue[[]string]
func() cmd/go/internal/par.errValue[string]
func() cmd/go/internal/par.errValue[[]uint8]
func(*cmd/go/internal/search.Match) error
func(*cmd/go/internal/vcs.Cmd, string) (cmd/go/internal/vcs.Status, error)
func(*cmd/go/internal/vcs.Cmd, string) (string, error)
func(*cmd/go/internal/vcs.Cmd, string, string) (string, error)
func(cmd/go/internal/vcs.fetchResult) (cmd/go/internal/vcs.fetchResult, error)
func() (cmd/go/internal/vcs.Status, error)
*func(*cmd/go/internal/work.Action)
func() *cmd/go/internal/work.Action
func(*cmd/go/internal/work.Action)
 *func(*cmd/go/internal/work.Action); cmd/go/internal/work.all *[]*cmd/go/internal/work.Action }
func(*cmd/go/internal/work.Action) error
func(*cmd/go/internal/work.Action, string, bool)
func(*cmd/go/internal/work.Builder, *cmd/go/internal/work.Action) bool
func(cmd/vendor/golang.org/x/mod/modfile.Comments) bool
*func(*cmd/vendor/golang.org/x/mod/modfile.File)
[]func(*cmd/vendor/golang.org/x/mod/modfile.File)
func(*cmd/vendor/golang.org/x/mod/modfile.File)
func(*cmd/vendor/golang.org/x/mod/modfile.Line, *cmd/vendor/golang.org/x/mod/modfile.Line) bool
func(*cmd/vendor/golang.org/x/mod/modfile.Line) cmd/vendor/golang.org/x/mod/modfile.VersionInterval
func([]*cmd/vendor/golang.org/x/mod/modfile.Replace)
func(*cmd/vendor/golang.org/x/mod/modfile.Require, *cmd/vendor/golang.org/x/mod/modfile.LineBlock)
*func(*cmd/vendor/golang.org/x/mod/modfile.WorkFile)
[]func(*cmd/vendor/golang.org/x/mod/modfile.WorkFile)
func(*cmd/vendor/golang.org/x/mod/modfile.WorkFile)
func(cmd/vendor/golang.org/x/mod/module.Version)
func(cmd/vendor/golang.org/x/mod/module.Version) bool
func(cmd/vendor/golang.org/x/mod/module.Version) (*cmd/go/internal/modload.modFileSummary, error)
*func(cmd/vendor/golang.org/x/mod/module.Version, cmd/go/internal/modload.modPruning)
func(cmd/vendor/golang.org/x/mod/module.Version) cmd/go/internal/modload.modPruning
func(cmd/vendor/golang.org/x/mod/module.Version, cmd/go/internal/modload.modPruning)
func(cmd/vendor/golang.org/x/mod/module.Version, cmd/vendor/golang.org/x/mod/module.Version) bool
func(cmd/vendor/golang.org/x/mod/module.Version) (cmd/vendor/golang.org/x/mod/module.Version, error)
*func(cmd/vendor/golang.org/x/mod/module.Version) error
func() (cmd/vendor/golang.org/x/mod/module.Version, error)
func(cmd/vendor/golang.org/x/mod/module.Version) error
func(cmd/vendor/golang.org/x/mod/module.Version) string
func(cmd/vendor/golang.org/x/mod/module.Version) (string, bool)
func(cmd/vendor/golang.org/x/mod/module.Version, []string, bool) *cmd/go/internal/search.Match
func(cmd/vendor/golang.org/x/mod/module.Version, string, ...interface {})
func([]cmd/vendor/golang.org/x/mod/module.Version) (string, string)
func(cmd/vendor/golang.org/x/mod/zip.File, string, int64) error
func(*compress/flate.compressor)
func(*compress/flate.compressor, []uint8) int
func(*compress/flate.decompressor)
func(context.Context, bool)
func(context.Context, *cmd/go/internal/base.Command, []string)
func(context.Context) (cmd/go/internal/modfetch.Repo, error)
func(context.Context, *cmd/go/internal/work.Action)
func(context.Context, cmd/vendor/golang.org/x/mod/module.Version) error
func(context.Context) error
func(context.Context, func(context.Context, string, string) ([]net.IPAddr, error), string, string) ([]net.IPAddr, er
func(context.Context, io.ReadWriter, net/http.socksAuthMethod) error
func(context.Context, io.Writer, string, string, string, string) error
func(context.Context, *net/url.URL, *net/http.Request, *net/http.Response) error
func(context.Context, *net/url.URL, string) (net/http.Header, error)
func(context.Context, string) (cmd/go/internal/modload.QueryResult, error)
func(context.Context, string, cmd/vendor/golang.org/x/mod/module.Version) bool
func(context.Context, string, cmd/vendor/golang.org/x/mod/module.Version) error
func(context.Context) ([]string, error)
func(context.Context, string, *net.TCPAddr, *net.TCPAddr) (*net.TCPConn, error)
func(context.Context, string, string, *crypto/tls.Config) (net.Conn, error)
func(context.Context, string, string) (net.Conn, error)
func(context.Context, string, string) ([]net.IPAddr, error)
func(context.Context, string, string, syscall.RawConn) error
func() *crypto/internal/nistec.P224Point
func() *crypto/internal/nistec.P256Point
func() *crypto/internal/nistec.P384Point
func() *crypto/internal/nistec.P521Point
func(*crypto/tls.activeCert)
func(*crypto/tls.CertificateRequestInfo) (*crypto/tls.Certificate, error)
func(*crypto/tls.cipherSuite) bool
func(*crypto/tls.ClientHelloInfo) (*crypto/tls.Certificate, error)
func(*crypto/tls.ClientHelloInfo) (*crypto/tls.Config, error)
func(crypto/tls.ConnectionState, *crypto/tls.SessionState) ([]uint8, error)
func(crypto/tls.ConnectionState) error
func(crypto/tls.ConnectionState, error)
func() (*crypto/x509.Certificate, error)
func() *debug/dwarf.Entry
func(*debug/dwarf.Entry) debug/dwarf.Type
func(*debug/elf.Section) string
func(*debug/macho.Section) string
func(*debug/macho.Section) ([]uint8, error)
func(*debug/pe.Section) string
func(*debug/pe.Section) ([]uint8, error)
func(debug/plan9obj.sym) error
func(*encoding/json.encodeState, reflect.Value, encoding/json.encOpts)
func(*encoding/json.scanner, uint8) int
*func() error
*func(error)
[]func() error
func() error
func(error)
func(error) (cmd/go/internal/cache.Entry, error)
func(error) *cmd/vendor/golang.org/x/mod/modfile.Error
func(error) error
func(*flag.Flag)
func(func()) bool
func(func() error)
func(func(string, string))
func(*go/ast.FieldList)
func(*go/ast.ImportSpec) go/token.Pos
*func(go/ast.Node) bool
func(go/ast.Node) bool
func() (*go/build.Package, error)
func(*go/doc/comment.DocLink) string
func(*go/doc/comment.Heading) string
func(go/doc/comment.score·1, go/doc/comment.score·1) go/doc/comment.score·1
func(go/doc/comment.score·1, go/doc/comment.score·1) int
func(go.shape.[2]string) bool
func() go.shape.bool
func() (go.shape.bool, error)
func() go.shape.interface { CheckReuse(context.Context, *cmd/go/internal/modfetch/codehost.Origin) error; GoMod(cont
func() (go.shape.interface { CheckReuse(context.Context, *cmd/go/internal/modfetch/codehost.Origin, string) error; D
func() go.shape.interface { Error() string }
func() (go.shape.int, error)
func() (go.shape.[]net.IPAddr, error)
func() go.shape.string
func(go.shape.string) bool
func() (go.shape.[]string, error)
func() (go.shape.string, error)
func(go.shape.string, int, int) int
func(go.shape.struct {}) bool
func() go.shape.struct { cmd/go/internal/load.path string; cmd/go/internal/load.dir string; cmd/go/internal/load.err
func(go.shape.struct { cmd/go/internal/load.path string; cmd/go/internal/load.parentPath string; cmd/go/internal/loa
func(go.shape.struct { cmd/go/internal/modfetch/codehost.vcs string; cmd/go/internal/modfetch/codehost.remote string
func(go.shape.struct { cmd/go/internal/modfetch.proxy string; cmd/go/internal/modfetch.path string }) bool
func(go.shape.struct { cmd/go/internal/modget.pattern string; cmd/go/internal/modget.m cmd/vendor/golang.org/x/mod/m
func() go.shape.struct { cmd/go/internal/par.v bool; cmd/go/internal/par.err error }
func() go.shape.struct { cmd/go/internal/par.v cmd/go/internal/modfetch/codehost.Repo; cmd/go/internal/par.err error
func() go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch/codehost.RevInfo; cmd/go/internal/par.err e
func() go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch.RevInfo; cmd/go/internal/par.err error }
func() go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch.Versions; cmd/go/internal/par.err error }
func() go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modindex.IndexPackage; cmd/go/internal/par.err error
func() go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modindex.Module; cmd/go/internal/par.err error }
func() go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modload.modFileSummary; cmd/go/internal/par.err erro
func() go.shape.struct { cmd/go/internal/par.v cmd/go/internal/vcs.Status; cmd/go/internal/par.err error }
func() go.shape.struct { cmd/go/internal/par.v cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/par.err e
func() go.shape.struct { cmd/go/internal/par.v *go/build.Package; cmd/go/internal/par.err error }
func() go.shape.struct { cmd/go/internal/par.v go.shape.bool; cmd/go/internal/par.err error }
func() go.shape.struct { cmd/go/internal/par.v go.shape.interface { CheckReuse(context.Context, *cmd/go/internal/mod
func() go.shape.struct { cmd/go/internal/par.v go.shape.[]string; cmd/go/internal/par.err error }
func() go.shape.struct { cmd/go/internal/par.v go.shape.string; cmd/go/internal/par.err error }
func() go.shape.struct { cmd/go/internal/par.v go.shape.struct { Path string; Version string "json:\",omitempty\"" }
func() go.shape.struct { cmd/go/internal/par.v go.shape.struct { Revision string; CommitTime time.Time; Uncommitted 
func() go.shape.struct { cmd/go/internal/par.v go.shape.*uint8; cmd/go/internal/par.err error }
func() go.shape.struct { cmd/go/internal/par.v go.shape.[]uint8; cmd/go/internal/par.err error }
func() go.shape.struct { cmd/go/internal/par.v []string; cmd/go/internal/par.err error }
func() go.shape.struct { cmd/go/internal/par.v string; cmd/go/internal/par.err error }
func() go.shape.struct { cmd/go/internal/par.v []uint8; cmd/go/internal/par.err error }
func(go.shape.struct { Path string; Version string "json:\",omitempty\"" })
func(go.shape.struct { Path string; Version string "json:\",omitempty\"" }) bool
func() (go.shape.struct { Path string; Version string "json:\",omitempty\"" }, error)
func() (go.shape.struct { Revision string; CommitTime time.Time; Uncommitted bool }, error)
func() go.shape.*uint8
func() (go.shape.*uint8, error)
func() (go.shape.[]uint8, error)
func(go.shape.[]uint8, int, int) int
func(go/token.Position, string)
func(go/token.Pos, string)
*func() hash.Hash
[]func() hash.Hash
func() hash.Hash
func([]int)
func(int)
func() int32
func(int32) bool
func(int32) int32
func(int64) int64
func(int) bool
func(int) *cmd/vendor/golang.org/x/mod/modfile.Line
func(int) *cmd/vendor/golang.org/x/mod/modfile.LineBlock
func(int, cmd/vendor/golang.org/x/mod/module.Version)
func(int, cmd/vendor/golang.org/x/mod/sumdb/tlog.Tile)
func(int, *crypto/x509.Certificate)
func(int, *debug/elf.Section) ([]uint8, error)
func() interface {}
func(interface {})
func(interface {}) bool
func([]interface {}, bool, error)
func() (interface {}, error)
func(interface {}, interface {}) bool
func(interface {}, interface {}) (bool, error)
func(...interface {}) (int, error)
func(...interface {}) string
func(interface {}, uintptr)
func(*internal/abi.Type) reflect.Type
func(*internal/intern.Value)
func(*internal/poll.FD, *internal/poll.FD, int64) (int64, bool, error)
func(*internal/poll.FD, *internal/poll.FD, int64) (int64, bool, string, error)
func(*internal/poll.splicePipe)
func(*internal/zstd.Reader, int, []internal/zstd.fseEntry, []internal/zstd.fseBaselineEntry) error
func(*internal/zstd.reverseBitReader) (uint16, error)
func() (int, error)
func(int) error
func(int) int
func(int, int)
func(*int, *[]int32, uint32) bool
func(int, int) bool
func(int, int) error
func(int, int) go/doc/comment.score·1
func(int, int) int
func(int, int, int) bool
func(int, int, int) (int, error)
func(int, int, int) runtime.addrRange
func(int, int) (int, syscall.Sockaddr, error)
func(int) (int, syscall.Sockaddr, error)
func(int, net/textproto.MIMEHeader) error
func(int, runtime.addrRange) (int, int)
func(int, runtime.addrRange) runtime.addrRange
func(int, syscall.Sockaddr) error
func(int, time.Time)
func(int, []uint8) error
func(int, []uint8) (int, error)
func() (io.ReadCloser, error)
func(io.Reader)
func() (io.Reader, error)
func(io.Reader) (io.ReadCloser, error)
func(io.Writer, []uint8) error
func(map[string]string) error
func(net.Addr) bool
func(net/http.Header)
func(*net/http.http2clientStream, error) error
func(net/http.http2Setting) error
func(*net/http/httptrace.ClientTrace) bool
func(net/http/httptrace.DNSDoneInfo)
func(net/http/httptrace.DNSStartInfo)
func(net/http/httptrace.GotConnInfo)
func(net/http/httptrace.WroteRequestInfo)
func(*net/http.Request)
func(*net/http.Request, []*net/http.Request) error
func(*net/http.Request) (*net/url.URL, error)
func() (*net/http.Response, error)
func(*net/http.Response, error)
func(net.IPAddr) bool
func() ([]net.IPAddr, error)
func(net.IPAddr) net.Addr
func(*net.netFD) error
func(*net/url.URL) (*net/url.URL, error)
func(*net/url.URL) (*net/url.URL, *net/http.Response, error)
func(*os/exec.Cmd)
func(*os.file) error
func(*os.Process) error
func(reflect.Type) reflect.Type
func(reflect.Value) bool
func(reflect.Value) (int, error)
func(reflect.Value, reflect.Type) reflect.Value
func([]reflect.Value) []reflect.Value
func(reflect.Value) reflect.Value
func(reflect.Value, reflect.Value)
func(reflect.Value, reflect.Value) bool
func(reflect.Value, ...reflect.Value) (bool, error)
func(reflect.Value, reflect.Value) (bool, error)
func(reflect.Value, ...reflect.Value) reflect.Value
func(reflect.Value, ...reflect.Value) (reflect.Value, error)
func(reflect.Value) unsafe.Pointer
func(*runtime.g)
func(*runtime.g) bool
func(*runtime.g, unsafe.Pointer) bool
func(*runtime/internal/atomic.Int64) bool
func(*runtime.itab)
func(runtime.offAddr, uintptr)
func(*runtime.p)
func(*runtime.siginfo, *runtime.sigctxt, *runtime.g) bool
func(*runtime.statAggregate, *runtime.metricValue)
func() string
func([]string)
func(string)
*func(string) bool
[]func(string) bool
func(string) bool
func(string, bool)
func(string, bool) bool
 func(string) bool; cmd/go/internal/modload.firstError func(*cmd/go/internal/search.Match) error; cmd/go/internal/mo
func(string) (bool, error)
func(string, bool, error)
func(string) (*cmd/go/internal/modfetch.RevInfo, error)
func(string) *cmd/go/internal/modinfo.ModulePublic
func(string) (*cmd/go/internal/modload.queryMatcher, error)
func(string, *cmd/go/internal/modload.result·5)
*func(string, *crypto/tls.Conn) net/http.RoundTripper
func(string, *crypto/tls.Conn) net/http.RoundTripper
func() ([]string, error)
func() (string, error)
func(string) error
func(string, error)
func(string, error) *cmd/vendor/golang.org/x/mod/modfile.Error
*func(string) func()
func(string) func()
func(string, int) *cmd/go/internal/load.Package
func(string, ...interface {})
func(string, ...interface {}) *cmd/vendor/golang.org/x/mod/modfile.Error
func(string, ...interface {}) (cmd/vendor/golang.org/x/mod/module.Version, string, string, []cmd/vendor/golang.org/x
func(string, ...interface {}) error
func(string, ...interface {}) (*flag.Flag, []string, error)
func(string, ...interface {}) string
func(string) *internal/lazyregexp.Regexp
func(string, int, int) int
func(string, io/fs.DirEntry) bool
func(string) ([]io/fs.FileInfo, error)
func(string) (io/fs.FileInfo, error)
func(string) (io.ReadCloser, error)
func(string, io.Reader) (io.Reader, error)
*func(string, runtime/debug.Module)
func(string, runtime/debug.Module)
func([]string) (runtime/debug.Module, error)
*func(string, string)
func(...string) string
func([]string) []string
func([]string) string
func(string) []string
func(string) string
func(string, []string)
func(string, string)
func(string) (string, bool)
func(string, string) bool
func(string, string) (*cmd/go/internal/modfetch/codehost.RevInfo, error)
func(string, string, cmd/go/internal/modload.pruning·6)
func(string, string) (cmd/vendor/golang.org/x/mod/module.Version, error)
func(string, string, *crypto/tls.Config) (net.Conn, error)
func(string) (string, error)
func(string, string, error)
func(string, string) (net.Conn, error)
func([]string, string) string
func(string, string) []string
func(string, string) (string, bool)
func(string, string, []string) error
func(string, string, string) int
func(string, string, string) []string
func(string, string, string) (string, bool)
func(string, string) (string, string, error)
func([]string, []string, []string) ([]string, []string)
func(string, string, string, string) []string
func(string, string, syscall.RawConn) error
func(string, string) ([]uint8, error)
*func(string, []uint8) (*cmd/vendor/golang.org/x/mod/modfile.File, error)
func(string, []uint8) (*cmd/vendor/golang.org/x/mod/modfile.File, error)
func(string, []uint8, int) ([]uint8, error)
func(string, vendor/golang.org/x/net/dns/dnsmessage.Type)
func(string, vendor/golang.org/x/net/dns/dnsmessage.Type) net.result·3
func(struct {}) bool
func(syscall.Sockaddr) net.Addr
func(*text/template/parse.lexer) text/template/parse.stateFn
func(time.Duration)
func(time.Duration) *time.Timer
func() time.Time
func(uint16) crypto/tls.keyAgreement
*func(uint32, []bool) bool
func(uint32, []bool) bool
func(uint32, bool) uint32
func(uint32, runtime.vdsoSymbolKey) bool
func(uint32) []uint8
func(uint32, []uint8) uint32
func() uint64
func(uint64, uint64)
func(uint64, uint64) string
func(uint64, uint64) uint64
func([]uint8)
func(uint8) bool
func([]uint8, crypto/tls.ConnectionState) (*crypto/tls.SessionState, error)
func([][]uint8, [][]*crypto/x509.Certificate) error
func() ([]uint8, error)
func([]uint8) error
func([]uint8) hash.Hash
func([]uint8, int, int) int
func([]uint8, []int) []uint8
func([]uint8) uint32
func([]uint8, []uint32)
func([]uint8) uint64
func([]uint8) []uint8
func([]uint8) uint8
func([]uint8, []uint8) bool
func(uint8, uint8) bool
func([]uint8, []uint8, bool) interface {}
func([]uint8, []uint8) crypto/tls.aead
func([]uint8) ([]uint8, error)
func(uint8, uint8, uint8)
func([]uint8, []uint8, []uint8, []uint8)
func() []uintptr
func(uintptr)
func(uintptr) bool
func(uintptr) int
func(uintptr) uint8
func(uintptr, []uint8) error
func(uintptr, uintptr) error
func(uintptr) (uintptr, int64)
func(uintptr, uintptr, int, int, int, int64) (uintptr, error)
func(uintptr, unsafe.Pointer, int32) int32
func(uint) uint8
func(unsafe.Pointer)
func(unsafe.Pointer, uintptr)
func(unsafe.Pointer, uintptr) uintptr
func(unsafe.Pointer, unsafe.Pointer)
func(unsafe.Pointer, unsafe.Pointer) bool
func(unsafe.Pointer, unsafe.Pointer) int32
func(vendor/golang.org/x/crypto/cryptobyte.String) ([]string, []*net.IPNet, []string, []string, error)
func(vendor/golang.org/x/net/dns/dnsmessage.Type)
func(vendor/golang.org/x/net/http2/hpack.HeaderField)
func(*vendor/golang.org/x/net/idna.Profile, string) error
func(*vendor/golang.org/x/net/idna.Profile, string) (string, bool, error)
func(*vendor/golang.org/x/text/unicode/norm.reorderBuffer) bool
g }
g) bool) (string, error); Stat(context.Context, string) (*cmd/go/internal/modfetch/codehost.RevInfo, error); Tags(co
g; cmd/go/internal/load.parentDir string; cmd/go/internal/load.parentRoot string; cmd/go/internal/load.parentIsStd b
g; cmd/go/internal/modconv.versions []cmd/vendor/golang.org/x/mod/module.Version }
g) (*cmd/go/internal/modfetch.Versions, error); Zip(context.Context, io.Writer, string) error }]
g; cmd/go/internal/modload.current string; cmd/go/internal/modload.allowed cmd/go/internal/modload.AllowedFunc; cmd/
g; cmd/vendor/golang.org/x/mod/sumdb.vers string }
gcode1 uintptr; runtime.sigpc uintptr; runtime.parentGoid uint64; runtime.gopc uintptr; runtime.ancestors *[]runtime
g(context.Context, string, string, func(string) bool) (string, error); Stat(context.Context, string) (*cmd/go/intern
ge; cmd/go/internal/load.pkgs []*cmd/go/internal/load.Package; cmd/go/internal/load.pmain *cmd/go/internal/load.Pack
ger runtime/internal/atomic.Uintptr }
g, func(string) bool) (string, error); Stat(context.Context, string) (*cmd/go/internal/modfetch/codehost.RevInfo, er
g; go/build.gopath []string } }
gin, string) error; DescendsFrom(context.Context, string, string) (bool, error); Latest(context.Context) (*cmd/go/in
g, int64) ([]uint8, error); ReadZip(context.Context, string, string, int64) (io.ReadCloser, error); RecentTag(contex
g, ...interface {}); cmd/go/internal/modload.describe func(cmd/vendor/golang.org/x/mod/module.Version) string }
g "json:\",omitempty\"" }; cmd/go/internal/par.err error }]
*go/ast.ArrayType
go/ast.ArrayType
*go/ast.AssignStmt
go/ast.AssignStmt
*go/ast.BadDecl
go/ast.BadDecl
*go/ast.BadExpr
go/ast.BadExpr
*go/ast.BadStmt
go/ast.BadStmt
*go/ast.BasicLit
go/ast.BasicLit
*go/ast.BinaryExpr
go/ast.BinaryExpr
*go/ast.BlockStmt
go/ast.BlockStmt
*go/ast.BranchStmt
go/ast.BranchStmt
*go/ast.CallExpr
go/ast.CallExpr
*go/ast.CaseClause
go/ast.CaseClause
go/ast.ChanDir
*go/ast.ChanType
go/ast.ChanType
*go/ast.CommClause
go/ast.CommClause
**go/ast.Comment
*go/ast.Comment
[]*go/ast.Comment
go/ast.Comment
**go/ast.CommentGroup
*go/ast.CommentGroup
[]*go/ast.CommentGroup
go/ast.CommentGroup
*go/ast.CompositeLit
go/ast.CompositeLit
*[]go/ast.Decl
*go/ast.Decl
[]go/ast.Decl
go/ast.Decl
*go/ast.DeclStmt
go/ast.DeclStmt
*go/ast.DeferStmt
go/ast.DeferStmt
*go/ast.Ellipsis
go/ast.Ellipsis
*go/ast.EmptyStmt
go/ast.EmptyStmt
*go/ast.Expr
[]go/ast.Expr
go/ast.Expr
*go/ast.ExprStmt
go/ast.ExprStmt
**go/ast.Field
*[]*go/ast.Field
*go/ast.Field
[]*go/ast.Field
go/ast.Field
*go/ast.FieldList
go/ast.FieldList
**go/ast.File
*go/ast.File
[]*go/ast.File
go/ast.File
*go/ast.ForStmt
go/ast.ForStmt
*go/ast.FuncDecl
go/ast.FuncDecl
*go/ast.FuncLit
go/ast.FuncLit
*go/ast.FuncType
go/ast.FuncType
*go/ast.GenDecl
go/ast.GenDecl
*go/ast.GoStmt
go/ast.GoStmt
**go/ast.Ident
*[]*go/ast.Ident
*go/ast.Ident
[]*go/ast.Ident
[][]*go/ast.Ident
go/ast.Ident
*go/ast.IfStmt
go/ast.IfStmt
**go/ast.ImportSpec
*go/ast.ImportSpec
[]*go/ast.ImportSpec
go/ast.ImportSpec
*go/ast.IncDecStmt
go/ast.IncDecStmt
*go/ast.IndexExpr
go/ast.IndexExpr
*go/ast.IndexListExpr
go/ast.IndexListExpr
*go/ast.inspector
go/ast.inspector
*go/ast.InterfaceType
go/ast.InterfaceType
*go/ast.KeyValueExpr
go/ast.KeyValueExpr
*go/ast.LabeledStmt
go/ast.LabeledStmt
*go/ast.MapType
go/ast.MapType
go/ast.MergeMode
go/ast.Node
**go/ast.Object
*go/ast.Object
go/ast.Object
*go/ast.ObjKind
go/ast.ObjKind
*go/ast.Package
go/ast.Package
*go/ast.ParenExpr
go/ast.ParenExpr
*go/ast.RangeStmt
go/ast.RangeStmt
*go/ast.ReturnStmt
go/ast.ReturnStmt
*go/ast.Scope
go/ast.Scope
*go/ast.SelectorExpr
go/ast.SelectorExpr
*go/ast.SelectStmt
go/ast.SelectStmt
*go/ast.SendStmt
go/ast.SendStmt
*go/ast.SliceExpr
go/ast.SliceExpr
*go/ast.Spec
[]go/ast.Spec
go/ast.Spec
*go/ast.StarExpr
go/ast.StarExpr
*go/ast.Stmt
[]go/ast.Stmt
go/ast.Stmt
*go/ast.StructType
go/ast.StructType
*go/ast.SwitchStmt
go/ast.SwitchStmt
*go/ast.TypeAssertExpr
go/ast.TypeAssertExpr
*go/ast.TypeSpec
go/ast.TypeSpec
*go/ast.TypeSwitchStmt
go/ast.TypeSwitchStmt
*go/ast.UnaryExpr
go/ast.UnaryExpr
*go/ast.ValueSpec
go/ast.ValueSpec
go/ast.Visitor
*go/build/constraint.AndExpr
go/build/constraint.AndExpr
go/build/constraint.Expr
*go/build/constraint.exprParser
go/build/constraint.exprParser
go/build/constraint.framepc uintptr }
*go/build/constraint.NotExpr
go/build/constraint.NotExpr
*go/build/constraint.OrExpr
go/build/constraint.OrExpr
go/build/constraint.sp uintptr; go/build/constraint.pc uintptr; go/build/constraint.fn uintptr; go/build/constraint.
*go/build/constraint.SyntaxError
go/build/constraint.SyntaxError
*go/build/constraint.TagExpr
go/build/constraint.TagExpr
*go/build.Context
go/build.Context
*[]go/build.Directive
*go/build.Directive
[][]go/build.Directive
[]go/build.Directive
go/build.Directive
*go/build.fileEmbed
[]go/build.fileEmbed
go/build.fileEmbed
*go/build.fileImport
[]go/build.fileImport
go/build.fileImport
*go/build.fileInfo
go/build.fileInfo
go/build.ImportMode
*go/build.importReader
go/build.importReader
**go/build.MultiplePackageError
*go/build.MultiplePackageError
go/build.MultiplePackageError
**go/build.NoGoError
*go/build.NoGoError
go/build.NoGoError
**go/build.Package
*go/build.Package
go/build.Package
*go/build.Package; go/build.setPkga func(); go/build.tried *struct { go/build.vendor []string; go/build.goroot strin
godebug.sp uintptr; internal/godebug.pc uintptr; internal/godebug.fn uintptr; internal/godebug._panic uintptr; inter
*go/doc/comment.Block
[]go/doc/comment.Block
go/doc/comment.Block
*go/doc/comment.Code
go/doc/comment.Code
*go/doc/comment.Doc
go/doc/comment.Doc
*go/doc/comment.DocLink
go/doc/comment.DocLink
 go/doc/comment.f *[]go/doc/comment.score·1; go/doc/comment.weight func(int, int) go/doc/comment.score·1 }
*go/doc/comment.Heading
go/doc/comment.Heading
go/doc/comment.Italic
*go/doc/comment.Link
go/doc/comment.Link
**go/doc/comment.LinkDef
*go/doc/comment.LinkDef
[]*go/doc/comment.LinkDef
go/doc/comment.LinkDef
*go/doc/comment.List
go/doc/comment.List
**go/doc/comment.ListItem
*go/doc/comment.ListItem
[]*go/doc/comment.ListItem
go/doc/comment.ListItem
*go/doc/comment.Paragraph
go/doc/comment.Paragraph
*go/doc/comment.parseDoc
go/doc/comment.parseDoc
*go/doc/comment.Parser
go/doc/comment.Parser
go/doc/comment.Plain
*go/doc/comment.Printer
go/doc/comment.Printer
*[]go/doc/comment.score·1
*go/doc/comment.score·1
[]go/doc/comment.score·1
go/doc/comment.score·1
*go/doc/comment.span
[]go/doc/comment.span
go/doc/comment.span
go/doc/comment.spanKind
 *[]go/doc/comment.Text }
*[]go/doc/comment.Text
*go/doc/comment.Text
[]go/doc/comment.Text
go/doc/comment.Text
*go/doc/comment.textPrinter
go/doc/comment.textPrinter
go/doc/comment.text *[]string }
**go/doc.Example
*go/doc.Example
[]*go/doc.Example
go/doc.Example
**go/doc.Func
*go/doc.Func
[]*go/doc.Func
go/doc.Func
go/doc.Mode
**go/doc.Note
*go/doc.Note
[]*go/doc.Note
go/doc.Note
*go/doc.Package
go/doc.Package
**go/doc.Type
*go/doc.Type
[]*go/doc.Type
go/doc.Type
**go/doc.Value
*go/doc.Value
[]*go/doc.Value
go/doc.Value
/go/internal/cache.req *cmd/go/internal/cache.ProgRequest }
/go/internal/list.pmain *cmd/go/internal/load.Package; cmd/go/internal/list.sema *cmd/vendor/golang.org/x/sync/semap
/go/internal/load.list *[]string }
go/internal/load.Package; cmd/go/internal/load.imports []*cmd/go/internal/load.Package; cmd/go/internal/load.ximport
go/internal/load.parentDir string }
/go/internal/modcmd.mod cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/modcmd.sem chan cmd/go/internal/
go/internal/modconv..autotmp_39 int; cmd/go/internal/modconv..autotmp_40 cmd/vendor/golang.org/x/mod/module.Version 
/go/internal/modfetch/codehost.Repo; cmd/go/internal/par.err error }]; cmd/go/internal/par..dict *[22]uintptr }
/go/internal/modfetch.path string }) bool; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.struct { cmd/go
go/internal/modfetch.path string; cmd/go/internal/modfetch.rev *string }
/go/internal/modfetch.RevInfo, error); ModulePath() string; Stat(context.Context, string) (*cmd/go/internal/modfetch
go/internal/modfetch.status map[cmd/go/internal/modfetch.modSum]cmd/go/internal/modfetch.modSumStatus; cmd/go/intern
/go/internal/modget.m cmd/vendor/golang.org/x/mod/module.Version }) bool; cmd/go/internal/par.c *cmd/go/internal/par
go/internal/modload.allowed cmd/go/internal/modload.AllowedFunc; cmd/go/internal/modload.match func(cmd/vendor/golan
/go/internal/modload.loader }
/go/internal/modload.matchPattern func(string) bool; cmd/go/internal/modload.firstError func(*cmd/go/internal/search
go/internal/modload.path string }
go/internal/modload.query string; cmd/go/internal/modload.allowed cmd/go/internal/modload.AllowedFunc; cmd/go/intern
/go/internal/modload.results *[]cmd/go/internal/modload.QueryResult; cmd/go/internal/modload.modOnly **cmd/go/intern
go/internal/mvs.Graph; cmd/go/internal/mvs.work *cmd/go/internal/par.Work[cmd/vendor/golang.org/x/mod/module.Version
go/internal/par..dict *[11]uintptr }
/go/internal/par.err error }]
go/internal/par.err error }
go/internal/par.err error }]
go/internal/par.err error }]; cmd/go/internal/par..dict *[22]uintptr }
go/internal/par.v *cmd/go/internal/modfetch.RevInfo; cmd/go/internal/par.err error }]; cmd/go/internal/par..dict *[2
go/internal/par.v *cmd/go/internal/modindex.IndexPackage; cmd/go/internal/par.err error }]; cmd/go/internal/par..dic
/go/internal/search.treeCanMatch *func(string) bool; cmd/go/internal/search.have map[string]bool; cmd/go/internal/se
/go/internal/workcmd.sw *cmd/go/internal/toolchain.Switcher }
/go/internal/work.p *cmd/go/internal/load.Package }
golang.org/x/mod/module.Version) (cmd/vendor/golang.org/x/mod/module.Version, error); cmd/go/internal/mvs.mu *sync.M
golang.org/x/mod/module.Version, []string, bool) *cmd/go/internal/search.Match; cmd/go/internal/modload.matchPattern
golang.org/x/mod/sumdb.file string; cmd/vendor/golang.org/x/mod/sumdb.remotePath string }
golang.org/x/mod/sumdb.tile cmd/vendor/golang.org/x/mod/sumdb/tlog.Tile }
/golang.org/x/net/http2/hpack.saveFunc func(vendor/golang.org/x/net/http2/hpack.HeaderField) }
/golang.org/x/net/http2/hpack.varp uintptr; vendor/golang.org/x/net/http2/hpack.framepc uintptr }
*go/parser.bailout
go/parser.bailout
*go/parser.field
[]go/parser.field
go/parser.field
go/parser.Mode
*go/parser.parser
go/parser.parser
go/parser.parseSpecFunction
*go/parser.resolver
go/parser.resolver
g.org/x/crypto/cryptobyte.pc uintptr; vendor/golang.org/x/crypto/cryptobyte.fn uintptr; vendor/golang.org/x/crypto/c
g.org/x/mod/module.Version, []string, bool) *cmd/go/internal/search.Match; cmd/go/internal/modload.matchPattern func
g.org/x/mod/sumdb.file string; cmd/vendor/golang.org/x/mod/sumdb.remotePath string }
g.org/x/mod/sumdb.tile cmd/vendor/golang.org/x/mod/sumdb/tlog.Tile }
g.org/x/mod/zip.link uintptr; cmd/vendor/golang.org/x/mod/zip.fd uintptr; cmd/vendor/golang.org/x/mod/zip.varp uintp
**go/scanner.Error
*go/scanner.Error
go/scanner.Error
go/scanner.ErrorHandler
*go/scanner.ErrorList
go/scanner.ErrorList
go/scanner.Mode
*go/scanner.Scanner
go/scanner.Scanner
go.shape.[2]string
*go.shape.bool
go.shape.bool
go.shape.[]*cmd/go/internal/load.Package
go.shape.[]cmd/go/internal/modload.QueryResult
go.shape.[]cmd/vendor/golang.org/x/mod/module.Version
*go.shape.func()
go.shape.func()
*go.shape.func(string) func()
go.shape.func(string) func()
*go.shape.func(string, string)
go.shape.func(string, string)
go.shape.[]go/build.Directive
*go.shape.int
[]go.shape.int
go.shape.[]int
go.shape.int
*go.shape.interface {}
go.shape.interface {}
*go.shape.interface { CheckReuse(context.Context, *cmd/go/internal/modfetch/codehost.Origin) error; GoMod(context.Co
go.shape.interface { CheckReuse(context.Context, *cmd/go/internal/modfetch/codehost.Origin) error; GoMod(context.Con
*go.shape.interface { CheckReuse(context.Context, *cmd/go/internal/modfetch/codehost.Origin, string) error; Descends
go.shape.interface { CheckReuse(context.Context, *cmd/go/internal/modfetch/codehost.Origin, string) error; DescendsF
*go.shape.interface { Error() string }
go.shape.interface { Error() string }
go.shape.map[string]string
*go.shape.[]net.IPAddr
go.shape.[]net.IPAddr
*go.shape.[]string
*go.shape.string
[]go.shape.string
go.shape.[]string
go.shape.string
go.shape.struct {}
*go.shape.struct { cmd/go/internal/load.path string; cmd/go/internal/load.dir string; cmd/go/internal/load.err error
go.shape.struct { cmd/go/internal/load.path string; cmd/go/internal/load.dir string; cmd/go/internal/load.err error 
[go.shape.struct { cmd/go/internal/load.path string; cmd/go/internal/load.parentPath string; cmd/go/internal/load.pa
go.shape.struct { cmd/go/internal/load.path string; cmd/go/internal/load.parentPath string; cmd/go/internal/load.par
go.shape.struct { cmd/go/internal/modfetch/codehost.vcs string; cmd/go/internal/modfetch/codehost.remote string }
go.shape.struct { cmd/go/internal/modfetch.proxy string; cmd/go/internal/modfetch.path string }
go.shape.struct { cmd/go/internal/modget.pattern string; cmd/go/internal/modget.m cmd/vendor/golang.org/x/mod/module
go.shape.struct { cmd/go/internal/modload.err error; cmd/go/internal/modload.dep cmd/vendor/golang.org/x/mod/module.
*go.shape.struct { cmd/go/internal/modload.mg *cmd/go/internal/modload.ModuleGraph; cmd/go/internal/modload.err erro
go.shape.struct { cmd/go/internal/modload.mg *cmd/go/internal/modload.ModuleGraph; cmd/go/internal/modload.err error
*go.shape.struct { cmd/go/internal/par.v bool; cmd/go/internal/par.err error }
go.shape.struct { cmd/go/internal/par.v bool; cmd/go/internal/par.err error }
*go.shape.struct { cmd/go/internal/par.v cmd/go/internal/modfetch/codehost.Repo; cmd/go/internal/par.err error }
go.shape.struct { cmd/go/internal/par.v cmd/go/internal/modfetch/codehost.Repo; cmd/go/internal/par.err error }
*go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch/codehost.RevInfo; cmd/go/internal/par.err error }
go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch/codehost.RevInfo; cmd/go/internal/par.err error }
*go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch.RevInfo; cmd/go/internal/par.err error }
go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch.RevInfo; cmd/go/internal/par.err error }
*go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch.Versions; cmd/go/internal/par.err error }
go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch.Versions; cmd/go/internal/par.err error }
*go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modindex.IndexPackage; cmd/go/internal/par.err error }
go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modindex.IndexPackage; cmd/go/internal/par.err error }
*go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modindex.Module; cmd/go/internal/par.err error }
go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modindex.Module; cmd/go/internal/par.err error }
*go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modload.modFileSummary; cmd/go/internal/par.err error }
go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modload.modFileSummary; cmd/go/internal/par.err error }
*go.shape.struct { cmd/go/internal/par.v cmd/go/internal/vcs.Status; cmd/go/internal/par.err error }
go.shape.struct { cmd/go/internal/par.v cmd/go/internal/vcs.Status; cmd/go/internal/par.err error }
*go.shape.struct { cmd/go/internal/par.v cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/par.err error }
go.shape.struct { cmd/go/internal/par.v cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/par.err error }
*go.shape.struct { cmd/go/internal/par.v *go/build.Package; cmd/go/internal/par.err error }
go.shape.struct { cmd/go/internal/par.v *go/build.Package; cmd/go/internal/par.err error }
*go.shape.struct { cmd/go/internal/par.v go.shape.bool; cmd/go/internal/par.err error }
go.shape.struct { cmd/go/internal/par.v go.shape.bool; cmd/go/internal/par.err error }
*go.shape.struct { cmd/go/internal/par.v go.shape.interface { CheckReuse(context.Context, *cmd/go/internal/modfetch/
go.shape.struct { cmd/go/internal/par.v go.shape.interface { CheckReuse(context.Context, *cmd/go/internal/modfetch/c
*go.shape.struct { cmd/go/internal/par.v go.shape.[]string; cmd/go/internal/par.err error }
*go.shape.struct { cmd/go/internal/par.v go.shape.string; cmd/go/internal/par.err error }
go.shape.struct { cmd/go/internal/par.v go.shape.[]string; cmd/go/internal/par.err error }
go.shape.struct { cmd/go/internal/par.v go.shape.string; cmd/go/internal/par.err error }
*go.shape.struct { cmd/go/internal/par.v go.shape.struct { Path string; Version string "json:\",omitempty\"" }; cmd/
go.shape.struct { cmd/go/internal/par.v go.shape.struct { Path string; Version string "json:\",omitempty\"" }; cmd/g
*go.shape.struct { cmd/go/internal/par.v go.shape.struct { Revision string; CommitTime time.Time; Uncommitted bool }
go.shape.struct { cmd/go/internal/par.v go.shape.struct { Revision string; CommitTime time.Time; Uncommitted bool };
*go.shape.struct { cmd/go/internal/par.v go.shape.*uint8; cmd/go/internal/par.err error }
*go.shape.struct { cmd/go/internal/par.v go.shape.[]uint8; cmd/go/internal/par.err error }
go.shape.struct { cmd/go/internal/par.v go.shape.*uint8; cmd/go/internal/par.err error }
go.shape.struct { cmd/go/internal/par.v go.shape.[]uint8; cmd/go/internal/par.err error }
*go.shape.struct { cmd/go/internal/par.v []string; cmd/go/internal/par.err error }
*go.shape.struct { cmd/go/internal/par.v string; cmd/go/internal/par.err error }
go.shape.struct { cmd/go/internal/par.v []string; cmd/go/internal/par.err error }
go.shape.struct { cmd/go/internal/par.v string; cmd/go/internal/par.err error }
*go.shape.struct { cmd/go/internal/par.v []uint8; cmd/go/internal/par.err error }
go.shape.struct { cmd/go/internal/par.v []uint8; cmd/go/internal/par.err error }
*go.shape.struct { go/token.name string; go/token.base int; go/token.size int; go/token.mutex sync.Mutex; go/token.l
go.shape.struct { go/token.name string; go/token.base int; go/token.size int; go/token.mutex sync.Mutex; go/token.li
*go.shape.struct { internal/godebug.text string; internal/godebug.bisect *internal/bisect.Matcher }
go.shape.struct { internal/godebug.text string; internal/godebug.bisect *internal/bisect.Matcher }
*go.shape.struct { math/rand.src math/rand.Source; math/rand.s64 math/rand.Source64; math/rand.readVal int64; math/r
go.shape.struct { math/rand.src math/rand.Source; math/rand.s64 math/rand.Source64; math/rand.readVal int64; math/ra
*go.shape.struct { net.servers []string; net.search []string; net.ndots int; net.timeout time.Duration; net.attempts
go.shape.struct { net.servers []string; net.search []string; net.ndots int; net.timeout time.Duration; net.attempts 
*go.shape.struct { Path string; Version string "json:\",omitempty\"" }
[]go.shape.struct { Path string; Version string "json:\",omitempty\"" }
go.shape.struct { Path string; Version string "json:\",omitempty\"" }
*go.shape.struct { Revision string; CommitTime time.Time; Uncommitted bool }
go.shape.struct { Revision string; CommitTime time.Time; Uncommitted bool }
*go.shape.struct { runtime.entries [2][8]runtime.pcvalueCacheEnt }
go.shape.struct { runtime.entries [2][8]runtime.pcvalueCacheEnt }
*go.shape.struct { runtime.lfnode; runtime.popped runtime/internal/atomic.Uint32; runtime.spans [512]runtime.atomicM
go.shape.struct { runtime.lfnode; runtime.popped runtime/internal/atomic.Uint32; runtime.spans [512]runtime.atomicMS
*go.shape.struct { runtime.stack runtime.stack; runtime.stackguard0 uintptr; runtime.stackguard1 uintptr; runtime._p
go.shape.struct { runtime.stack runtime.stack; runtime.stackguard0 uintptr; runtime.stackguard1 uintptr; runtime._pa
*go.shape.struct { sync.m map[interface {}]*sync.entry; sync.amended bool }
go.shape.struct { sync.m map[interface {}]*sync.entry; sync.amended bool }
*go.shape.*uint8
*go.shape.[]uint8
[]go.shape.*uint8
go.shape.*uint8
go.shape.[]uint8
g []os/signal.stopping }
**go/token.File
*go/token.File
[]*go/token.File
go/token.File
*go/token.FileSet
go/token.FileSet
*go/token.lineInfo
[]go/token.lineInfo
go/token.lineInfo
*go/token.Pos
[]go/token.Pos
go/token.Pos
*[]go/token.Position
*go/token.Position
[]go/token.Position
go/token.Position
*go/token.Token
go/token.Token
gs }
gs map[string]bool }
g, string, int64) ([]uint8, error); ReadZip(context.Context, string, string, int64) (io.ReadCloser, error); RecentTa
g/x/mod/modfile.pc uintptr; cmd/vendor/golang.org/x/mod/modfile.fn uintptr; cmd/vendor/golang.org/x/mod/modfile._pan
g/x/mod/module.Version }
g/x/mod/module.Version; cmd/go/internal/modget.m cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/modget.
HA1 bool; HasSHA256 bool; HasSHA512 bool; HasSHA3 bool; HasVX bool; HasVXE bool; HasKDSA bool; HasECDSA bool; HasEDD
; HasBMI2 bool; HasERMS bool; HasFMA bool; HasOSXSAVE bool; HasPCLMULQDQ bool; HasPOPCNT bool; HasRDTSCP bool; HasSH
*hash<[2]string,bool>
hash<[2]string,bool>
*hash<[32]uint8,string>
hash<[32]uint8,string>
*hash<[8]uint8,chan struct {}>
hash<[8]uint8,chan struct {}>
*hash/adler32.digest
hash/adler32.digest
*hash<chan<- os.Signal,*os/signal.handler>
hash<chan<- os.Signal,*os/signal.handler>
*hash<cmd/go/internal/cache.OutputID,string>
hash<cmd/go/internal/cache.OutputID,string>
*hash<cmd/go/internal/cache.ProgCmd,bool>
hash<cmd/go/internal/cache.ProgCmd,bool>
*hash<*cmd/go/internal/load.Package,bool>
hash<*cmd/go/internal/load.Package,bool>
*hash<*cmd/go/internal/load.Package,*cmd/go/internal/load.Package>
hash<*cmd/go/internal/load.Package,*cmd/go/internal/load.Package>
*hash<*cmd/go/internal/load.PackageError,bool>
hash<*cmd/go/internal/load.PackageError,bool>
*hash<cmd/go/internal/modcmd.metakey,bool>
hash<cmd/go/internal/modcmd.metakey,bool>
*hash<cmd/go/internal/modfetch.modSum,cmd/go/internal/modfetch.modSumStatus>
hash<cmd/go/internal/modfetch.modSum,cmd/go/internal/modfetch.modSumStatus>
*hash<*cmd/go/internal/modinfo.ModulePublic,string>
hash<*cmd/go/internal/modinfo.ModulePublic,string>
*hash<*cmd/go/internal/modload.loadPkg,bool>
hash<*cmd/go/internal/modload.loadPkg,bool>
*hash<*cmd/go/internal/modload.loadPkg,cmd/go/internal/modload.mismatch·4>
hash<*cmd/go/internal/modload.loadPkg,cmd/go/internal/modload.mismatch·4>
*hash<*cmd/go/internal/work.Action,bool>
hash<*cmd/go/internal/work.Action,bool>
*hash<*cmd/go/internal/work.Action,int>
hash<*cmd/go/internal/work.Action,int>
*hash<cmd/go/internal/work.cacheKey,*cmd/go/internal/work.Action>
hash<cmd/go/internal/work.cacheKey,*cmd/go/internal/work.Action>
*hash<*cmd/vendor/golang.org/x/mod/modfile.Line,bool>
hash<*cmd/vendor/golang.org/x/mod/modfile.Line,bool>
*hash<*cmd/vendor/golang.org/x/mod/modfile.Line,*cmd/vendor/golang.org/x/mod/modfile.LineBlock>
hash<*cmd/vendor/golang.org/x/mod/modfile.Line,*cmd/vendor/golang.org/x/mod/modfile.LineBlock>
*hash<cmd/vendor/golang.org/x/mod/module.Version,bool>
hash<cmd/vendor/golang.org/x/mod/module.Version,bool>
*hash<cmd/vendor/golang.org/x/mod/module.Version,cmd/go/internal/modget.modFlags·1>
hash<cmd/vendor/golang.org/x/mod/module.Version,cmd/go/internal/modget.modFlags·1>
*hash<cmd/vendor/golang.org/x/mod/module.Version,*cmd/go/internal/modinfo.ModulePublic>
hash<cmd/vendor/golang.org/x/mod/module.Version,*cmd/go/internal/modinfo.ModulePublic>
*hash<cmd/vendor/golang.org/x/mod/module.Version,*cmd/go/internal/modload.loadPkg>
hash<cmd/vendor/golang.org/x/mod/module.Version,*cmd/go/internal/modload.loadPkg>
*hash<cmd/vendor/golang.org/x/mod/module.Version,*cmd/go/internal/modload.modFileIndex>
hash<cmd/vendor/golang.org/x/mod/module.Version,*cmd/go/internal/modload.modFileIndex>
*hash<cmd/vendor/golang.org/x/mod/module.Version,cmd/go/internal/modload.modPruning>
hash<cmd/vendor/golang.org/x/mod/module.Version,cmd/go/internal/modload.modPruning>
*hash<cmd/vendor/golang.org/x/mod/module.Version,cmd/go/internal/modload.perPruning[cmd/go/internal/modload.dqState]
hash<cmd/vendor/golang.org/x/mod/module.Version,cmd/go/internal/modload.perPruning[cmd/go/internal/modload.dqState]>
*hash<cmd/vendor/golang.org/x/mod/module.Version,cmd/go/internal/modload.requireMeta>
hash<cmd/vendor/golang.org/x/mod/module.Version,cmd/go/internal/modload.requireMeta>
*hash<cmd/vendor/golang.org/x/mod/module.Version,cmd/go/internal/modload.vendorMetadata>
hash<cmd/vendor/golang.org/x/mod/module.Version,cmd/go/internal/modload.vendorMetadata>
*hash<cmd/vendor/golang.org/x/mod/module.Version,*cmd/vendor/golang.org/x/mod/modfile.File>
hash<cmd/vendor/golang.org/x/mod/module.Version,*cmd/vendor/golang.org/x/mod/modfile.File>
*hash<cmd/vendor/golang.org/x/mod/module.Version,[]cmd/vendor/golang.org/x/mod/module.Version>
*hash<cmd/vendor/golang.org/x/mod/module.Version,cmd/vendor/golang.org/x/mod/module.Version>
hash<cmd/vendor/golang.org/x/mod/module.Version,[]cmd/vendor/golang.org/x/mod/module.Version>
hash<cmd/vendor/golang.org/x/mod/module.Version,cmd/vendor/golang.org/x/mod/module.Version>
*hash<cmd/vendor/golang.org/x/mod/module.Version,error>
hash<cmd/vendor/golang.org/x/mod/module.Version,error>
*hash<cmd/vendor/golang.org/x/mod/module.Version,*runtime/debug.Module>
hash<cmd/vendor/golang.org/x/mod/module.Version,*runtime/debug.Module>
*hash<cmd/vendor/golang.org/x/mod/module.Version,[]string>
*hash<cmd/vendor/golang.org/x/mod/module.Version,string>
hash<cmd/vendor/golang.org/x/mod/module.Version,[]string>
hash<cmd/vendor/golang.org/x/mod/module.Version,string>
*hash<cmd/vendor/golang.org/x/mod/sumdb/note.nameHash,bool>
hash<cmd/vendor/golang.org/x/mod/sumdb/note.nameHash,bool>
*hash<cmd/vendor/golang.org/x/mod/sumdb/note.nameHash,[]cmd/vendor/golang.org/x/mod/sumdb/note.Verifier>
hash<cmd/vendor/golang.org/x/mod/sumdb/note.nameHash,[]cmd/vendor/golang.org/x/mod/sumdb/note.Verifier>
*hash<cmd/vendor/golang.org/x/mod/sumdb/tlog.Tile,bool>
hash<cmd/vendor/golang.org/x/mod/sumdb/tlog.Tile,bool>
*hash<cmd/vendor/golang.org/x/mod/sumdb/tlog.Tile,int>
hash<cmd/vendor/golang.org/x/mod/sumdb/tlog.Tile,int>
*hash<context.canceler,struct {}>
hash<context.canceler,struct {}>
*hash/crc32.digest
hash/crc32.digest
*hash/crc32.slicing8Table
hash/crc32.slicing8Table
*hash/crc32.Table
hash/crc32.Table
*hash<crypto.Hash,encoding/asn1.RawValue>
hash<crypto.Hash,encoding/asn1.RawValue>
*hash<crypto.Hash,[]uint8>
hash<crypto.Hash,[]uint8>
*hash<crypto/tls.alert,string>
hash<crypto/tls.alert,string>
*hash<crypto/x509.sum224,bool>
hash<crypto/x509.sum224,bool>
*hash<debug/dwarf.Attr,bool>
hash<debug/dwarf.Attr,bool>
*hash<debug/dwarf.Attr,debug/dwarf.Class>
hash<debug/dwarf.Attr,debug/dwarf.Class>
*hash<debug/dwarf.Attr,string>
hash<debug/dwarf.Attr,string>
*hash<debug/dwarf.Offset,debug/dwarf.Type>
hash<debug/dwarf.Offset,debug/dwarf.Type>
*hash<error,*cmd/go/internal/modfetch.RevInfo>
hash<error,*cmd/go/internal/modfetch.RevInfo>
*hash<go/ast.Decl,bool>
hash<go/ast.Decl,bool>
*hash<*go/ast.Object,bool>
hash<*go/ast.Object,bool>
*hash<*go/ast.Object,go/ast.Decl>
hash<*go/ast.Object,go/ast.Decl>
*hash<go.shape.struct { Path string; Version string "json:\",omitempty\"" },bool>
hash<go.shape.struct { Path string; Version string "json:\",omitempty\"" },bool>
*hash<go/token.Token,bool>
hash<go/token.Token,bool>
*hash.Hash
hash.Hash
hash.Hash32
*hash<int32,unsafe.Pointer>
hash<int32,unsafe.Pointer>
*hash<int64,chan<- *cmd/go/internal/cache.ProgResponse>
hash<int64,chan<- *cmd/go/internal/cache.ProgResponse>
*hash<interface {},struct {}>
hash<interface {},struct {}>
*hash<interface {},*sync.entry>
hash<interface {},*sync.entry>
*hash<internal/abi.TypeOff,*internal/abi.Type>
hash<internal/abi.TypeOff,*internal/abi.Type>
*hash<internal/intern.key,*internal/intern.Value>
hash<internal/intern.key,*internal/intern.Value>
*hash<internal/intern.key,uintptr>
hash<internal/intern.key,uintptr>
*hash<internal/platform.OSArch,internal/platform.osArchInfo>
hash<internal/platform.OSArch,internal/platform.osArchInfo>
*hash<int,int>
hash<int,int>
*hash<int,*internal/xcoff.Symbol>
hash<int,*internal/xcoff.Symbol>
*hash<int,string>
hash<int,string>
*hash<net.hostLookupOrder,string>
hash<net.hostLookupOrder,string>
*hash<net/http.cancelKey,func(error)>
hash<net/http.cancelKey,func(error)>
*hash<net/http.connectMethodKey,int>
hash<net/http.connectMethodKey,int>
*hash<net/http.connectMethodKey,[]*net/http.persistConn>
hash<net/http.connectMethodKey,[]*net/http.persistConn>
*hash<net/http.connectMethodKey,net/http.wantConnQueue>
hash<net/http.connectMethodKey,net/http.wantConnQueue>
*hash<net/http.ConnState,string>
hash<net/http.ConnState,string>
*hash<*net/http.http2ClientConn,[]string>
hash<*net/http.http2ClientConn,[]string>
*hash<net/http.http2ErrCode,string>
hash<net/http.http2ErrCode,string>
*hash<net/http.http2Flags,string>
hash<net/http.http2Flags,string>
*hash<net/http.http2FrameType,map[net/http.http2Flags]string>
hash<net/http.http2FrameType,map[net/http.http2Flags]string>
*hash<net/http.http2FrameType,net/http.http2frameParser>
hash<net/http.http2FrameType,net/http.http2frameParser>
*hash<net/http.http2FrameType,string>
hash<net/http.http2FrameType,string>
*hash<net/http.http2SettingID,bool>
hash<net/http.http2SettingID,bool>
*hash<net/http.http2SettingID,string>
hash<net/http.http2SettingID,string>
*hash<*net/http.persistConn,*container/list.Element>
hash<*net/http.persistConn,*container/list.Element>
*hash<*reflect.structType,bool>
hash<*reflect.structType,bool>
*hash<*reflect.structType,int>
hash<*reflect.structType,int>
*hash<reflect.Type,bool>
hash<reflect.Type,bool>
*hash<reflect.Type,int>
hash<reflect.Type,int>
*hash<reflect.visit,bool>
hash<reflect.visit,bool>
*hash<*regexp/syntax.Regexp,int>
hash<*regexp/syntax.Regexp,int>
*hash<*regexp/syntax.Regexp,int64>
hash<*regexp/syntax.Regexp,int64>
*hash<runtime._typePair,struct {}>
hash<runtime._typePair,struct {}>
*hash<string,[32]uint8>
hash<string,[32]uint8>
*hash<string,*archive/zip.File>
hash<string,*archive/zip.File>
*hash<string,bool>
hash<string,bool>
*hash<string,cmd/go/internal/cache.ActionID>
hash<string,cmd/go/internal/cache.ActionID>
*hash<string,*cmd/go/internal/fsys.node>
hash<string,*cmd/go/internal/fsys.node>
*hash<string,*cmd/go/internal/load.CoverVar>
hash<string,*cmd/go/internal/load.CoverVar>
*hash<string,*cmd/go/internal/load.Package>
*hash<string,[]*cmd/go/internal/load.Package>
hash<string,*cmd/go/internal/load.Package>
hash<string,[]*cmd/go/internal/load.Package>
*hash<string,*cmd/go/internal/modfetch/codehost.vcsCmd>
hash<string,*cmd/go/internal/modfetch/codehost.vcsCmd>
*hash<string,cmd/go/internal/modget.change·3>
hash<string,cmd/go/internal/modget.change·3>
*hash<string,*cmd/go/internal/modget.query>
hash<string,*cmd/go/internal/modget.query>
*hash<string,cmd/go/internal/modget.versionReason>
hash<string,cmd/go/internal/modget.versionReason>
*hash<string,[]*cmd/go/internal/modinfo.ModulePublic>
hash<string,[]*cmd/go/internal/modinfo.ModulePublic>
*hash<string,cmd/go/internal/vcs.fetchResult>
hash<string,cmd/go/internal/vcs.fetchResult>
*hash<string,cmd/vendor/golang.org/x/mod/modfile.elem·1>
hash<string,cmd/vendor/golang.org/x/mod/modfile.elem·1>
*hash<string,*cmd/vendor/golang.org/x/mod/modfile.Replace>
hash<string,*cmd/vendor/golang.org/x/mod/modfile.Replace>
*hash<string,*cmd/vendor/golang.org/x/mod/modfile.Require>
hash<string,*cmd/vendor/golang.org/x/mod/modfile.Require>
*hash<string,cmd/vendor/golang.org/x/mod/module.Version>
hash<string,cmd/vendor/golang.org/x/mod/module.Version>
*hash<string,cmd/vendor/golang.org/x/mod/zip.pathInfo>
hash<string,cmd/vendor/golang.org/x/mod/zip.pathInfo>
*hash<string,*crypto/tls.Certificate>
hash<string,*crypto/tls.Certificate>
*hash<string,*encoding/json.field>
hash<string,*encoding/json.field>
*hash<string,*flag.Flag>
hash<string,*flag.Flag>
*hash<string,func(bool)>
hash<string,func(bool)>
*hash<string,func(string, *crypto/tls.Conn) net/http.RoundTripper>
hash<string,func(string, *crypto/tls.Conn) net/http.RoundTripper>
*hash<string,func(string, []uint8) (*cmd/vendor/golang.org/x/mod/modfile.File, error)>
hash<string,func(string, []uint8) (*cmd/vendor/golang.org/x/mod/modfile.File, error)>
*hash<string,[]go/ast.Decl>
hash<string,[]go/ast.Decl>
*hash<string,*go/ast.File>
hash<string,*go/ast.File>
*hash<string,*go/ast.Object>
hash<string,*go/ast.Object>
*hash<string,*go/doc/comment.LinkDef>
hash<string,*go/doc/comment.LinkDef>
*hash<string,[]*go/doc.Note>
hash<string,[]*go/doc.Note>
*hash<string,[]go/token.Position>
*hash<string,go/token.Position>
hash<string,[]go/token.Position>
hash<string,go/token.Position>
*hash<string,go/token.Token>
hash<string,go/token.Token>
*hash<string,[]int>
*hash<string,int>
hash<string,[]int>
hash<string,int>
*hash<string,int32>
hash<string,int32>
*hash<string,interface {}>
hash<string,interface {}>
*hash<string,*internal/singleflight.call>
hash<string,*internal/singleflight.call>
*hash<string,io/fs.FileInfo>
hash<string,io/fs.FileInfo>
*hash<string,map[cmd/vendor/golang.org/x/mod/module.Version][]string>
hash<string,map[cmd/vendor/golang.org/x/mod/module.Version][]string>
*hash<string,map[string]int>
hash<string,map[string]int>
*hash<string,map[string]string>
hash<string,map[string]string>
*hash<string,[]*mime/multipart.FileHeader>
hash<string,[]*mime/multipart.FileHeader>
*hash<string,net.byName>
hash<string,net.byName>
*hash<string,[]*net/http.Cookie>
hash<string,[]*net/http.Cookie>
*hash<string,*net/http.http2addConnCall>
hash<string,*net/http.http2addConnCall>
*hash<string,[]*net/http.http2ClientConn>
hash<string,[]*net/http.http2ClientConn>
*hash<string,*net/http.http2dialCall>
hash<string,*net/http.http2dialCall>
*hash<string,net/http.RoundTripper>
hash<string,net/http.RoundTripper>
*hash<string,[]net.nssSource>
hash<string,[]net.nssSource>
*hash<string,reflect.Value>
hash<string,reflect.Value>
*hash<string,regexp/syntax.charGroup>
hash<string,regexp/syntax.charGroup>
*hash<string,runtime.metricData>
hash<string,runtime.metricData>
*hash<string,[]string>
*hash<string,string>
hash<string,[]string>
hash<string,string>
*hash<string,struct {}>
hash<string,struct {}>
*hash<string,text/template/parse.itemType>
hash<string,text/template/parse.itemType>
*hash<string,*text/template/parse.Tree>
hash<string,*text/template/parse.Tree>
*hash<string,*text/template.Template>
hash<string,*text/template.Template>
*hash<string,uint64>
hash<string,uint64>
*hash<string,[]uint8>
hash<string,[]uint8>
*hash<string,*unicode.RangeTable>
hash<string,*unicode.RangeTable>
*hash<uint16,archive/zip.Compressor>
hash<uint16,archive/zip.Compressor>
*hash<uint16,archive/zip.Decompressor>
hash<uint16,archive/zip.Decompressor>
*hash<uint16,bool>
hash<uint16,bool>
*hash<uint16,string>
hash<uint16,string>
*hash<uint32,debug/dwarf.abbrev>
hash<uint32,debug/dwarf.abbrev>
*hash<uint32,int32>
hash<uint32,int32>
*hash<uint32,[]*internal/abi.Type>
hash<uint32,[]*internal/abi.Type>
*hash<uint32,*net/http.http2clientStream>
hash<uint32,*net/http.http2clientStream>
*hash<uint64,bool>
hash<uint64,bool>
*hash<uint64,debug/dwarf.abbrevTable>
hash<uint64,debug/dwarf.abbrevTable>
*hash<uint64,*debug/dwarf.typeUnit>
hash<uint64,*debug/dwarf.typeUnit>
*hash<uint8,uint8>
hash<uint8,uint8>
*hash<*uint8,[]uint8>
hash<*uint8,[]uint8>
*hash<unsafe.Pointer,int32>
hash<unsafe.Pointer,int32>
*hash<vendor/golang.org/x/net/dns/dnsmessage.Class,string>
hash<vendor/golang.org/x/net/dns/dnsmessage.Class,string>
*hash<vendor/golang.org/x/net/dns/dnsmessage.RCode,string>
hash<vendor/golang.org/x/net/dns/dnsmessage.RCode,string>
*hash<vendor/golang.org/x/net/dns/dnsmessage.section,string>
hash<vendor/golang.org/x/net/dns/dnsmessage.section,string>
*hash<vendor/golang.org/x/net/http2/hpack.pairNameValue,uint64>
hash<vendor/golang.org/x/net/http2/hpack.pairNameValue,uint64>
*hchan<bool>
hchan<bool>
*hchan<*cmd/go/internal/cache.ProgResponse>
hchan<*cmd/go/internal/cache.ProgResponse>
*hchan<cmd/go/internal/modcmd.token·1>
hchan<cmd/go/internal/modcmd.token·1>
*hchan<cmd/go/internal/modcmd.token·2>
hchan<cmd/go/internal/modcmd.token·2>
*hchan<cmd/go/internal/modconv.token·1>
hchan<cmd/go/internal/modconv.token·1>
*hchan<cmd/go/internal/modload.token·2>
hchan<cmd/go/internal/modload.token·2>
*hchan<cmd/go/internal/par.queueState>
hchan<cmd/go/internal/par.queueState>
*hchan<cmd/go/internal/trace.traceFile>
hchan<cmd/go/internal/trace.traceFile>
*hchan<[]error>
*hchan<error>
hchan<[]error>
hchan<error>
*hchan<int>
hchan<int>
*hchan<internal/singleflight.Result>
hchan<internal/singleflight.Result>
*hchan<map[*cmd/go/internal/modload.loadPkg]cmd/go/internal/modload.mismatch·4>
hchan<map[*cmd/go/internal/modload.loadPkg]cmd/go/internal/modload.mismatch·4>
*hchan<map[cmd/vendor/golang.org/x/mod/module.Version]bool>
hchan<map[cmd/vendor/golang.org/x/mod/module.Version]bool>
*hchan<net.dialResult·2>
hchan<net.dialResult·2>
*hchan<net/http.readResult>
hchan<net/http.readResult>
*hchan<net/http.requestAndChan>
hchan<net/http.requestAndChan>
*hchan<net/http.responseAndError>
hchan<net/http.responseAndError>
*hchan<net/http.writeRequest>
hchan<net/http.writeRequest>
*hchan<net.result·3>
hchan<net.result·3>
*hchan<net.result[go.shape.int]·1>
hchan<net.result[go.shape.int]·1>
*hchan<net.result[go.shape.[]net.IPAddr]·1>
hchan<net.result[go.shape.[]net.IPAddr]·1>
*hchan<net.result[int]·1>
hchan<net.result[int]·1>
*hchan<net.result[[]net.IPAddr]·1>
hchan<net.result[[]net.IPAddr]·1>
*hchan<os/exec.ctxResult>
hchan<os/exec.ctxResult>
*hchan<os/exec.goroutineStatus·1>
hchan<os/exec.goroutineStatus·1>
*hchan<os.Signal>
hchan<os.Signal>
*hchan<struct {}>
hchan<struct {}>
*hchan<time.Time>
hchan<time.Time>
*hchan<uint32>
hchan<uint32>
h/codehost.remote string },go.shape.interface { CheckReuse(context.Context, *cmd/go/internal/modfetch/codehost.Origi
h/codehost.vcs string; cmd/go/internal/modfetch/codehost.remote string },go.shape.struct { cmd/go/internal/par.v cmd
.hdec *vendor/golang.org/x/net/http2/hpack.Decoder; net/http.remainSize *uint32; net/http.mh *net/http.http2MetaHead
HelloInfo; crypto/tls.config *crypto/tls.Config }
hore.Weighted; cmd/go/internal/list.wg *sync.WaitGroup }
host.RevInfo, error); Tags(context.Context, string) (*cmd/go/internal/modfetch/codehost.Tags, error) }, error); cmd/
h.proxy string; cmd/go/internal/modfetch.path string },go.shape.interface { CheckReuse(context.Context, *cmd/go/inte
h/rand.readPos int8 }
h.r *cmd/go/internal/modfetch.codeRepo; cmd/go/internal/modfetch.canUseIncompatible func(string) bool; cmd/go/intern
hrowsplit bool; runtime.activeStackChans bool; runtime.parkingOnChan runtime/internal/atomic.Bool; runtime.raceignor
h string; net.mtime time.Time; net.size int64 }
h() string; Stat(context.Context, string) (*cmd/go/internal/modfetch.RevInfo, error); Versions(context.Context, stri
http2ClientConn; net/http.waitDone func() error }
/http.hdec *vendor/golang.org/x/net/http2/hpack.Decoder; net/http.remainSize *uint32; net/http.mh *net/http.http2Met
http.http2ClientConn; net/http.waitDone func() error }
ict *[4]uintptr }
ic uintptr; cmd/vendor/golang.org/x/mod/modfile.link uintptr; cmd/vendor/golang.org/x/mod/modfile.fd uintptr; cmd/ve
ic uintptr; vendor/golang.org/x/net/http2/hpack.link uintptr; vendor/golang.org/x/net/http2/hpack.fd uintptr; vendor
igin func(*cmd/go/internal/modfetch.RevInfo, *cmd/go/internal/modfetch/codehost.Origin) *cmd/go/internal/modfetch.Re
iguateRoot *sync.Map }
i int }
ile.line *cmd/vendor/golang.org/x/mod/modfile.Line }
ime.gTraceState; runtime.gcAssistBytes int64 }]
ime; net.soffset uint32; net.singleRequest bool; net.useTCP bool; net.trustAD bool; net.noReload bool }]
ime.pageIdx uint; runtime.nbytes uintptr }
ime.sigcode0 uintptr; runtime.sigcode1 uintptr; runtime.sigpc uintptr; runtime.parentGoid uint64; runtime.gopc uintp
ine *cmd/vendor/golang.org/x/mod/modfile.Line }
ine *cmd/vendor/golang.org/x/mod/modfile.Line; cmd/vendor/golang.org/x/mod/modfile.verb string }
ines []int; go/token.infos []go/token.lineInfo }
Info, error); ReadFile(context.Context, string, string, int64) ([]uint8, error); ReadZip(context.Context, string, st
ing }
ing) bool) (string, error); Stat(context.Context, string) (*cmd/go/internal/modfetch/codehost.RevInfo, error); Tags(
ing; cmd/go/internal/load.err error }]
ing },go.shape.interface { CheckReuse(context.Context, *cmd/go/internal/modfetch/codehost.Origin) error; GoMod(conte
ing, int64) (io.ReadCloser, error); RecentTag(context.Context, string, string, func(string) bool) (string, error); S
ing; Stat(context.Context, string) (*cmd/go/internal/modfetch.RevInfo, error); Versions(context.Context, string) (*c
ing, string, int64) (io.ReadCloser, error); RecentTag(context.Context, string, string, func(string) bool) (string, e
in, string) error; DescendsFrom(context.Context, string, string) (bool, error); Latest(context.Context) (*cmd/go/int
 int }
**int
*[][]int
*[]int
*int
[][]int
[]int
int
*int16
[]int16
int16
*[]int32
*int32
[][]int32
[]int32
int32
**int64
*int64
[]int64
int64
*int8
[]int8
int8
*interface {}
[]interface {}
interface {}
interface { As(interface {}) bool }
interface {}, error) }
interface { IsBoolFlag() bool }
interface { Is(error) bool }
interface { IsHTTP2NoCachedConnError() }
interface { M() }
interface { Name() string }
interface { PollFD() *internal/poll.FD }
interface { Temporary() bool }
interface { Timeout() bool }
interface { Unwrap() []error }
interface { Unwrap() error }
*internal/abi.ArrayType
internal/abi.ArrayType
internal/abi.ChanDir
*internal/abi.ChanType
internal/abi.ChanType
internal/abi.FuncFlag
internal/abi.FuncID
*internal/abi.FuncType
internal/abi.FuncType
*internal/abi.Imethod
[]internal/abi.Imethod
internal/abi.Imethod
*internal/abi.IntArgRegBitmap
internal/abi.IntArgRegBitmap
*internal/abi.InterfaceType
internal/abi.InterfaceType
*internal/abi.Kind
internal/abi.Kind
*internal/abi.MapType
internal/abi.MapType
*internal/abi.Method
[]internal/abi.Method
internal/abi.Method
*internal/abi.Name
internal/abi.Name
internal/abi.NameOff
*internal/abi.PtrType
internal/abi.PtrType
*internal/abi.RegArgs
internal/abi.RegArgs
*internal/abi.SliceType
internal/abi.SliceType
*internal/abi.StructField
[]internal/abi.StructField
internal/abi.StructField
*internal/abi.StructType
internal/abi.StructType
internal/abi.TextOff
internal/abi.TFlag
**internal/abi.Type
*internal/abi.Type
[]*internal/abi.Type
internal/abi.Type
internal/abi.TypeOff
*internal/abi.UncommonType
internal/abi.UncommonType
*internal/bisect.atomicPointerDedup
internal/bisect.atomicPointerDedup
*internal/bisect.cond
[]internal/bisect.cond
internal/bisect.cond
*internal/bisect.dedup
internal/bisect.dedup
*internal/bisect.Matcher
internal/bisect.Matcher
*internal/bisect.parseError
internal/bisect.parseError
internal/bisect.Writer
*internal/buildcfg.ExperimentFlags
internal/buildcfg.ExperimentFlags
*internal/buildcfg.gowasmFeatures
internal/buildcfg.gowasmFeatures
internal/coverage.CounterFlavor
internal/coverage.CounterGranularity
internal/coverage.CounterMode
*internal/coverage.CoverPkgConfig
internal/coverage.CoverPkgConfig
internal/cpu.CacheLinePad
*internal/cpu.option
[]internal/cpu.option
internal/cpu.option
internal/envcmd.varp uintptr; cmd/go/internal/envcmd.framepc uintptr }
*internal/fmtsort.SortedMap
internal/fmtsort.SortedMap
internal/goarch.ArchFamilyType
*internal/godebug.runtimeStderr
internal/godebug.runtimeStderr
*internal/godebug.setting
internal/godebug.setting
*internal/godebug.Setting
internal/godebug.Setting
*internal/godebugs.Info
[]internal/godebugs.Info
internal/godebugs.Info
*internal/godebug.value
internal/godebug.value
*internal/goexperiment.Flags
internal/goexperiment.Flags
*internal/goroot.gccgoDirs
internal/goroot.gccgoDirs
*internal/intern.key
internal/intern.key
**internal/intern.Value
*internal/intern.Value
internal/intern.Value
**internal/lazyregexp.Regexp
*internal/lazyregexp.Regexp
[]*internal/lazyregexp.Regexp
internal/lazyregexp.Regexp
*internal/lazytemplate.Template
internal/lazytemplate.Template
internal/list.args *[]string; cmd/go/internal/list.modToArg map[*cmd/go/internal/modinfo.ModulePublic]string }
/internal/load.Package; cmd/go/internal/load.ptest **cmd/go/internal/load.Package; cmd/go/internal/load.pmain **cmd/
/internal/load.parentIsStd bool; cmd/go/internal/load.pre *cmd/go/internal/load.preload; cmd/go/internal/load.opts c
internal/modcmd.varp uintptr; cmd/go/internal/modcmd.framepc uintptr }
/internal/modfetch/codehost.ref *string }
/internal/modfetch.proxy string }
/internal/modfetch.proxy string; cmd/go/internal/modfetch.path string },go.shape.interface { CheckReuse(context.Cont
internal/modfetch.RevInfo, error); Versions(context.Context, string) (*cmd/go/internal/modfetch.Versions, error); Zi
/internal/modfetch.rev *string }
/internal/modfetch.Versions }
/internal/modfetch.version string; cmd/go/internal/modfetch.info **cmd/go/internal/modfetch.RevInfo; cmd/go/internal
internal/modget.m cmd/vendor/golang.org/x/mod/module.Version }
internal/modget.resolver; cmd/go/internal/modget.ctx context.Context }
internal/modget.varp uintptr; cmd/go/internal/modget.framepc uintptr }
internal/modload.dqTracker; cmd/go/internal/modload.mg *cmd/go/internal/modload.ModuleGraph }
/internal/modload.enqueue *func(cmd/vendor/golang.org/x/mod/module.Version, cmd/go/internal/modload.modPruning) }
/internal/modload.index *cmd/go/internal/modindex.Module; cmd/go/internal/modload.tags map[string]bool; cmd/go/inter
internal/modload.isMatch func(string) bool; cmd/go/internal/modload.q *cmd/go/internal/par.Queue; cmd/go/internal/mo
internal/modload.loader); cmd/go/internal/modload.matches *[]*cmd/go/internal/search.Match }
internal/modload.modFileSummary, error); cmd/go/internal/modload.m cmd/vendor/golang.org/x/mod/module.Version; cmd/g
internal/modload.modPruning) }
/internal/mvs.walk *func(cmd/vendor/golang.org/x/mod/module.Version) error }
internal/nettrace.LookupIPAltResolverKey
*internal/nettrace.Trace
internal/nettrace.Trace
internal/nettrace.TraceKey
internal/par..dict *[22]uintptr }
/internal/par.err error }]
/internal/par.err error }]; cmd/go/internal/par..dict *[22]uintptr }
internal/par.err error }]; cmd/go/internal/par..dict *[22]uintptr }
internal/par.v bool; cmd/go/internal/par.err error }]; cmd/go/internal/par..dict *[22]uintptr }
internal/par.v *cmd/go/internal/modfetch/codehost.RevInfo; cmd/go/internal/par.err error }]; cmd/go/internal/par..di
internal/par.v *cmd/go/internal/modfetch.RevInfo; cmd/go/internal/par.err error }]; cmd/go/internal/par..dict *[22]u
internal/par.v *cmd/go/internal/modfetch.Versions; cmd/go/internal/par.err error }]; cmd/go/internal/par..dict *[22]
internal/par.v *cmd/go/internal/modindex.Module; cmd/go/internal/par.err error }]; cmd/go/internal/par..dict *[22]ui
internal/par.v cmd/go/internal/vcs.Status; cmd/go/internal/par.err error }]; cmd/go/internal/par..dict *[22]uintptr 
internal/par.v cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/par.err error }]; cmd/go/internal/par..di
internal/par.v *go/build.Package; cmd/go/internal/par.err error }]; cmd/go/internal/par..dict *[22]uintptr }
internal/par.v []uint8; cmd/go/internal/par.err error }]; cmd/go/internal/par..dict *[22]uintptr }
*internal/platform.OSArch
[]internal/platform.OSArch
internal/platform.OSArch
*internal/platform.osArchInfo
internal/platform.osArchInfo
*internal/poll.DeadlineExceededError
internal/poll.DeadlineExceededError
*internal/poll.errNetClosing
internal/poll.errNetClosing
*internal/poll.FD
internal/poll.FD
*internal/poll.fdMutex
internal/poll.fdMutex
; internal/poll.fd uintptr; internal/poll.varp uintptr; internal/poll.framepc uintptr }
*internal/poll.pollDesc
internal/poll.pollDesc
*internal/poll.splicePipe
internal/poll.splicePipe
internal/poll.splicePipeFields
*internal/poll.SysFile
internal/poll.SysFile
*internal/reflectlite.emptyInterface
internal/reflectlite.emptyInterface
internal/reflectlite.flag
internal/reflectlite.name
*internal/reflectlite.rtype
internal/reflectlite.rtype
internal/reflectlite.Type
internal/reflectlite.Value
*internal/reflectlite.ValueError
internal/reflectlite.ValueError
**internal/singleflight.call
*internal/singleflight.call
internal/singleflight.call
*internal/singleflight.Group
internal/singleflight.Group
*internal/singleflight.Result
internal/singleflight.Result
internal/syscall/unix.GetRandomFlag
internal/testlog.Interface
*internal/unsafeheader.Slice
internal/unsafeheader.Slice
*internal/unsafeheader.String
internal/unsafeheader.String
/internal/work.b *cmd/go/internal/work.Builder; cmd/go/internal/work.desc string; cmd/go/internal/work.tools cmd/go/
/internal/work.b *cmd/go/internal/work.Builder; cmd/go/internal/work.handle func(context.Context, *cmd/go/internal/w
internal/work.BuildMode }
internal/workcmd.newPath string; cmd/go/internal/workcmd.newVersion string; cmd/go/internal/workcmd.arg string }
internal/work.gccgoToolchain; cmd/go/internal/work.arArgs []string; cmd/go/internal/work.readCgoFlags func(string) e
*internal/xcoff.AuxCSect32
internal/xcoff.AuxCSect32
*internal/xcoff.AuxCSect64
internal/xcoff.AuxCSect64
*internal/xcoff.AuxFcn32
internal/xcoff.AuxFcn32
*internal/xcoff.AuxFcn64
internal/xcoff.AuxFcn64
internal/xcoff.AuxiliaryCSect
internal/xcoff.AuxiliaryFcn
*internal/xcoff.File
internal/xcoff.File
internal/xcoff.FileHeader
*internal/xcoff.FileHeader32
internal/xcoff.FileHeader32
*internal/xcoff.FileHeader64
internal/xcoff.FileHeader64
*internal/xcoff.ImportedSymbol
[]internal/xcoff.ImportedSymbol
internal/xcoff.ImportedSymbol
*internal/xcoff.LoaderHeader32
internal/xcoff.LoaderHeader32
*internal/xcoff.LoaderHeader64
internal/xcoff.LoaderHeader64
*internal/xcoff.LoaderSymbol32
internal/xcoff.LoaderSymbol32
*internal/xcoff.LoaderSymbol64
internal/xcoff.LoaderSymbol64
*internal/xcoff.Reloc
[]internal/xcoff.Reloc
internal/xcoff.Reloc
*internal/xcoff.Reloc32
internal/xcoff.Reloc32
*internal/xcoff.Reloc64
internal/xcoff.Reloc64
**internal/xcoff.Section
*internal/xcoff.Section
[]*internal/xcoff.Section
internal/xcoff.Section
*internal/xcoff.SectionHeader
internal/xcoff.SectionHeader
*internal/xcoff.SectionHeader32
internal/xcoff.SectionHeader32
*internal/xcoff.SectionHeader64
internal/xcoff.SectionHeader64
**internal/xcoff.Symbol
*internal/xcoff.Symbol
[]*internal/xcoff.Symbol
internal/xcoff.Symbol
*internal/xcoff.SymEnt32
internal/xcoff.SymEnt32
*internal/xcoff.SymEnt64
internal/xcoff.SymEnt64
*internal/xcoff.zeroReaderAt
internal/xcoff.zeroReaderAt
*internal/zstd.bitReader
internal/zstd.bitReader
internal/zstd.block
*internal/zstd.fseBaselineEntry
[]internal/zstd.fseBaselineEntry
internal/zstd.fseBaselineEntry
*internal/zstd.fseEntry
[]internal/zstd.fseEntry
internal/zstd.fseEntry
*internal/zstd.Reader
internal/zstd.Reader
*internal/zstd.reverseBitReader
internal/zstd.reverseBitReader
internal/zstd.seqCode
*internal/zstd.seqCodeInfoData
internal/zstd.seqCodeInfoData
*internal/zstd.xxhash64
internal/zstd.xxhash64
*internal/zstd.zstdError
internal/zstd.zstdError
 int; net.rotate bool; net.unknownOpt bool; net.lookup []string; net.err error; net.mtime time.Time; net.soffset uin
int; net.rotate bool; net.unknownOpt bool; net.lookup []string; net.err error; net.mtime time.Time; net.soffset uint
intptr }
intptr; cmd/vendor/golang.org/x/mod/zip.fn uintptr; cmd/vendor/golang.org/x/mod/zip._panic uintptr; cmd/vendor/golan
intptr; encoding/json.pc uintptr; encoding/json.fn uintptr; encoding/json._panic uintptr; encoding/json.link uintptr
intptr; internal/poll.pc uintptr; internal/poll.fn uintptr; internal/poll._panic uintptr; internal/poll.link uintptr
intptr; path/filepath.pc uintptr; path/filepath.fn uintptr; path/filepath._panic uintptr; path/filepath.link uintptr
intptr; regexp/syntax.pc uintptr; regexp/syntax.fn uintptr; regexp/syntax._panic uintptr; regexp/syntax.link uintptr
intptr; runtime/debug.pc uintptr; runtime/debug.fn uintptr; runtime/debug._panic uintptr; runtime/debug.link uintptr
intptr; runtime.labels unsafe.Pointer; runtime.timer *runtime.timer; runtime.selectDone runtime/internal/atomic.Uint
intptr; runtime/trace.pc uintptr; runtime/trace.fn uintptr; runtime/trace._panic uintptr; runtime/trace.link uintptr
intptr; text/template.pc uintptr; text/template.fn uintptr; text/template._panic uintptr; text/template.link uintptr
io.ByteReader
io.ByteScanner
io.ByteWriter
*io.Closer
[]io.Closer
io.Closer
*io.discard
io.discard
*io.eofReader
io.eofReader
*io/fs.DirEntry
[]io/fs.DirEntry
io/fs.DirEntry
*io/fs.dirInfo
io/fs.dirInfo
io/fs.File
*[]io/fs.FileInfo
*io/fs.FileInfo
[]io/fs.FileInfo
io/fs.FileInfo
*io/fs.FileMode
io/fs.FileMode
**io/fs.PathError
*io/fs.PathError
io/fs.PathError
io/fs.WalkDirFunc
*io.LimitedReader
io.LimitedReader
*io.multiReader
io.multiReader
*io.multiWriter
io.multiWriter
ion }
*io.nopCloser
io.nopCloser
*io.nopCloserWriterTo
io.nopCloserWriterTo
ion string; cmd/go/internal/modload.compatVersion string; cmd/go/internal/modload.suggestUpgrade *bool; cmd/go/inter
*io.ReadCloser
io.ReadCloser
*io.Reader
[]io.Reader
io.Reader
io.ReaderAt
io.ReaderFrom
io.ReadSeeker
io.ReadWriteCloser
io.ReadWriter
io.RuneReader
io.RuneScanner
*io.SectionReader
io.SectionReader
io.Seeker
io.StringWriter
*io.WriteCloser
io.WriteCloser
*io.Writer
[]io.Writer
io.Writer
io.WriterAt
, io.Writer, string) error }]; cmd/go/internal/par..dict *[22]uintptr }
io.WriterTo
.IPAddr]·1; net..dict *[4]uintptr }
ist []string }
jectIdentifier; crypto/x509.pubKeyAlgo crypto/x509.PublicKeyAlgorithm; crypto/x509.hash crypto.Hash }
 "json:\",omitempty\"" }; cmd/go/internal/par.err error }]
"json:\",omitempty\"" },go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modload.modFileSummary; cmd/go/inte
"json:\",omitempty\"" },go.shape.struct { cmd/go/internal/par.v string; cmd/go/internal/par.err error }]; cmd/go/int
[]key<[2]string>
[]key<[32]uint8>
[]key<[8]uint8>
[]key<chan<- os.Signal>
[]key<cmd/go/internal/cache.OutputID>
[]key<cmd/go/internal/cache.ProgCmd>
[]key<*cmd/go/internal/load.Package>
[]key<*cmd/go/internal/load.PackageError>
[]key<cmd/go/internal/modcmd.metakey>
[]key<cmd/go/internal/modfetch.modSum>
[]key<*cmd/go/internal/modinfo.ModulePublic>
[]key<*cmd/go/internal/modload.loadPkg>
[]key<*cmd/go/internal/work.Action>
[]key<cmd/go/internal/work.cacheKey>
[]key<*cmd/vendor/golang.org/x/mod/modfile.Line>
[]key<cmd/vendor/golang.org/x/mod/module.Version>
[]key<cmd/vendor/golang.org/x/mod/sumdb/note.nameHash>
[]key<cmd/vendor/golang.org/x/mod/sumdb/tlog.Tile>
[]key<context.canceler>
[]key<crypto.Hash>
[]key<crypto/tls.alert>
[]key<crypto/x509.sum224>
[]key<debug/dwarf.Attr>
[]key<debug/dwarf.Offset>
[]key<error>
[]key<go/ast.Decl>
[]key<*go/ast.Object>
[]key<go.shape.struct { Path string; Version string "json:\",omitempty\"" }>
[]key<go/token.Token>
[]key<int>
[]key<int32>
[]key<int64>
[]key<interface {}>
[]key<internal/abi.TypeOff>
[]key<internal/intern.key>
[]key<internal/platform.OSArch>
[]key<net.hostLookupOrder>
[]key<net/http.cancelKey>
[]key<net/http.connectMethodKey>
[]key<net/http.ConnState>
[]key<*net/http.http2ClientConn>
[]key<net/http.http2ErrCode>
[]key<net/http.http2Flags>
[]key<net/http.http2FrameType>
[]key<net/http.http2SettingID>
[]key<*net/http.persistConn>
[]key<*reflect.structType>
[]key<reflect.Type>
[]key<reflect.visit>
[]key<*regexp/syntax.Regexp>
[]key<runtime._typePair>
[]key<string>
[]key<uint16>
[]key<uint32>
[]key<uint64>
[]key<*uint8>
[]key<uint8>
[]key<unsafe.Pointer>
[]key<vendor/golang.org/x/net/dns/dnsmessage.Class>
[]key<vendor/golang.org/x/net/dns/dnsmessage.RCode>
[]key<vendor/golang.org/x/net/dns/dnsmessage.section>
[]key<vendor/golang.org/x/net/http2/hpack.pairNameValue>
k *func(*cmd/go/internal/load.Package); cmd/go/internal/load.all *[]*cmd/go/internal/load.Package }
kgpath._panic uintptr; cmd/internal/pkgpath.link uintptr; cmd/internal/pkgpath.fd uintptr; cmd/internal/pkgpath.varp
ks int64; runtime.startNanotime int64; runtime.endNanotime int64; runtime.startTime runtime.traceTime; runtime.endTi
lang.org/x/net/dns/dnsmessage.Type }
lass runtime.spanClass }
late.mark int }
 Latest(context.Context) (*cmd/go/internal/modfetch/codehost.RevInfo, error); ReadFile(context.Context, string, stri
Latest(context.Context) (*cmd/go/internal/modfetch/codehost.RevInfo, error); ReadFile(context.Context, string, strin
l/atomic.Bool; runtime.raceignore int8; runtime.tracking bool; runtime.trackingSeq uint8; runtime.trackingStamp int6
l; cmd/go/internal/fsys.sp uintptr; cmd/go/internal/fsys.pc uintptr; cmd/go/internal/fsys.fn uintptr; cmd/go/interna
l; cmd/go/internal/list.sp uintptr; cmd/go/internal/list.pc uintptr; cmd/go/internal/list.fn uintptr; cmd/go/interna
l; cmd/go/internal/load.sp uintptr; cmd/go/internal/load.pc uintptr; cmd/go/internal/load.fn uintptr; cmd/go/interna
l; cmd/go/internal/modfetch.info *cmd/go/internal/modfetch/codehost.RevInfo }
l; cmd/go/internal/test.sp uintptr; cmd/go/internal/test.pc uintptr; cmd/go/internal/test.fn uintptr; cmd/go/interna
l; cmd/go/internal/tool.sp uintptr; cmd/go/internal/tool.pc uintptr; cmd/go/internal/tool.fn uintptr; cmd/go/interna
l; cmd/go/internal/work.sp uintptr; cmd/go/internal/work.pc uintptr; cmd/go/internal/work.fn uintptr; cmd/go/interna
l; cmd/internal/buildid.sp uintptr; cmd/internal/buildid.pc uintptr; cmd/internal/buildid.fn uintptr; cmd/internal/b
l; cmd/internal/pkgpath.sp uintptr; cmd/internal/pkgpath.pc uintptr; cmd/internal/pkgpath.fn uintptr; cmd/internal/p
le }
le.Version },go.shape.struct { cmd/go/internal/par.v []string; cmd/go/internal/par.err error }]; cmd/go/internal/par
l/fsys._panic uintptr; cmd/go/internal/fsys.link uintptr; cmd/go/internal/fsys.fd uintptr; cmd/go/internal/fsys.varp
lientHelloInfo; crypto/tls.config *crypto/tls.Config }
light.varp uintptr; internal/singleflight.framepc uintptr }
line *cmd/vendor/golang.org/x/mod/modfile.Line }
line *cmd/vendor/golang.org/x/mod/modfile.Line; cmd/vendor/golang.org/x/mod/modfile.verb string }
l/list._panic uintptr; cmd/go/internal/list.link uintptr; cmd/go/internal/list.fd uintptr; cmd/go/internal/list.varp
l/list.wg *sync.WaitGroup }
l/load.Package }
l/load._panic uintptr; cmd/go/internal/load.link uintptr; cmd/go/internal/load.fd uintptr; cmd/go/internal/load.varp
l/modcmd.newPath string; cmd/go/internal/modcmd.newVersion string; cmd/go/internal/modcmd.arg string }
l/modfetch/codehost.Repo]]
l/modfetch/codehost.RevInfo; cmd/go/internal/modfetch.statVers string }
l/modfetch/codehost.RevInfo, error); Tags(context.Context, string) (*cmd/go/internal/modfetch/codehost.Tags, error) 
l/modget.modMessage·2; cmd/go/internal/modget.i int }
l/modload.isMatch func(string) bool; cmd/go/internal/modload.q *cmd/go/internal/par.Queue; cmd/go/internal/modload.t
l/modload.prune cmd/go/internal/modload.pruning·6; cmd/go/internal/modload.have map[string]bool; cmd/go/internal/mod
l/modload.tags map[string]bool; cmd/go/internal/modload.addPkg func(string); cmd/go/internal/modload.name string }
/load.err error }]; cmd/go/internal/par..dict *[22]uintptr }
/load.ImportStack; cmd/go/internal/load.path string; cmd/go/internal/load.importPos []go/token.Position }
load.isMatch func(string) bool; cmd/go/internal/modload.q *cmd/go/internal/par.Queue; cmd/go/internal/modload.tags m
load.mode int },go.shape.struct { cmd/go/internal/load.path string; cmd/go/internal/load.dir string; cmd/go/internal
load.path string; cmd/go/internal/load.parentDir string; cmd/go/internal/load.mode int; cmd/go/internal/load.parentR
load.tags map[string]bool; cmd/go/internal/modload.addPkg func(string); cmd/go/internal/modload.name string }
*log.Logger
log.Logger
log._panic uintptr; log.link uintptr; log.fd uintptr; log.varp uintptr; log.framepc uintptr }
l/par.Cache[go.shape.string,go.shape.bool]; cmd/go/internal/par..dict *[22]uintptr }
l/par.Cache[go.shape.string,go.shape.interface { Error() string }]; cmd/go/internal/par..dict *[22]uintptr }
l/par.Cache[go.shape.string,go.shape.string]; cmd/go/internal/par..dict *[22]uintptr }
l/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v bool; cmd/go/internal/par.err error }]; cmd/go/i
l/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch/codehost.RevInfo; cmd/
l/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch.RevInfo; cmd/go/intern
l/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch.Versions; cmd/go/inter
l/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modindex.Module; cmd/go/interna
l/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v cmd/go/internal/vcs.Status; cmd/go/internal/par.
l/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v cmd/vendor/golang.org/x/mod/module.Version; cmd/
l/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v *go/build.Package; cmd/go/internal/par.err error
l/par.Cache[go.shape.string,go.shape.struct { cmd/go/internal/par.v []uint8; cmd/go/internal/par.err error }]; cmd/g
l/par.Cache[go.shape.string,go.shape.*uint8]; cmd/go/internal/par..dict *[22]uintptr }
l/par..dict *[22]uintptr }
l/par.err error }]
l/par.err error }]; cmd/go/internal/par..dict *[22]uintptr }
l.pc uintptr; os/signal.fn uintptr; os/signal._panic uintptr; os/signal.link uintptr; os/signal.fd uintptr; os/signa
l/reflectlite.typ *internal/abi.Type; internal/reflectlite.tmp unsafe.Pointer }
l/search.Match }
l/test._panic uintptr; cmd/go/internal/test.link uintptr; cmd/go/internal/test.fd uintptr; cmd/go/internal/test.varp
l/tool._panic uintptr; cmd/go/internal/tool.link uintptr; cmd/go/internal/tool.fd uintptr; cmd/go/internal/tool.varp
l.varp uintptr; os/signal.framepc uintptr }
l/work.Action }
l/work.gccgoToolchain }
l/work._panic uintptr; cmd/go/internal/work.link uintptr; cmd/go/internal/work.fd uintptr; cmd/go/internal/work.varp
map[[2]string]bool
map[[32]uint8]string
map[[8]uint8]chan struct {}
*map.bucket[chan<- os.Signal]*os/signal.handler
*map.bucket[*cmd/go/internal/load.Package]bool
*map.bucket[*cmd/go/internal/load.Package]*cmd/go/internal/load.Package
*map.bucket[*cmd/go/internal/load.PackageError]bool
*map.bucket[cmd/go/internal/modfetch.modSum]cmd/go/internal/modfetch.modSumStatus
*map.bucket[*cmd/go/internal/modinfo.ModulePublic]string
*map.bucket[*cmd/go/internal/modload.loadPkg]bool
*map.bucket[*cmd/go/internal/work.Action]bool
*map.bucket[*cmd/go/internal/work.Action]int
*map.bucket[*cmd/vendor/golang.org/x/mod/modfile.Line]bool
*map.bucket[*cmd/vendor/golang.org/x/mod/modfile.Line]*cmd/vendor/golang.org/x/mod/modfile.LineBlock
*map.bucket[cmd/vendor/golang.org/x/mod/module.Version]bool
*map.bucket[cmd/vendor/golang.org/x/mod/module.Version]cmd/go/internal/modget.modFlags·1
*map.bucket[cmd/vendor/golang.org/x/mod/module.Version]*cmd/go/internal/modinfo.ModulePublic
*map.bucket[cmd/vendor/golang.org/x/mod/module.Version]*cmd/go/internal/modload.loadPkg
*map.bucket[cmd/vendor/golang.org/x/mod/module.Version]cmd/go/internal/modload.modPruning
*map.bucket[cmd/vendor/golang.org/x/mod/module.Version][]cmd/vendor/golang.org/x/mod/module.Version
*map.bucket[cmd/vendor/golang.org/x/mod/module.Version]cmd/vendor/golang.org/x/mod/module.Version
*map.bucket[cmd/vendor/golang.org/x/mod/module.Version]*runtime/debug.Module
*map.bucket[cmd/vendor/golang.org/x/mod/module.Version][]string
*map.bucket[cmd/vendor/golang.org/x/mod/module.Version]string
*map.bucket[cmd/vendor/golang.org/x/mod/sumdb/note.nameHash]bool
*map.bucket[cmd/vendor/golang.org/x/mod/sumdb/tlog.Tile]int
*map.bucket[context.canceler]struct {}
*map.bucket[crypto/x509.sum224]bool
*map.bucket[debug/dwarf.Offset]debug/dwarf.Type
*map.bucket[interface {}]*sync.entry
*map.bucket[int]*internal/xcoff.Symbol
*map.bucket[net/http.connectMethodKey][]*net/http.persistConn
*map.bucket[net/http.http2SettingID]bool
*map.bucket[*reflect.structType]bool
*map.bucket[reflect.Type]bool
*map.bucket[reflect.visit]bool
*map.bucket[runtime._typePair]struct {}
*map.bucket[string]bool
*map.bucket[string]*cmd/go/internal/fsys.node
*map.bucket[string][]*cmd/go/internal/load.Package
*map.bucket[string]cmd/go/internal/modget.change·3
*map.bucket[string]cmd/go/internal/modget.versionReason
*map.bucket[string][]*cmd/go/internal/modinfo.ModulePublic
*map.bucket[string]cmd/vendor/golang.org/x/mod/modfile.elem·1
*map.bucket[string]*cmd/vendor/golang.org/x/mod/modfile.Replace
*map.bucket[string]*cmd/vendor/golang.org/x/mod/modfile.Require
*map.bucket[string]cmd/vendor/golang.org/x/mod/zip.pathInfo
*map.bucket[string]*flag.Flag
*map.bucket[string]func(bool)
*map.bucket[string]func(string, *crypto/tls.Conn) net/http.RoundTripper
*map.bucket[string][]go/ast.Decl
*map.bucket[string]*go/ast.File
*map.bucket[string]*go/ast.Object
*map.bucket[string][]go/token.Position
*map.bucket[string][]int
*map.bucket[string]int
*map.bucket[string]interface {}
*map.bucket[string]io/fs.FileInfo
*map.bucket[string]map[cmd/vendor/golang.org/x/mod/module.Version][]string
*map.bucket[string]map[string]string
*map.bucket[string][]*mime/multipart.FileHeader
*map.bucket[string][]*net/http.Cookie
*map.bucket[string][]*net/http.http2ClientConn
*map.bucket[string]net/http.RoundTripper
*map.bucket[string][]string
*map.bucket[string]string
*map.bucket[string]struct {}
*map.bucket[string]*text/template/parse.Tree
*map.bucket[string][]uint8
*map.bucket[uint16]bool
*map.bucket[uint16]string
*map.bucket[uint32][]*internal/abi.Type
*map.bucket[uint32]*net/http.http2clientStream
*map.bucket[uint64]bool
map[chan<- os.Signal]*os/signal.handler
map[cmd/go/internal/cache.OutputID]string
map[cmd/go/internal/cache.ProgCmd]bool
map[*cmd/go/internal/load.Package]bool
map[*cmd/go/internal/load.Package]*cmd/go/internal/load.Package
map[*cmd/go/internal/load.PackageError]bool
map[cmd/go/internal/modcmd.metakey]bool
map[cmd/go/internal/modfetch.modSum]cmd/go/internal/modfetch.modSumStatus
map[*cmd/go/internal/modinfo.ModulePublic]string
map[*cmd/go/internal/modload.loadPkg]bool
*map[*cmd/go/internal/modload.loadPkg]cmd/go/internal/modload.mismatch·4
map[*cmd/go/internal/modload.loadPkg]cmd/go/internal/modload.mismatch·4
map[*cmd/go/internal/work.Action]bool
map[*cmd/go/internal/work.Action]int
map[cmd/go/internal/work.cacheKey]*cmd/go/internal/work.Action
map[*cmd/vendor/golang.org/x/mod/modfile.Line]bool
map[*cmd/vendor/golang.org/x/mod/modfile.Line]*cmd/vendor/golang.org/x/mod/modfile.LineBlock
*map[cmd/vendor/golang.org/x/mod/module.Version]bool
map[cmd/vendor/golang.org/x/mod/module.Version]bool
map[cmd/vendor/golang.org/x/mod/module.Version]cmd/go/internal/modget.modFlags·1
map[cmd/vendor/golang.org/x/mod/module.Version]*cmd/go/internal/modinfo.ModulePublic
map[cmd/vendor/golang.org/x/mod/module.Version]*cmd/go/internal/modload.loadPkg
map[cmd/vendor/golang.org/x/mod/module.Version]*cmd/go/internal/modload.modFileIndex
map[cmd/vendor/golang.org/x/mod/module.Version]cmd/go/internal/modload.modPruning
map[cmd/vendor/golang.org/x/mod/module.Version]cmd/go/internal/modload.perPruning[cmd/go/internal/modload.dqState]
map[cmd/vendor/golang.org/x/mod/module.Version]cmd/go/internal/modload.requireMeta
map[cmd/vendor/golang.org/x/mod/module.Version]cmd/go/internal/modload.vendorMetadata
map[cmd/vendor/golang.org/x/mod/module.Version]*cmd/vendor/golang.org/x/mod/modfile.File
map[cmd/vendor/golang.org/x/mod/module.Version][]cmd/vendor/golang.org/x/mod/module.Version
map[cmd/vendor/golang.org/x/mod/module.Version]cmd/vendor/golang.org/x/mod/module.Version
map[cmd/vendor/golang.org/x/mod/module.Version]error
map[cmd/vendor/golang.org/x/mod/module.Version]*runtime/debug.Module
*map[cmd/vendor/golang.org/x/mod/module.Version][]string
map[cmd/vendor/golang.org/x/mod/module.Version][]string
map[cmd/vendor/golang.org/x/mod/module.Version]string
map[cmd/vendor/golang.org/x/mod/sumdb/note.nameHash]bool
map[cmd/vendor/golang.org/x/mod/sumdb/tlog.Tile]bool
map[cmd/vendor/golang.org/x/mod/sumdb/tlog.Tile]int
map[context.canceler]struct {}
map[crypto.Hash]encoding/asn1.RawValue
map[crypto.Hash][]uint8
map[crypto/tls.alert]string
map[crypto/x509.sum224]bool
map[debug/dwarf.Attr]bool
map[debug/dwarf.Attr]debug/dwarf.Class
map[debug/dwarf.Attr]string
map[debug/dwarf.Offset]debug/dwarf.Type
*map[error]*cmd/go/internal/modfetch.RevInfo
map[error]*cmd/go/internal/modfetch.RevInfo
map[go/ast.Decl]bool
map[*go/ast.Object]bool
map[*go/ast.Object]go/ast.Decl
map[go.shape.struct { Path string; Version string "json:\",omitempty\"" }]bool
map[go/token.Token]bool
*map.hdr[chan<- os.Signal]*os/signal.handler
*map.hdr[*cmd/go/internal/load.Package]bool
*map.hdr[*cmd/go/internal/load.Package]*cmd/go/internal/load.Package
*map.hdr[*cmd/go/internal/load.PackageError]bool
*map.hdr[cmd/go/internal/modfetch.modSum]cmd/go/internal/modfetch.modSumStatus
*map.hdr[*cmd/go/internal/modinfo.ModulePublic]string
*map.hdr[*cmd/go/internal/modload.loadPkg]bool
*map.hdr[*cmd/go/internal/work.Action]bool
*map.hdr[*cmd/go/internal/work.Action]int
*map.hdr[*cmd/vendor/golang.org/x/mod/modfile.Line]bool
*map.hdr[*cmd/vendor/golang.org/x/mod/modfile.Line]*cmd/vendor/golang.org/x/mod/modfile.LineBlock
*map.hdr[cmd/vendor/golang.org/x/mod/module.Version]bool
*map.hdr[cmd/vendor/golang.org/x/mod/module.Version]cmd/go/internal/modget.modFlags·1
*map.hdr[cmd/vendor/golang.org/x/mod/module.Version]*cmd/go/internal/modinfo.ModulePublic
*map.hdr[cmd/vendor/golang.org/x/mod/module.Version]*cmd/go/internal/modload.loadPkg
*map.hdr[cmd/vendor/golang.org/x/mod/module.Version]cmd/go/internal/modload.modPruning
*map.hdr[cmd/vendor/golang.org/x/mod/module.Version][]cmd/vendor/golang.org/x/mod/module.Version
*map.hdr[cmd/vendor/golang.org/x/mod/module.Version]cmd/vendor/golang.org/x/mod/module.Version
*map.hdr[cmd/vendor/golang.org/x/mod/module.Version]*runtime/debug.Module
*map.hdr[cmd/vendor/golang.org/x/mod/module.Version][]string
*map.hdr[cmd/vendor/golang.org/x/mod/module.Version]string
*map.hdr[cmd/vendor/golang.org/x/mod/sumdb/note.nameHash]bool
*map.hdr[cmd/vendor/golang.org/x/mod/sumdb/tlog.Tile]int
*map.hdr[context.canceler]struct {}
*map.hdr[crypto/x509.sum224]bool
*map.hdr[debug/dwarf.Offset]debug/dwarf.Type
*map.hdr[interface {}]*sync.entry
*map.hdr[int]*internal/xcoff.Symbol
*map.hdr[net/http.connectMethodKey][]*net/http.persistConn
*map.hdr[net/http.http2SettingID]bool
*map.hdr[*reflect.structType]bool
*map.hdr[reflect.Type]bool
*map.hdr[reflect.visit]bool
*map.hdr[string]bool
*map.hdr[string]*cmd/go/internal/fsys.node
*map.hdr[string][]*cmd/go/internal/load.Package
*map.hdr[string]cmd/go/internal/modget.change·3
*map.hdr[string]cmd/go/internal/modget.versionReason
*map.hdr[string][]*cmd/go/internal/modinfo.ModulePublic
*map.hdr[string]cmd/vendor/golang.org/x/mod/modfile.elem·1
*map.hdr[string]*cmd/vendor/golang.org/x/mod/modfile.Replace
*map.hdr[string]*cmd/vendor/golang.org/x/mod/modfile.Require
*map.hdr[string]cmd/vendor/golang.org/x/mod/zip.pathInfo
*map.hdr[string]*flag.Flag
*map.hdr[string]func(bool)
*map.hdr[string]func(string, *crypto/tls.Conn) net/http.RoundTripper
*map.hdr[string][]go/ast.Decl
*map.hdr[string]*go/ast.File
*map.hdr[string]*go/ast.Object
*map.hdr[string][]go/token.Position
*map.hdr[string][]int
*map.hdr[string]int
*map.hdr[string]interface {}
*map.hdr[string]io/fs.FileInfo
*map.hdr[string]map[cmd/vendor/golang.org/x/mod/module.Version][]string
*map.hdr[string]map[string]string
*map.hdr[string][]*mime/multipart.FileHeader
*map.hdr[string][]*net/http.Cookie
*map.hdr[string][]*net/http.http2ClientConn
*map.hdr[string]net/http.RoundTripper
*map.hdr[string][]string
*map.hdr[string]string
*map.hdr[string]struct {}
*map.hdr[string]*text/template/parse.Tree
*map.hdr[string][]uint8
*map.hdr[uint16]bool
*map.hdr[uint16]string
*map.hdr[uint32]*net/http.http2clientStream
*map.hdr[uint64]bool
map[int32]unsafe.Pointer
map[int64]chan<- *cmd/go/internal/cache.ProgResponse
map[interface {}]struct {}
map[interface {}]*sync.entry
*map[internal/abi.TypeOff]*internal/abi.Type
[]map[internal/abi.TypeOff]*internal/abi.Type
map[internal/abi.TypeOff]*internal/abi.Type
map[internal/intern.key]*internal/intern.Value
map[internal/intern.key]uintptr
map[internal/platform.OSArch]internal/platform.osArchInfo
map[int]int
map[int]*internal/xcoff.Symbol
map[int]string
map[net.hostLookupOrder]string
map[net/http.cancelKey]func(error)
map[net/http.connectMethodKey]int
map[net/http.connectMethodKey][]*net/http.persistConn
map[net/http.connectMethodKey]net/http.wantConnQueue
map[net/http.ConnState]string
map[*net/http.http2ClientConn][]string
map[net/http.http2ErrCode]string
*map[net/http.http2Flags]string
map[net/http.http2Flags]string
map[net/http.http2FrameType]map[net/http.http2Flags]string
map[net/http.http2FrameType]net/http.http2frameParser
map[net/http.http2FrameType]string
map[net/http.http2SettingID]bool
map[net/http.http2SettingID]string
map[*net/http.persistConn]*container/list.Element
map[*reflect.structType]bool
map[*reflect.structType]int
map[reflect.Type]bool
map[reflect.Type]int
map[reflect.visit]bool
map[*regexp/syntax.Regexp]int
map[*regexp/syntax.Regexp]int64
map[runtime._typePair]struct {}
MAPS bool; HasAVX512VPOPCNTDQ bool; HasAVX512VPCLMULQDQ bool; HasAVX512VNNI bool; HasAVX512GFNI bool; HasAVX512VAES 
map[string][32]uint8
map[string]*archive/zip.File
map[string]bool
map[string]cmd/go/internal/cache.ActionID
map[string]*cmd/go/internal/fsys.node
map[string]*cmd/go/internal/load.CoverVar
map[string]*cmd/go/internal/load.Package
map[string][]*cmd/go/internal/load.Package
map[string]*cmd/go/internal/modfetch/codehost.vcsCmd
map[string]cmd/go/internal/modget.change·3
map[string]*cmd/go/internal/modget.query
map[string]cmd/go/internal/modget.versionReason
map[string][]*cmd/go/internal/modinfo.ModulePublic
map[string]cmd/go/internal/vcs.fetchResult
map[string]cmd/vendor/golang.org/x/mod/modfile.elem·1
map[string]*cmd/vendor/golang.org/x/mod/modfile.Replace
map[string]*cmd/vendor/golang.org/x/mod/modfile.Require
map[string]cmd/vendor/golang.org/x/mod/module.Version
map[string]*crypto/tls.Certificate
map[string]*encoding/json.field
map[string]*flag.Flag
map[string]func(bool)
map[string]func(string, *crypto/tls.Conn) net/http.RoundTripper
map[string]func(string, []uint8) (*cmd/vendor/golang.org/x/mod/modfile.File, error)
map[string][]go/ast.Decl
map[string]*go/ast.File
map[string]*go/ast.Object
map[string]*go/doc/comment.LinkDef
map[string][]*go/doc.Note
map[string][]go/token.Position
map[string]go/token.Position
map[string]go/token.Token
*map[string]int
map[string][]int
map[string]int
map[string]int32
*map[string]interface {}
[]map[string]interface {}
map[string]interface {}
map[string]*internal/singleflight.call
map[string]io/fs.FileInfo
map[string]map[cmd/vendor/golang.org/x/mod/module.Version][]string
map[string]map[string]int
map[string]map[string]string
map[string][]*mime/multipart.FileHeader
map[string]net.byName
map[string][]*net/http.Cookie
map[string]*net/http.http2addConnCall
map[string][]*net/http.http2ClientConn
map[string]*net/http.http2dialCall
map[string]net/http.RoundTripper
map[string][]net.nssSource
map[string]reflect.Value
map[string]regexp/syntax.charGroup
map[string]runtime.metricData
*map[string]string
map[string][]string
map[string]string
map[string]struct {}
map[string]text/template/parse.itemType
map[string]*text/template/parse.Tree
map[string]*text/template.Template
map[string]uint64
map[string][]uint8
map[string]*unicode.RangeTable
map[uint16]archive/zip.Compressor
map[uint16]archive/zip.Decompressor
map[uint16]bool
map[uint16]string
map[uint32]int32
map[uint32][]*internal/abi.Type
map[uint32]*net/http.http2clientStream
map[uint64]bool
map[uint64]debug/dwarf.abbrevTable
map[uint64]*debug/dwarf.typeUnit
map[uint8]uint8
map[*uint8][]uint8
map[unsafe.Pointer]int32
map[vendor/golang.org/x/net/dns/dnsmessage.Class]string
map[vendor/golang.org/x/net/dns/dnsmessage.RCode]string
map[vendor/golang.org/x/net/dns/dnsmessage.section]string
map[vendor/golang.org/x/net/http2/hpack.pairNameValue]uint64
Match }
Match; cmd/go/internal/modload.treeCanMatch func(string) bool; cmd/go/internal/modload.have map[string]bool; cmd/go/
.Match) error; cmd/go/internal/modload.pattern string }
.match func(string) bool; cmd/go/internal/search.m *cmd/go/internal/search.Match }
mat func(cmd/vendor/golang.org/x/mod/module.Version); cmd/go/internal/modcmd.w *bufio.Writer }
*math/big.Accuracy
math/big.Accuracy
*math/big.byteReader
math/big.byteReader
*math/big.divisor
[]math/big.divisor
math/big.divisor
*math/big.Float
math/big.Float
math/big.form
**math/big.Int
*math/big.Int
[]*math/big.Int
math/big.Int
**math/big.nat
*math/big.nat
[]*math/big.nat
math/big.nat
math/big.RoundingMode
*math/big.Word
[]math/big.Word
math/big.Word
*math/rand.fastSource
math/rand.fastSource
*math/rand.lockedSource
math/rand.lockedSource
*math/rand.Rand
math/rand.Rand
*math/rand.rngSource
math/rand.rngSource
math/rand.Source
math/rand.Source64
m *cmd/go/internal/modinfo.ModulePublic }
md.arg string }
md/go/internal/load.PackageOpts }
md/go/internal/load.parentIsStd bool; cmd/go/internal/load.pre *cmd/go/internal/load.preload; cmd/go/internal/load.o
md/go/internal/load.pkgs []*cmd/go/internal/load.Package; cmd/go/internal/load.pmain *cmd/go/internal/load.Package; 
md/go/internal/modfetch/codehost.Origin, string) error; DescendsFrom(context.Context, string, string) (bool, error);
md/go/internal/modfetch/codehost.remote string }) bool; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.st
md/go/internal/modfetch/codehost.Tags, error) }
md/go/internal/modfetch.Versions, error); Zip(context.Context, io.Writer, string) error }
md/go/internal/modload.enqueue *func(cmd/vendor/golang.org/x/mod/module.Version, cmd/go/internal/modload.modPruning)
md/go/internal/modload.importPathRoot string; cmd/go/internal/modload.treeCanMatch func(string) bool; cmd/go/interna
md/go/internal/par.err error }]
md/go/internal/par.v *cmd/go/internal/modload.modFileSummary; cmd/go/internal/par.err error }]
md/go/internal/par.v go.shape.string; cmd/go/internal/par.err error }]
md/go/internal/par.v go.shape.*uint8; cmd/go/internal/par.err error }]
md/go/internal/par.v string; cmd/go/internal/par.err error }]
md/go/internal/work.b *cmd/go/internal/work.Builder; cmd/go/internal/work.desc string; cmd/go/internal/work.tools cm
md/go/internal/work.b *cmd/go/internal/work.Builder; cmd/go/internal/work.mode cmd/go/internal/work.BuildMode; cmd/g
md.ModuleJSON; cmd/go/internal/modcmd.sem chan cmd/go/internal/modcmd.token·1 }
md/vendor/golang.org/x/mod/modfile.f *cmd/vendor/golang.org/x/mod/modfile.File; cmd/vendor/golang.org/x/mod/modfile.
md/vendor/golang.org/x/mod/modfile.f *cmd/vendor/golang.org/x/mod/modfile.WorkFile; cmd/vendor/golang.org/x/mod/modf
md/vendor/golang.org/x/mod/modfile.Retract }
md/vendor/golang.org/x/mod/modfile.VersionFixer; cmd/vendor/golang.org/x/mod/modfile.parsed **cmd/vendor/golang.org/
me; net.soffset uint32; net.singleRequest bool; net.useTCP bool; net.trustAD bool; net.noReload bool }]
me runtime.traceTime; runtime.seqGC uint64; runtime.reading runtime.traceBufPtr; runtime.empty runtime.traceBufPtr; 
me.sigcode0 uintptr; runtime.sigcode1 uintptr; runtime.sigpc uintptr; runtime.parentGoid uint64; runtime.gopc uintpt
mime/multipart.File
**mime/multipart.FileHeader
*[]*mime/multipart.FileHeader
*mime/multipart.FileHeader
[]*mime/multipart.FileHeader
mime/multipart.FileHeader
*mime/multipart.Form
mime/multipart.Form
; mime/multipart.numDiskFiles *int; mime/multipart.form *mime/multipart.Form }
*mime/multipart.Part
mime/multipart.Part
*mime/multipart.partReader
mime/multipart.partReader
*mime/multipart.Reader
mime/multipart.Reader
*mime/multipart.sectionReadCloser
mime/multipart.sectionReadCloser
*mime/multipart.stickyErrorReader
mime/multipart.stickyErrorReader
*mime/multipart.writerOnly·1
mime/multipart.writerOnly·1
*mime/quotedprintable.Reader
mime/quotedprintable.Reader
mime.WordEncoder
mismatchMu chan map[*cmd/go/internal/modload.loadPkg]cmd/go/internal/modload.mismatch·4 }
/modcmd.arg string }
modcmd.arg string }
modcmd.token·2 }
mode cmd/go/internal/modload.ListMode; cmd/go/internal/modload.ctx context.Context }
mode int },go.shape.struct { cmd/go/internal/load.path string; cmd/go/internal/load.dir string; cmd/go/internal/load
modfetch.cachingRepo; cmd/go/internal/modfetch.rev string }
modfetch.cachingRepo; cmd/go/internal/modfetch.version string }
/modfetch/codehost.ctx context.Context }
/modfetch/codehost.ctx context.Context; cmd/go/internal/modfetch/codehost.rev string }
modfetch/codehost.Origin) error; GoMod(context.Context, string) ([]uint8, error); Latest(context.Context) (*cmd/go/i
/modfetch/codehost.Origin, string) error; DescendsFrom(context.Context, string, string) (bool, error); Latest(contex
/modfetch/codehost.Repo]]
/modfetch.err2info *map[error]*cmd/go/internal/modfetch.RevInfo }
.modFileSummary, error); cmd/go/internal/modload.unprune map[cmd/vendor/golang.org/x/mod/module.Version]bool; cmd/go
/modget.m cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/modget.versionOk *bool }
modindex.packages *[]*cmd/go/internal/modindex.rawPackage }
/modload.err *error; cmd/go/internal/modload.ctx context.Context }
/modload.index *cmd/go/internal/modload.modFileIndex }
modload.loadPkg; cmd/go/internal/modload.rs *cmd/go/internal/modload.Requirements; cmd/go/internal/modload.mg *cmd/g
modload.loadPkg; cmd/go/internal/modload.tidy **cmd/go/internal/modload.Requirements; cmd/go/internal/modload.disamb
modload.modFileSummary]]
modload.new []uint8; cmd/go/internal/modload.modFile *cmd/vendor/golang.org/x/mod/modfile.File; cmd/go/internal/modl
modload.origin **cmd/go/internal/modfetch/codehost.Origin }
modload.Requirements }
mod/module.pc uintptr; cmd/vendor/golang.org/x/mod/module.fn uintptr; cmd/vendor/golang.org/x/mod/module._panic uint
/mod/module.Version; cmd/go/internal/modload.cancel context.CancelFunc; cmd/go/internal/modload.rs *cmd/go/internal/
/mod/module.Version, error)
mod/sumdb.varp uintptr; cmd/vendor/golang.org/x/mod/sumdb.framepc uintptr }
.Module }
module.Version }
/module.Version },go.shape.struct { cmd/go/internal/par.v []string; cmd/go/internal/par.err error }]; cmd/go/interna
mp_9 *cmd/go/internal/work.Action }
mpty\"" }) bool; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.struct { Path string; Version string "jso
mpty\"" }, error); cmd/go/internal/par..dict *[11]uintptr }
MS bool; HasFMA bool; HasOSXSAVE bool; HasPCLMULQDQ bool; HasPOPCNT bool; HasRDRAND bool; HasRDSEED bool; HasSSE2 bo
mSpanList }
.Mutex; cmd/go/internal/modget.upgrades *[]cmd/go/internal/modget.pathSet }
naChunk }
nal/godebug.link uintptr; internal/godebug.fd uintptr; internal/godebug.varp uintptr; internal/godebug.framepc uintp
nal/list.args *[]string; cmd/go/internal/list.modToArg map[*cmd/go/internal/modinfo.ModulePublic]string }
nal/load.Package; cmd/go/internal/work.mode cmd/go/internal/work.BuildMode; cmd/go/internal/work.b *cmd/go/internal/
nal/modfetch.r *cmd/go/internal/modfetch.codeRepo }
nal/modfetch.RevInfo, error); Versions(context.Context, string) (*cmd/go/internal/modfetch.Versions, error); Zip(con
nal/modget.m cmd/vendor/golang.org/x/mod/module.Version }
nal/modget.resolver; cmd/go/internal/modget.ctx context.Context }
nal/modinfo.ModulePublic; cmd/go/internal/modload.ctx context.Context; cmd/go/internal/modload.rs *cmd/go/internal/m
nal/modload.addPkg func(string) }
nal/modload.err error }]
nal/modload.loader); cmd/go/internal/modload.matches *[]*cmd/go/internal/search.Match }
nal/modload.modFileSummary, error); cmd/go/internal/modload.m cmd/vendor/golang.org/x/mod/module.Version; cmd/go/int
nal/modload.suggestEFlag *bool }
nal/modload.vers *string; cmd/go/internal/modload.fixed *bool }
nal/mvs.reqCache map[cmd/vendor/golang.org/x/mod/module.Version][]cmd/vendor/golang.org/x/mod/module.Version; cmd/go
nal/par..dict *[22]uintptr }
nal/par.err error }]
nal/par.err error }]; cmd/go/internal/par..dict *[22]uintptr }
nal/par.Queue; cmd/go/internal/modload.loadOne func(cmd/vendor/golang.org/x/mod/module.Version) (*cmd/go/internal/mo
nal/par.v bool; cmd/go/internal/par.err error }]; cmd/go/internal/par..dict *[22]uintptr }
nal/par.v *cmd/go/internal/modfetch/codehost.RevInfo; cmd/go/internal/par.err error }]; cmd/go/internal/par..dict *[
nal/par.v *cmd/go/internal/modfetch.RevInfo; cmd/go/internal/par.err error }]; cmd/go/internal/par..dict *[22]uintpt
nal/par.v *cmd/go/internal/modfetch.Versions; cmd/go/internal/par.err error }]; cmd/go/internal/par..dict *[22]uintp
nal/par.v *cmd/go/internal/modindex.Module; cmd/go/internal/par.err error }]; cmd/go/internal/par..dict *[22]uintptr
nal/par.v cmd/go/internal/vcs.Status; cmd/go/internal/par.err error }]; cmd/go/internal/par..dict *[22]uintptr }
nal/par.v cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/par.err error }]; cmd/go/internal/par..dict *[
nal/par.v *go/build.Package; cmd/go/internal/par.err error }]; cmd/go/internal/par..dict *[22]uintptr }
nal/par.v []string; cmd/go/internal/par.err error }]; cmd/go/internal/par..dict *[22]uintptr }
nal/par.v []uint8; cmd/go/internal/par.err error }]; cmd/go/internal/par..dict *[22]uintptr }
nal/testlog.link uintptr; internal/testlog.fd uintptr; internal/testlog.varp uintptr; internal/testlog.framepc uintp
nal/work.Builder; cmd/go/internal/work.depMode cmd/go/internal/work.BuildMode }
nal/work.BuildMode }
nal/workcmd.newPath string; cmd/go/internal/workcmd.newVersion string; cmd/go/internal/workcmd.arg string }
nc(*cmd/go/internal/load.Package); cmd/go/internal/load.all *[]*cmd/go/internal/load.Package }
nc *func(go/ast.Node) bool }
nc.Mutex; cmd/go/internal/modload.hasError *bool }
nc.Mutex; go/token.lines []int; go/token.infos []go/token.lineInfo }]
nc(vendor/golang.org/x/net/http2/hpack.HeaderField) }
ndor/golang.org/x/mod/modfile.f *cmd/vendor/golang.org/x/mod/modfile.File; cmd/vendor/golang.org/x/mod/modfile.fix c
ndor/golang.org/x/mod/modfile.f *cmd/vendor/golang.org/x/mod/modfile.File; cmd/vendor/golang.org/x/mod/modfile.line 
ndor/golang.org/x/mod/modfile.f *cmd/vendor/golang.org/x/mod/modfile.File; cmd/vendor/golang.org/x/mod/modfile.r **c
ndor/golang.org/x/mod/modfile.f *cmd/vendor/golang.org/x/mod/modfile.WorkFile; cmd/vendor/golang.org/x/mod/modfile.l
ndor/golang.org/x/mod/modfile.varp uintptr; cmd/vendor/golang.org/x/mod/modfile.framepc uintptr }
ndor/golang.org/x/mod/module.openDefer bool; cmd/vendor/golang.org/x/mod/module.sp uintptr; cmd/vendor/golang.org/x/
ndor/golang.org/x/mod/module.Version) (cmd/vendor/golang.org/x/mod/module.Version, error); cmd/go/internal/mvs.mu *s
ndor/golang.org/x/mod/sumdb/dirhash.fd uintptr; cmd/vendor/golang.org/x/mod/sumdb/dirhash.varp uintptr; cmd/vendor/g
ndor/golang.org/x/net/http2/hpack.HeaderField) }
nd.readPos int8 }
ne runtime/internal/atomic.Uint32; runtime.goroutineProfiled runtime.goroutineProfileStateHolder; runtime.trace runt
nes []int; go/token.infos []go/token.lineInfo }
*net.Addr
[]net.Addr
net.Addr
*net.AddrError
net.AddrError
*net.addrinfoErrno
net.addrinfoErrno
net.addrList
*net.addrPortUDPAddr
net.addrPortUDPAddr
*net.byName
net.byName
*net.byRFC6724
net.byRFC6724
*net.canceledError
net.canceledError
*net.conf
net.conf
*net.conn
net.conn
*net.Conn
net.Conn
*net._Ctype_char
net._Ctype_char
*net._Ctype_int
net._Ctype_int
**net._Ctype_struct_addrinfo
*net._Ctype_struct_addrinfo
net._Ctype_struct_addrinfo
**net._Ctype_struct_sockaddr
*net._Ctype_struct_sockaddr
net._Ctype_struct_sockaddr
net._Ctype_uint
net._Ctype_ushort
net._Ctype_void
*net.Dialer
net.Dialer
*net.dialResult·2
net.dialResult·2
 net.dialResult·2; net.returned chan struct {} }
*net.dnsConfig
net.dnsConfig
*net.DNSError
net.DNSError
net.Error
*net.file
net.file
net.Flags
net.HardwareAddr
*net.hostLookupOrder
net.hostLookupOrder
net/http2/hpack.pc uintptr; vendor/golang.org/x/net/http2/hpack.fn uintptr; vendor/golang.org/x/net/http2/hpack._pan
 net/http..autotmp_13 string; net/http..autotmp_14 *crypto/tls.Conn }
*net/http.body
net/http.body
*net/http.bodyEOFSignal
net/http.bodyEOFSignal
*net/http.bodyLocked
net/http.bodyLocked
*net/http.bufioFlushWriter
net/http.bufioFlushWriter
*net/http.byteReader
net/http.byteReader
net/http.canceler·1
*net/http.cancelKey
net/http.cancelKey
*net/http.cancelTimerBody
net/http.cancelTimerBody
*net/http.Client
net/http.Client
net/http.condResult
*net/http.connectMethod
net/http.connectMethod
*net/http.connectMethodKey
net/http.connectMethodKey
*net/http.connLRU
net/http.connLRU
net/http.ConnState
**net/http.Cookie
*[]*net/http.Cookie
*net/http.Cookie
[]*net/http.Cookie
net/http.Cookie
net/http.CookieJar
net/http.erringRoundTripper
*net/http.errorReader
net/http.errorReader
*net/http.fakeLocker
net/http.fakeLocker
*net/http.finishAsyncByteRead
net/http.finishAsyncByteRead
*net/http.gzipReader
net/http.gzipReader
net/http.h2Transport
*net/http.Header
net/http.Header
net/http.Header; net/http.preq **net/http.Request }
*net/http.headerSorter
net/http.headerSorter
**net/http.http2addConnCall
*net/http.http2addConnCall
net/http.http2addConnCall
**net/http.http2ClientConn
*[]*net/http.http2ClientConn
*net/http.http2ClientConn
[]*net/http.http2ClientConn
net/http.http2ClientConn
net/http.http2clientConnIdleState
*net/http.http2clientConnPool
net/http.http2clientConnPool
net/http.http2ClientConnPool
net/http.http2clientConnPoolIdleCloser
*net/http.http2clientConnReadLoop
net/http.http2clientConnReadLoop
*net/http.http2ClientConnState
net/http.http2ClientConnState
**net/http.http2clientStream
*net/http.http2clientStream
net/http.http2clientStream
*net/http.http2ConnectionError
net/http.http2ConnectionError
net/http.http2connectionStater
*net/http.http2connError
net/http.http2connError
*net/http.http2ContinuationFrame
net/http.http2ContinuationFrame
*net/http.http2dataBuffer
net/http.http2dataBuffer
*net/http.http2DataFrame
net/http.http2DataFrame
**net/http.http2dialCall
*net/http.http2dialCall
net/http.http2dialCall
*net/http.http2duplicatePseudoHeaderError
net/http.http2duplicatePseudoHeaderError
*net/http.http2ErrCode
net/http.http2ErrCode
*net/http.http2erringRoundTripper
net/http.http2erringRoundTripper
*net/http.http2Flags
net/http.http2Flags
*net/http.http2Frame
net/http.http2Frame
*net/http.http2frameCache
net/http.http2frameCache
*net/http.http2FrameHeader
net/http.http2FrameHeader
*net/http.http2frameParser
net/http.http2frameParser
*net/http.http2Framer
net/http.http2Framer
*net/http.http2FrameType
net/http.http2FrameType
*net/http.http2GoAwayError
net/http.http2GoAwayError
*net/http.http2GoAwayFrame
net/http.http2GoAwayFrame
*net/http.http2gzipReader
net/http.http2gzipReader
*net/http.http2headerFieldNameError
net/http.http2headerFieldNameError
*net/http.http2headerFieldValueError
net/http.http2headerFieldValueError
*net/http.http2HeadersFrame
net/http.http2HeadersFrame
net/http.http2HeadersFrameParam
net/http.http2headersOrContinuation
*net/http.http2httpError
net/http.http2httpError
net/http.http2incomparable
*net/http.http2inflow
net/http.http2inflow
*net/http.http2MetaHeadersFrame
net/http.http2MetaHeadersFrame
*net/http.http2missingBody
net/http.http2missingBody
*net/http.http2noBodyReader
net/http.http2noBodyReader
*net/http.http2noCachedConnError
net/http.http2noCachedConnError
*net/http.http2noDialClientConnPool
net/http.http2noDialClientConnPool
*net/http.http2noDialH2RoundTripper
net/http.http2noDialH2RoundTripper
*net/http.http2outflow
net/http.http2outflow
*net/http.http2PingFrame
net/http.http2PingFrame
*net/http.http2pipe
net/http.http2pipe
net/http.http2pipeBuffer
*net/http.http2PriorityFrame
net/http.http2PriorityFrame
net/http.http2priorityNodeState
*net/http.http2PriorityParam
net/http.http2PriorityParam
*net/http.http2pseudoHeaderError
net/http.http2pseudoHeaderError
*net/http.http2PushPromiseFrame
net/http.http2PushPromiseFrame
net/http.http2PushPromiseParam
net/http.http2RoundTripOpt
*net/http.http2RSTStreamFrame
net/http.http2RSTStreamFrame
*net/http.http2serverMessage
net/http.http2serverMessage
*net/http.http2Setting
[]net/http.http2Setting
net/http.http2Setting
*net/http.http2SettingID
net/http.http2SettingID
*net/http.http2SettingsFrame
net/http.http2SettingsFrame
*net/http.http2stickyErrWriter
net/http.http2stickyErrWriter
*net/http.http2StreamError
net/http.http2StreamError
net/http.http2streamState
*net/http.http2Transport
net/http.http2Transport
*net/http.http2transportResponseBody
net/http.http2transportResponseBody
*net/http.http2UnknownFrame
net/http.http2UnknownFrame
*net/http.http2WindowUpdateFrame
net/http.http2WindowUpdateFrame
*net/http.httpError
net/http.httpError
net/http/httptrace.clientEventContextKey
*net/http/httptrace.ClientTrace
net/http/httptrace.ClientTrace
net/http/httptrace.DNSDoneInfo
net/http/httptrace.DNSStartInfo
*net/http/httptrace.GotConnInfo
net/http/httptrace.GotConnInfo
net/http/httptrace.WroteRequestInfo
net/http.incomparable
*net/http/internal.chunkedReader
net/http/internal.chunkedReader
*net/http/internal.chunkedWriter
net/http/internal.chunkedWriter
*net/http/internal.FlushAfterChunkWriter
net/http/internal.FlushAfterChunkWriter
*net/http.keyValues
[]net/http.keyValues
net/http.keyValues
*net/http.maxBytesReader
net/http.maxBytesReader
*net/http.noBody
net/http.noBody
*net/http.nothingWrittenError
net/http.nothingWrittenError
**net/http.persistConn
*[]*net/http.persistConn
*net/http.persistConn
[]*net/http.persistConn
net/http.persistConn
*net/http.persistConnWriter
net/http.persistConnWriter
*net/http.ProtocolError
net/http.ProtocolError
*net/http.readResult
net/http.readResult
*net/http.readTrackingBody
net/http.readTrackingBody
*net/http.readWriteCloserBody
net/http.readWriteCloserBody
**net/http.Request
*[]*net/http.Request
*net/http.Request
[]*net/http.Request
net/http.Request
*net/http.requestAndChan
net/http.requestAndChan
*net/http.requestBodyReadError
net/http.requestBodyReadError
**net/http.Response
*net/http.Response
net/http.Response
*net/http.responseAndError
net/http.responseAndError
net/http.ResponseWriter
*net/http.RoundTripper
net/http.RoundTripper
net/http.SameSite
*net/http.socksAddr
net/http.socksAddr
*net/http.socksAuthMethod
[]net/http.socksAuthMethod
net/http.socksAuthMethod
net/http.socksCommand
*net/http.socksDialer
net/http.socksDialer
net/http.socksReply
*net/http.socksUsernamePassword
net/http.socksUsernamePassword
*net/http.stringWriter
net/http.stringWriter
*net/http.tlsHandshakeTimeoutError
net/http.tlsHandshakeTimeoutError
*net/http.transferReader
net/http.transferReader
*net/http.transferWriter
net/http.transferWriter
*net/http.Transport
net/http.Transport
*net/http.transportReadFromServerError
net/http.transportReadFromServerError
*net/http.transportRequest
net/http.transportRequest
*net/http.unsupportedTEError
net/http.unsupportedTEError
**net/http.wantConn
*net/http.wantConn
[]*net/http.wantConn
net/http.wantConn
*net/http.wantConnQueue
net/http.wantConnQueue
*net/http.writeRequest
net/http.writeRequest
*net.Interface
[]net.Interface
net.Interface
*[]net.IP
*net.IP
[]net.IP
net.IP
*[]net.IPAddr
*net.IPAddr
[]net.IPAddr
net.IPAddr
 ([]net.IPAddr, error); net.network string; net.host string }
*net.ipAttr
[]net.ipAttr
net.ipAttr
*net.IPConn
net.IPConn
*net.IPMask
net.IPMask
**net.IPNet
*[]*net.IPNet
*net.IPNet
[]*net.IPNet
net.IPNet
*net.ipStackCapabilities
net.ipStackCapabilities
*net.ipv6ZoneCache
net.ipv6ZoneCache
net.mdnsTest
*net.mptcpStatus
net.mptcpStatus
*net.netFD
net.netFD
*net/netip.Addr
[]net/netip.Addr
net/netip.Addr
*net/netip.AddrPort
net/netip.AddrPort
*net/netip.parseAddrError
net/netip.parseAddrError
*net/netip.Prefix
net/netip.Prefix
*net/netip.uint128
net/netip.uint128
*net.nssConf
net.nssConf
*[]net.nssCriterion
*net.nssCriterion
[]net.nssCriterion
net.nssCriterion
*[]net.nssSource
*net.nssSource
[]net.nssSource
net.nssSource
*net.nsswitchConfig
net.nsswitchConfig
*net.onlyValuesCtx
net.onlyValuesCtx
*net.OpError
net.OpError
net.PacketConn
net._panic uintptr; net.link uintptr; net.fd uintptr; net.varp uintptr; net.framepc uintptr }
*net.ParseError
net.ParseError
net.policyTable
*net.policyTableEntry
net.policyTableEntry
*net.rawConn
net.rawConn
*net.Resolver
net.Resolver
*net.resolverConfig
net.resolverConfig
*net.result·3
net.result·3
*net.result[go.shape.int]·1
net.result[go.shape.int]·1
*net.result[go.shape.[]net.IPAddr]·1
net.result[go.shape.[]net.IPAddr]·1
*net.result[int]·1
net.result[int]·1
*net.result[[]net.IPAddr]·1
net.result[[]net.IPAddr]·1
net.scope
net.sockaddr
*net.sysDialer
net.sysDialer
*net.TCPAddr
net.TCPAddr
**net.TCPConn
*net.TCPConn
net.TCPConn
net.temporary
*net/textproto.dotReader
net/textproto.dotReader
*net/textproto.MIMEHeader
net/textproto.MIMEHeader
*net/textproto.ProtocolError
net/textproto.ProtocolError
*net/textproto.Reader
net/textproto.Reader
net.timeout
*net.timeoutError
net.timeoutError
*net.UDPAddr
net.UDPAddr
*net.UDPConn
net.UDPConn
*net.UnixAddr
net.UnixAddr
*net.UnixConn
net.UnixConn
*net.UnknownNetworkError
net.UnknownNetworkError
net/url.encoding
*net/url.Error
net/url.Error
*net/url.EscapeError
net/url.EscapeError
*net/url.InvalidHostError
net/url.InvalidHostError
**net/url.URL
*[]*net/url.URL
*net/url.URL
[]*net/url.URL
net/url.URL
*net/url.URL; crypto/x509.ipAddresses *[]net.IP }
*net/url.Userinfo
net/url.Userinfo
*net/url.Values
net/url.Values
*net.writerOnly
net.writerOnly
nfo; cmd/go/internal/par.err error }]
nfo, error); ReadFile(context.Context, string, string, int64) ([]uint8, error); ReadZip(context.Context, string, str
nfo, error); Tags(context.Context, string) (*cmd/go/internal/modfetch/codehost.Tags, error) }; cmd/go/internal/par.e
nfo, error); Versions(context.Context, string) (*cmd/go/internal/modfetch.Versions, error); Zip(context.Context, io.
nfo.link uintptr; debug/buildinfo.fd uintptr; debug/buildinfo.varp uintptr; debug/buildinfo.framepc uintptr }
nfo.sp uintptr; debug/buildinfo.pc uintptr; debug/buildinfo.fn uintptr; debug/buildinfo._panic uintptr; debug/buildi
ng }
ng]bool }
ng) bool; cmd/go/internal/modfetch/codehost.tag *string }
ng) bool) (string, error); Stat(context.Context, string) (*cmd/go/internal/modfetch/codehost.RevInfo, error); Tags(c
ng); cmd/go/internal/load.split *func(*cmd/go/internal/load.Package) *cmd/go/internal/load.Package }
ng; cmd/go/internal/modfetch/codehost.remote string }) bool; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.sha
ng) (*cmd/go/internal/modfetch/codehost.Tags, error) }, error)
ng) (*cmd/go/internal/modfetch.Versions, error); Zip(context.Context, io.Writer, string) error }
ng) (*cmd/go/internal/modfetch.Versions, error); Zip(context.Context, io.Writer, string) error }]
ng; cmd/go/internal/modload.importPathRoot string; cmd/go/internal/modload.treeCanMatch func(string) bool; cmd/go/in
ng; cmd/go/internal/test.timeoutSet *bool; cmd/go/internal/test.outputDirSet *bool }
ng; cmd/go/internal/work.b *cmd/go/internal/work.Builder; cmd/go/internal/work.mode cmd/go/internal/work.BuildMode; 
ng) error }
ngeToSumAddrRange func(int, int, int) runtime.addrRange }
ng, func(string) bool) (string, error); Stat(context.Context, string) (*cmd/go/internal/modfetch/codehost.RevInfo, e
ng, int64) ([]uint8, error); ReadZip(context.Context, string, string, int64) (io.ReadCloser, error); RecentTag(conte
ng.org/x/mod/module.varp uintptr; cmd/vendor/golang.org/x/mod/module.framepc uintptr }
ng.org/x/mod/module.Version }
ng.org/x/mod/module.Version; cmd/go/internal/modget.m cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/mo
ng.org/x/net/http2/hpack.saveFunc func(vendor/golang.org/x/net/http2/hpack.HeaderField) }
nic *runtime._panic; runtime._defer *runtime._defer; runtime.m *runtime.m; runtime.sched runtime.gobuf; runtime.sysc
nic uintptr; os.link uintptr; os.fd uintptr; os.varp uintptr; os.framepc uintptr }
n.lines []int; go/token.infos []go/token.lineInfo }
noalg.[13]string
noalg.[2]struct { cmd/go/internal/cache.c unsafe.Pointer; cmd/go/internal/cache.elem unsafe.Pointer }
noalg.[2]struct { cmd/go/internal/load.c unsafe.Pointer; cmd/go/internal/load.elem unsafe.Pointer }
noalg.[2]struct { cmd/go/internal/test.c unsafe.Pointer; cmd/go/internal/test.elem unsafe.Pointer }
noalg.[2]struct { cmd/go/internal/work.c unsafe.Pointer; cmd/go/internal/work.elem unsafe.Pointer }
noalg.[2]struct { cmd/internal/browser.c unsafe.Pointer; cmd/internal/browser.elem unsafe.Pointer }
noalg.[2]struct { cmd/vendor/golang.org/x/sync/semaphore.c unsafe.Pointer; cmd/vendor/golang.org/x/sync/semaphore.el
noalg.[2]struct { context.c unsafe.Pointer; context.elem unsafe.Pointer }
noalg.[2]struct { crypto/internal/randutil.c unsafe.Pointer; crypto/internal/randutil.elem unsafe.Pointer }
noalg.[2]struct { crypto/tls.c unsafe.Pointer; crypto/tls.elem unsafe.Pointer }
noalg.[2]struct { net.c unsafe.Pointer; net.elem unsafe.Pointer }
noalg.[2]struct { net/http.c unsafe.Pointer; net/http.elem unsafe.Pointer }
noalg.[2]struct { os/exec.c unsafe.Pointer; os/exec.elem unsafe.Pointer }
noalg.[2]struct { runtime.c unsafe.Pointer; runtime.elem unsafe.Pointer }
noalg.[3]struct { net/http.c unsafe.Pointer; net/http.elem unsafe.Pointer }
noalg.[4]struct { net/http.c unsafe.Pointer; net/http.elem unsafe.Pointer }
noalg.[5]struct { net/http.c unsafe.Pointer; net/http.elem unsafe.Pointer }
noalg.[6]struct { net/http.c unsafe.Pointer; net/http.elem unsafe.Pointer }
noalg.[8]bool
noalg.[8]chan<- os.Signal
noalg.[8]*cmd/go/internal/fsys.node
noalg.[8]*cmd/go/internal/load.Package
noalg.[8][]*cmd/go/internal/load.Package
noalg.[8]*cmd/go/internal/load.PackageError
noalg.[8]cmd/go/internal/modfetch.modSum
noalg.[8]cmd/go/internal/modfetch.modSumStatus
noalg.[8]cmd/go/internal/modget.change·3
noalg.[8]cmd/go/internal/modget.modFlags·1
noalg.[8]cmd/go/internal/modget.versionReason
noalg.[8]*cmd/go/internal/modinfo.ModulePublic
noalg.[8][]*cmd/go/internal/modinfo.ModulePublic
noalg.[8]*cmd/go/internal/modload.loadPkg
noalg.[8]cmd/go/internal/modload.modPruning
noalg.[8]*cmd/go/internal/work.Action
noalg.[8]cmd/vendor/golang.org/x/mod/modfile.elem·1
noalg.[8]*cmd/vendor/golang.org/x/mod/modfile.Line
noalg.[8]*cmd/vendor/golang.org/x/mod/modfile.LineBlock
noalg.[8]*cmd/vendor/golang.org/x/mod/modfile.Replace
noalg.[8]*cmd/vendor/golang.org/x/mod/modfile.Require
noalg.[8]cmd/vendor/golang.org/x/mod/module.Version
noalg.[8][]cmd/vendor/golang.org/x/mod/module.Version
noalg.[8]cmd/vendor/golang.org/x/mod/sumdb/note.nameHash
noalg.[8]cmd/vendor/golang.org/x/mod/sumdb/tlog.Tile
noalg.[8]cmd/vendor/golang.org/x/mod/zip.pathInfo
noalg.[8]context.canceler
noalg.[8]crypto/x509.sum224
noalg.[8]debug/dwarf.Offset
noalg.[8]debug/dwarf.Type
noalg.[8]*flag.Flag
noalg.[8]func(bool)
noalg.[8]func(string, *crypto/tls.Conn) net/http.RoundTripper
noalg.[8][]go/ast.Decl
noalg.[8]*go/ast.File
noalg.[8]*go/ast.Object
noalg.[8][]go/token.Position
noalg.[8]int
noalg.[8][]int
noalg.[8]interface {}
noalg.[8][]*internal/abi.Type
noalg.[8]*internal/xcoff.Symbol
noalg.[8]io/fs.FileInfo
noalg.[8]map[cmd/vendor/golang.org/x/mod/module.Version][]string
noalg.[8]map[string]string
noalg.[8][]*mime/multipart.FileHeader
noalg.[8]net/http.connectMethodKey
noalg.[8][]*net/http.Cookie
noalg.[8][]*net/http.http2ClientConn
noalg.[8]*net/http.http2clientStream
noalg.[8]net/http.http2SettingID
noalg.[8][]*net/http.persistConn
noalg.[8]net/http.RoundTripper
noalg.[8]*os/signal.handler
noalg.[8]*reflect.structType
noalg.[8]reflect.Type
noalg.[8]reflect.visit
noalg.[8]*runtime/debug.Module
noalg.[8]runtime._typePair
noalg.[8]string
noalg.[8][]string
noalg.[8]struct {}
noalg.[8]*sync.entry
noalg.[8]*text/template/parse.Tree
noalg.[8]uint16
noalg.[8]uint32
noalg.[8]uint64
noalg.[8][]uint8
noalg.map.bucket[chan<- os.Signal]*os/signal.handler
noalg.map.bucket[*cmd/go/internal/load.Package]bool
noalg.map.bucket[*cmd/go/internal/load.Package]*cmd/go/internal/load.Package
noalg.map.bucket[*cmd/go/internal/load.PackageError]bool
noalg.map.bucket[cmd/go/internal/modfetch.modSum]cmd/go/internal/modfetch.modSumStatus
noalg.map.bucket[*cmd/go/internal/modinfo.ModulePublic]string
noalg.map.bucket[*cmd/go/internal/modload.loadPkg]bool
noalg.map.bucket[*cmd/go/internal/work.Action]bool
noalg.map.bucket[*cmd/go/internal/work.Action]int
noalg.map.bucket[*cmd/vendor/golang.org/x/mod/modfile.Line]bool
noalg.map.bucket[*cmd/vendor/golang.org/x/mod/modfile.Line]*cmd/vendor/golang.org/x/mod/modfile.LineBlock
noalg.map.bucket[cmd/vendor/golang.org/x/mod/module.Version]bool
noalg.map.bucket[cmd/vendor/golang.org/x/mod/module.Version]cmd/go/internal/modget.modFlags·1
noalg.map.bucket[cmd/vendor/golang.org/x/mod/module.Version]*cmd/go/internal/modinfo.ModulePublic
noalg.map.bucket[cmd/vendor/golang.org/x/mod/module.Version]*cmd/go/internal/modload.loadPkg
noalg.map.bucket[cmd/vendor/golang.org/x/mod/module.Version]cmd/go/internal/modload.modPruning
noalg.map.bucket[cmd/vendor/golang.org/x/mod/module.Version][]cmd/vendor/golang.org/x/mod/module.Version
noalg.map.bucket[cmd/vendor/golang.org/x/mod/module.Version]cmd/vendor/golang.org/x/mod/module.Version
noalg.map.bucket[cmd/vendor/golang.org/x/mod/module.Version]*runtime/debug.Module
noalg.map.bucket[cmd/vendor/golang.org/x/mod/module.Version][]string
noalg.map.bucket[cmd/vendor/golang.org/x/mod/module.Version]string
noalg.map.bucket[cmd/vendor/golang.org/x/mod/sumdb/note.nameHash]bool
noalg.map.bucket[cmd/vendor/golang.org/x/mod/sumdb/tlog.Tile]int
noalg.map.bucket[context.canceler]struct {}
noalg.map.bucket[crypto/x509.sum224]bool
noalg.map.bucket[debug/dwarf.Offset]debug/dwarf.Type
noalg.map.bucket[interface {}]*sync.entry
noalg.map.bucket[int]*internal/xcoff.Symbol
noalg.map.bucket[net/http.connectMethodKey][]*net/http.persistConn
noalg.map.bucket[net/http.http2SettingID]bool
noalg.map.bucket[*reflect.structType]bool
noalg.map.bucket[reflect.Type]bool
noalg.map.bucket[reflect.visit]bool
noalg.map.bucket[runtime._typePair]struct {}
noalg.map.bucket[string]bool
noalg.map.bucket[string]*cmd/go/internal/fsys.node
noalg.map.bucket[string][]*cmd/go/internal/load.Package
noalg.map.bucket[string]cmd/go/internal/modget.change·3
noalg.map.bucket[string]cmd/go/internal/modget.versionReason
noalg.map.bucket[string][]*cmd/go/internal/modinfo.ModulePublic
noalg.map.bucket[string]cmd/vendor/golang.org/x/mod/modfile.elem·1
noalg.map.bucket[string]*cmd/vendor/golang.org/x/mod/modfile.Replace
noalg.map.bucket[string]*cmd/vendor/golang.org/x/mod/modfile.Require
noalg.map.bucket[string]cmd/vendor/golang.org/x/mod/zip.pathInfo
noalg.map.bucket[string]*flag.Flag
noalg.map.bucket[string]func(bool)
noalg.map.bucket[string]func(string, *crypto/tls.Conn) net/http.RoundTripper
noalg.map.bucket[string][]go/ast.Decl
noalg.map.bucket[string]*go/ast.File
noalg.map.bucket[string]*go/ast.Object
noalg.map.bucket[string][]go/token.Position
noalg.map.bucket[string][]int
noalg.map.bucket[string]int
noalg.map.bucket[string]interface {}
noalg.map.bucket[string]io/fs.FileInfo
noalg.map.bucket[string]map[cmd/vendor/golang.org/x/mod/module.Version][]string
noalg.map.bucket[string]map[string]string
noalg.map.bucket[string][]*mime/multipart.FileHeader
noalg.map.bucket[string][]*net/http.Cookie
noalg.map.bucket[string][]*net/http.http2ClientConn
noalg.map.bucket[string]net/http.RoundTripper
noalg.map.bucket[string][]string
noalg.map.bucket[string]string
noalg.map.bucket[string]struct {}
noalg.map.bucket[string]*text/template/parse.Tree
noalg.map.bucket[string][]uint8
noalg.map.bucket[uint16]bool
noalg.map.bucket[uint16]string
noalg.map.bucket[uint32][]*internal/abi.Type
noalg.map.bucket[uint32]*net/http.http2clientStream
noalg.map.bucket[uint64]bool
noalg.map.hdr[chan<- os.Signal]*os/signal.handler
noalg.map.hdr[*cmd/go/internal/load.Package]bool
noalg.map.hdr[*cmd/go/internal/load.Package]*cmd/go/internal/load.Package
noalg.map.hdr[*cmd/go/internal/load.PackageError]bool
noalg.map.hdr[cmd/go/internal/modfetch.modSum]cmd/go/internal/modfetch.modSumStatus
noalg.map.hdr[*cmd/go/internal/modinfo.ModulePublic]string
noalg.map.hdr[*cmd/go/internal/modload.loadPkg]bool
noalg.map.hdr[*cmd/go/internal/work.Action]bool
noalg.map.hdr[*cmd/go/internal/work.Action]int
noalg.map.hdr[*cmd/vendor/golang.org/x/mod/modfile.Line]bool
noalg.map.hdr[*cmd/vendor/golang.org/x/mod/modfile.Line]*cmd/vendor/golang.org/x/mod/modfile.LineBlock
noalg.map.hdr[cmd/vendor/golang.org/x/mod/module.Version]bool
noalg.map.hdr[cmd/vendor/golang.org/x/mod/module.Version]cmd/go/internal/modget.modFlags·1
noalg.map.hdr[cmd/vendor/golang.org/x/mod/module.Version]*cmd/go/internal/modinfo.ModulePublic
noalg.map.hdr[cmd/vendor/golang.org/x/mod/module.Version]*cmd/go/internal/modload.loadPkg
noalg.map.hdr[cmd/vendor/golang.org/x/mod/module.Version]cmd/go/internal/modload.modPruning
noalg.map.hdr[cmd/vendor/golang.org/x/mod/module.Version][]cmd/vendor/golang.org/x/mod/module.Version
noalg.map.hdr[cmd/vendor/golang.org/x/mod/module.Version]cmd/vendor/golang.org/x/mod/module.Version
noalg.map.hdr[cmd/vendor/golang.org/x/mod/module.Version]*runtime/debug.Module
noalg.map.hdr[cmd/vendor/golang.org/x/mod/module.Version][]string
noalg.map.hdr[cmd/vendor/golang.org/x/mod/module.Version]string
noalg.map.hdr[cmd/vendor/golang.org/x/mod/sumdb/note.nameHash]bool
noalg.map.hdr[cmd/vendor/golang.org/x/mod/sumdb/tlog.Tile]int
noalg.map.hdr[context.canceler]struct {}
noalg.map.hdr[crypto/x509.sum224]bool
noalg.map.hdr[debug/dwarf.Offset]debug/dwarf.Type
noalg.map.hdr[interface {}]*sync.entry
noalg.map.hdr[int]*internal/xcoff.Symbol
noalg.map.hdr[net/http.connectMethodKey][]*net/http.persistConn
noalg.map.hdr[net/http.http2SettingID]bool
noalg.map.hdr[*reflect.structType]bool
noalg.map.hdr[reflect.Type]bool
noalg.map.hdr[reflect.visit]bool
noalg.map.hdr[runtime._typePair]struct {}
noalg.map.hdr[string]bool
noalg.map.hdr[string]*cmd/go/internal/fsys.node
noalg.map.hdr[string][]*cmd/go/internal/load.Package
noalg.map.hdr[string]cmd/go/internal/modget.change·3
noalg.map.hdr[string]cmd/go/internal/modget.versionReason
noalg.map.hdr[string][]*cmd/go/internal/modinfo.ModulePublic
noalg.map.hdr[string]cmd/vendor/golang.org/x/mod/modfile.elem·1
noalg.map.hdr[string]*cmd/vendor/golang.org/x/mod/modfile.Replace
noalg.map.hdr[string]*cmd/vendor/golang.org/x/mod/modfile.Require
noalg.map.hdr[string]cmd/vendor/golang.org/x/mod/zip.pathInfo
noalg.map.hdr[string]*flag.Flag
noalg.map.hdr[string]func(bool)
noalg.map.hdr[string]func(string, *crypto/tls.Conn) net/http.RoundTripper
noalg.map.hdr[string][]go/ast.Decl
noalg.map.hdr[string]*go/ast.File
noalg.map.hdr[string]*go/ast.Object
noalg.map.hdr[string][]go/token.Position
noalg.map.hdr[string][]int
noalg.map.hdr[string]int
noalg.map.hdr[string]interface {}
noalg.map.hdr[string]io/fs.FileInfo
noalg.map.hdr[string]map[cmd/vendor/golang.org/x/mod/module.Version][]string
noalg.map.hdr[string]map[string]string
noalg.map.hdr[string][]*mime/multipart.FileHeader
noalg.map.hdr[string][]*net/http.Cookie
noalg.map.hdr[string][]*net/http.http2ClientConn
noalg.map.hdr[string]net/http.RoundTripper
noalg.map.hdr[string][]string
noalg.map.hdr[string]string
noalg.map.hdr[string]struct {}
noalg.map.hdr[string]*text/template/parse.Tree
noalg.map.hdr[string][]uint8
noalg.map.hdr[uint16]bool
noalg.map.hdr[uint16]string
noalg.map.hdr[uint32][]*internal/abi.Type
noalg.map.hdr[uint32]*net/http.http2clientStream
noalg.map.hdr[uint64]bool
noalg.map.iter[chan<- os.Signal]*os/signal.handler
noalg.map.iter[*cmd/go/internal/load.PackageError]bool
noalg.map.iter[cmd/go/internal/modfetch.modSum]cmd/go/internal/modfetch.modSumStatus
noalg.map.iter[cmd/vendor/golang.org/x/mod/module.Version]bool
noalg.map.iter[cmd/vendor/golang.org/x/mod/module.Version]cmd/go/internal/modget.modFlags·1
noalg.map.iter[cmd/vendor/golang.org/x/mod/module.Version]*cmd/go/internal/modload.loadPkg
noalg.map.iter[cmd/vendor/golang.org/x/mod/module.Version]cmd/vendor/golang.org/x/mod/module.Version
noalg.map.iter[cmd/vendor/golang.org/x/mod/module.Version]*runtime/debug.Module
noalg.map.iter[cmd/vendor/golang.org/x/mod/module.Version][]string
noalg.map.iter[context.canceler]struct {}
noalg.map.iter[crypto/x509.sum224]bool
noalg.map.iter[interface {}]*sync.entry
noalg.map.iter[net/http.connectMethodKey][]*net/http.persistConn
noalg.map.iter[string]bool
noalg.map.iter[string]*cmd/go/internal/fsys.node
noalg.map.iter[string][]*cmd/go/internal/load.Package
noalg.map.iter[string]cmd/go/internal/modget.change·3
noalg.map.iter[string]cmd/go/internal/modget.versionReason
noalg.map.iter[string]cmd/vendor/golang.org/x/mod/modfile.elem·1
noalg.map.iter[string]*cmd/vendor/golang.org/x/mod/modfile.Require
noalg.map.iter[string]*flag.Flag
noalg.map.iter[string]func(string, *crypto/tls.Conn) net/http.RoundTripper
noalg.map.iter[string]*go/ast.File
noalg.map.iter[string]*go/ast.Object
noalg.map.iter[string][]go/token.Position
noalg.map.iter[string][]int
noalg.map.iter[string]int
noalg.map.iter[string]interface {}
noalg.map.iter[string]io/fs.FileInfo
noalg.map.iter[string]map[cmd/vendor/golang.org/x/mod/module.Version][]string
noalg.map.iter[string]map[string]string
noalg.map.iter[string][]*mime/multipart.FileHeader
noalg.map.iter[string][]*net/http.Cookie
noalg.map.iter[string][]*net/http.http2ClientConn
noalg.map.iter[string]net/http.RoundTripper
noalg.map.iter[string][]string
noalg.map.iter[string]string
noalg.map.iter[string]*text/template/parse.Tree
noalg.map.iter[uint32]*net/http.http2clientStream
noalg.struct { archive/zip.started bool; archive/zip.heap bool; archive/zip.openDefer bool; archive/zip.sp uintptr; 
noalg.struct { bytes.started bool; bytes.heap bool; bytes.openDefer bool; bytes.sp uintptr; bytes.pc uintptr; bytes.
noalg.struct { cmd/go/internal/bug.started bool; cmd/go/internal/bug.heap bool; cmd/go/internal/bug.openDefer bool; 
noalg.struct { cmd/go/internal/cache.c unsafe.Pointer; cmd/go/internal/cache.elem unsafe.Pointer }
noalg.struct { cmd/go/internal/cache.started bool; cmd/go/internal/cache.heap bool; cmd/go/internal/cache.openDefer 
noalg.struct { cmd/go/internal/envcmd.started bool; cmd/go/internal/envcmd.heap bool; cmd/go/internal/envcmd.openDef
noalg.struct { cmd/go/internal/fsys.started bool; cmd/go/internal/fsys.heap bool; cmd/go/internal/fsys.openDefer boo
noalg.struct { cmd/go/internal/generate.started bool; cmd/go/internal/generate.heap bool; cmd/go/internal/generate.o
noalg.struct { cmd/go/internal/list.started bool; cmd/go/internal/list.heap bool; cmd/go/internal/list.openDefer boo
noalg.struct { cmd/go/internal/load.c unsafe.Pointer; cmd/go/internal/load.elem unsafe.Pointer }
noalg.struct { cmd/go/internal/load.started bool; cmd/go/internal/load.heap bool; cmd/go/internal/load.openDefer boo
noalg.struct { cmd/go/internal/lockedfile.started bool; cmd/go/internal/lockedfile.heap bool; cmd/go/internal/locked
noalg.struct { cmd/go/internal/modcmd.started bool; cmd/go/internal/modcmd.heap bool; cmd/go/internal/modcmd.openDef
noalg.struct { cmd/go/internal/modconv.started bool; cmd/go/internal/modconv.heap bool; cmd/go/internal/modconv.open
noalg.struct { cmd/go/internal/modfetch/codehost.started bool; cmd/go/internal/modfetch/codehost.heap bool; cmd/go/i
noalg.struct { cmd/go/internal/modfetch.started bool; cmd/go/internal/modfetch.heap bool; cmd/go/internal/modfetch.o
noalg.struct { cmd/go/internal/modget.started bool; cmd/go/internal/modget.heap bool; cmd/go/internal/modget.openDef
noalg.struct { cmd/go/internal/modindex.started bool; cmd/go/internal/modindex.heap bool; cmd/go/internal/modindex.o
noalg.struct { cmd/go/internal/modload.started bool; cmd/go/internal/modload.heap bool; cmd/go/internal/modload.open
noalg.struct { cmd/go/internal/par.started bool; cmd/go/internal/par.heap bool; cmd/go/internal/par.openDefer bool; 
noalg.struct { cmd/go/internal/run.started bool; cmd/go/internal/run.heap bool; cmd/go/internal/run.openDefer bool; 
noalg.struct { cmd/go/internal/test.c unsafe.Pointer; cmd/go/internal/test.elem unsafe.Pointer }
noalg.struct { cmd/go/internal/test.started bool; cmd/go/internal/test.heap bool; cmd/go/internal/test.openDefer boo
noalg.struct { cmd/go/internal/toolchain.started bool; cmd/go/internal/toolchain.heap bool; cmd/go/internal/toolchai
noalg.struct { cmd/go/internal/tool.started bool; cmd/go/internal/tool.heap bool; cmd/go/internal/tool.openDefer boo
noalg.struct { cmd/go/internal/trace.started bool; cmd/go/internal/trace.heap bool; cmd/go/internal/trace.openDefer 
noalg.struct { cmd/go/internal/vcs.started bool; cmd/go/internal/vcs.heap bool; cmd/go/internal/vcs.openDefer bool; 
noalg.struct { cmd/go/internal/vet.started bool; cmd/go/internal/vet.heap bool; cmd/go/internal/vet.openDefer bool; 
noalg.struct { cmd/go/internal/web.started bool; cmd/go/internal/web.heap bool; cmd/go/internal/web.openDefer bool; 
noalg.struct { cmd/go/internal/work.c unsafe.Pointer; cmd/go/internal/work.elem unsafe.Pointer }
noalg.struct { cmd/go/internal/work.started bool; cmd/go/internal/work.heap bool; cmd/go/internal/work.openDefer boo
noalg.struct { cmd/internal/browser.c unsafe.Pointer; cmd/internal/browser.elem unsafe.Pointer }
noalg.struct { cmd/internal/buildid.started bool; cmd/internal/buildid.heap bool; cmd/internal/buildid.openDefer boo
noalg.struct { cmd/internal/pkgpath.started bool; cmd/internal/pkgpath.heap bool; cmd/internal/pkgpath.openDefer boo
noalg.struct { cmd/vendor/golang.org/x/mod/modfile.started bool; cmd/vendor/golang.org/x/mod/modfile.heap bool; cmd/
noalg.struct { cmd/vendor/golang.org/x/mod/module.started bool; cmd/vendor/golang.org/x/mod/module.heap bool; cmd/ve
noalg.struct { cmd/vendor/golang.org/x/mod/sumdb/dirhash.started bool; cmd/vendor/golang.org/x/mod/sumdb/dirhash.hea
noalg.struct { cmd/vendor/golang.org/x/mod/sumdb.started bool; cmd/vendor/golang.org/x/mod/sumdb.heap bool; cmd/vend
noalg.struct { cmd/vendor/golang.org/x/mod/zip.started bool; cmd/vendor/golang.org/x/mod/zip.heap bool; cmd/vendor/g
noalg.struct { cmd/vendor/golang.org/x/sync/semaphore.c unsafe.Pointer; cmd/vendor/golang.org/x/sync/semaphore.elem 
noalg.struct { context.c unsafe.Pointer; context.elem unsafe.Pointer }
noalg.struct { context.started bool; context.heap bool; context.openDefer bool; context.sp uintptr; context.pc uintp
noalg.struct { crypto/hmac.started bool; crypto/hmac.heap bool; crypto/hmac.openDefer bool; crypto/hmac.sp uintptr; 
noalg.struct { crypto/internal/randutil.c unsafe.Pointer; crypto/internal/randutil.elem unsafe.Pointer }
noalg.struct { crypto/rand.started bool; crypto/rand.heap bool; crypto/rand.openDefer bool; crypto/rand.sp uintptr; 
noalg.struct { crypto/tls.c unsafe.Pointer; crypto/tls.elem unsafe.Pointer }
noalg.struct { crypto/tls.started bool; crypto/tls.heap bool; crypto/tls.openDefer bool; crypto/tls.sp uintptr; cryp
noalg.struct { crypto/x509.started bool; crypto/x509.heap bool; crypto/x509.openDefer bool; crypto/x509.sp uintptr; 
noalg.struct { debug/buildinfo.started bool; debug/buildinfo.heap bool; debug/buildinfo.openDefer bool; debug/buildi
noalg.struct { debug/dwarf.started bool; debug/dwarf.heap bool; debug/dwarf.openDefer bool; debug/dwarf.sp uintptr; 
noalg.struct { encoding/json.started bool; encoding/json.heap bool; encoding/json.openDefer bool; encoding/json.sp u
noalg.struct { flag.started bool; flag.heap bool; flag.openDefer bool; flag.sp uintptr; flag.pc uintptr; flag.fn uin
noalg.struct { fmt.started bool; fmt.heap bool; fmt.openDefer bool; fmt.sp uintptr; fmt.pc uintptr; fmt.fn uintptr; 
noalg.struct { F uintptr; archive/zip..autotmp_3 *sync.Mutex }
noalg.struct { F uintptr; archive/zip..autotmp_6 *sync.Mutex }
noalg.struct { F uintptr; archive/zip.files []archive/zip.fileListEntry; archive/zip.dir string }
noalg.struct { F uintptr; archive/zip.files []archive/zip.fileListEntry; archive/zip.dir string; archive/zip.elem st
noalg.struct { F uintptr; archive/zip.r *archive/zip.Reader }
noalg.struct { F uintptr; cmd/go/internal/base.checker *cmd/go/internal/base.netTokenChecker; cmd/go/internal/base.h
noalg.struct { F uintptr; cmd/go/internal/base.sig chan os.Signal }
noalg.struct { F uintptr; cmd/go/internal/base.toolPath string }
noalg.struct { F uintptr; cmd/go/internal/bug..autotmp_17 string }
noalg.struct { F uintptr; cmd/go/internal/bug..autotmp_18 string }
noalg.struct { F uintptr; cmd/go/internal/cache..autotmp_10 chan<- struct {} }
noalg.struct { F uintptr; cmd/go/internal/cache..autotmp_17 *sync.Mutex }
noalg.struct { F uintptr; cmd/go/internal/cache..autotmp_26 *cmd/go/internal/cache.ProgCache; cmd/go/internal/cache.
noalg.struct { F uintptr; cmd/go/internal/cache..autotmp_28 *time.Ticker }
noalg.struct { F uintptr; cmd/go/internal/cache..autotmp_37 *os.File }
noalg.struct { F uintptr; cmd/go/internal/cache..autotmp_3 *sync.Mutex }
noalg.struct { F uintptr; cmd/go/internal/cache..autotmp_58 *os.File }
noalg.struct { F uintptr; cmd/go/internal/cache.err *error; cmd/go/internal/cache.c *cmd/go/internal/cache.ProgCache
noalg.struct { F uintptr; cmd/go/internal/clean.packageFile map[string]bool }
noalg.struct { F uintptr; cmd/go/internal/cmdflag.f **flag.Flag; cmd/go/internal/cmdflag.args *[]string }
noalg.struct { F uintptr; cmd/go/internal/envcmd.add map[string]string; cmd/go/internal/envcmd.del map[string]bool }
noalg.struct { F uintptr; cmd/go/internal/envcmd.b *cmd/go/internal/work.Builder }
noalg.struct { F uintptr; cmd/go/internal/envcmd.lines []string }
noalg.struct { F uintptr; cmd/go/internal/fsys..autotmp_6 *sync.Mutex }
noalg.struct { F uintptr; cmd/go/internal/fsys.sortedFiles []io/fs.FileInfo }
noalg.struct { F uintptr; cmd/go/internal/generate.ok *bool }
noalg.struct { F uintptr; cmd/go/internal/get.parent *cmd/go/internal/load.Package; cmd/go/internal/get.ctx context.
noalg.struct { F uintptr; cmd/go/internal/get.path string }
noalg.struct { F uintptr; cmd/go/internal/gover.list []cmd/vendor/golang.org/x/mod/module.Version }
noalg.struct { F uintptr; cmd/go/internal/list.argToMods map[string][]*cmd/go/internal/modinfo.ModulePublic; cmd/go/
noalg.struct { F uintptr; cmd/go/internal/list..autotmp_87 *bufio.Writer }
noalg.struct { F uintptr; cmd/go/internal/list.b *cmd/go/internal/work.Builder }
noalg.struct { F uintptr; cmd/go/internal/list.cachedCtxt **cmd/go/internal/list.Context }
noalg.struct { F uintptr; cmd/go/internal/list.ctx context.Context }
noalg.struct { F uintptr; cmd/go/internal/list.data []uint8; cmd/go/internal/list.c cmd/go/internal/cache.Cache; cmd
noalg.struct { F uintptr; cmd/go/internal/list.out *cmd/go/internal/list.TrackingWriter }
noalg.struct { F uintptr; cmd/go/internal/list.p *cmd/go/internal/load.Package }
noalg.struct { F uintptr; cmd/go/internal/list.sema *cmd/vendor/golang.org/x/sync/semaphore.Weighted; cmd/go/interna
noalg.struct { F uintptr; cmd/go/internal/list.tmpl *text/template.Template; cmd/go/internal/list.out *cmd/go/intern
noalg.struct { F uintptr; cmd/go/internal/load..autotmp_17 *cmd/go/internal/load.ImportStack }
noalg.struct { F uintptr; cmd/go/internal/load..autotmp_18 *cmd/go/internal/trace.Span }
noalg.struct { F uintptr; cmd/go/internal/load..autotmp_25 *os.File }
noalg.struct { F uintptr; cmd/go/internal/load..autotmp_32 *cmd/go/internal/trace.Span }
noalg.struct { F uintptr; cmd/go/internal/load..autotmp_33 *cmd/go/internal/load.preload }
noalg.struct { F uintptr; cmd/go/internal/load..autotmp_36 *cmd/go/internal/trace.Span }
noalg.struct { F uintptr; cmd/go/internal/load..autotmp_37 *cmd/go/internal/load.ImportStack }
noalg.struct { F uintptr; cmd/go/internal/load..autotmp_45 *cmd/go/internal/load.ImportStack }
noalg.struct { F uintptr; cmd/go/internal/load..autotmp_64 *cmd/go/internal/trace.Span }
noalg.struct { F uintptr; cmd/go/internal/load..autotmp_65 *cmd/go/internal/load.preload }
noalg.struct { F uintptr; cmd/go/internal/load..autotmp_6 func(string); cmd/go/internal/load..autotmp_7 string }
noalg.struct { F uintptr; cmd/go/internal/load..autotmp_7 func(string); cmd/go/internal/load..autotmp_8 string }
noalg.struct { F uintptr; cmd/go/internal/load.cover *cmd/go/internal/load.TestCover; cmd/go/internal/load.p *cmd/go
noalg.struct { F uintptr; cmd/go/internal/load.ctx context.Context; cmd/go/internal/load.opts cmd/go/internal/load.P
noalg.struct { F uintptr; cmd/go/internal/load.ctx context.Context; cmd/go/internal/load.parent *go/build.Package; c
noalg.struct { F uintptr; cmd/go/internal/load.ctx context.Context; cmd/go/internal/load.pre *cmd/go/internal/load.p
noalg.struct { F uintptr; cmd/go/internal/load.debugModFromModinfo *func(*cmd/go/internal/modinfo.ModulePublic) *run
noalg.struct { F uintptr; cmd/go/internal/load.didSplit *bool; cmd/go/internal/load.testCopy map[*cmd/go/internal/lo
noalg.struct { F uintptr; cmd/go/internal/load.dirent []io/fs.FileInfo }
noalg.struct { F uintptr; cmd/go/internal/load.dir string }
noalg.struct { F uintptr; cmd/go/internal/load.dir string; cmd/go/internal/load.matchPath func(string) bool }
noalg.struct { F uintptr; cmd/go/internal/load.dir string; cmd/go/internal/load.path *string }
noalg.struct { F uintptr; cmd/go/internal/load.err *error; cmd/go/internal/load.pattern *string }
noalg.struct { F uintptr; cmd/go/internal/load.ex []*go/doc.Example }
noalg.struct { F uintptr; cmd/go/internal/load.importPaths *[]string; cmd/go/internal/load.p *cmd/go/internal/load.P
noalg.struct { F uintptr; cmd/go/internal/load.info *runtime/debug.BuildInfo }
noalg.struct { F uintptr; cmd/go/internal/load.loaded *bool; cmd/go/internal/load.r cmd/go/internal/load.resolvedImp
noalg.struct { F uintptr; cmd/go/internal/load.matchPath func(string) bool }
noalg.struct { F uintptr; cmd/go/internal/load.mode int }
noalg.struct { F uintptr; cmd/go/internal/load.parallelizablePart func(); cmd/go/internal/load.done func() }
noalg.struct { F uintptr; cmd/go/internal/load.parentPath string; cmd/go/internal/load.parentIsStd bool; cmd/go/inte
noalg.struct { F uintptr; cmd/go/internal/load.path string }
noalg.struct { F uintptr; cmd/go/internal/load.p *cmd/go/internal/load.Package }
noalg.struct { F uintptr; cmd/go/internal/load.p *cmd/go/internal/load.Package; cmd/go/internal/load.stk *cmd/go/int
noalg.struct { F uintptr; cmd/go/internal/load.pkgdir string; cmd/go/internal/load.file *string; cmd/go/internal/loa
noalg.struct { F uintptr; cmd/go/internal/load.seen map[*cmd/go/internal/load.Package]bool; cmd/go/internal/load.wal
noalg.struct { F uintptr; cmd/go/internal/load.setPkgErrorf func(string, ...interface {}) }
noalg.struct { F uintptr; cmd/go/internal/load.shouldDelete map[string]bool }
noalg.struct { F uintptr; cmd/go/internal/load.vcsCmd *cmd/go/internal/vcs.Cmd; cmd/go/internal/load.repoDir string 
noalg.struct { F uintptr; cmd/go/internal/load.visited map[*cmd/go/internal/load.Package]*cmd/go/internal/load.Packa
noalg.struct { F uintptr; cmd/go/internal/lockedfile..autotmp_22 *cmd/go/internal/lockedfile.File }
noalg.struct { F uintptr; cmd/go/internal/lockedfile..autotmp_9 *cmd/go/internal/lockedfile.File }
noalg.struct { F uintptr; cmd/go/internal/lockedfile.err *error; cmd/go/internal/lockedfile.f *cmd/go/internal/locke
noalg.struct { F uintptr; cmd/go/internal/lockedfile.mu *cmd/go/internal/lockedfile.Mutex; cmd/go/internal/lockedfil
noalg.struct { F uintptr; cmd/go/internal/modcmd..autotmp_10 *bufio.Writer }
noalg.struct { F uintptr; cmd/go/internal/modcmd..autotmp_11 *os.File }
noalg.struct { F uintptr; cmd/go/internal/modcmd.ctx context.Context; cmd/go/internal/modcmd.m *cmd/go/internal/modc
noalg.struct { F uintptr; cmd/go/internal/modcmd.data []uint8; cmd/go/internal/modcmd.out []uint8 }
noalg.struct { F uintptr; cmd/go/internal/modcmd.errsc chan []error; cmd/go/internal/modcmd.ctx context.Context; cmd
noalg.struct { F uintptr; cmd/go/internal/modcmd.mg *cmd/go/internal/modload.ModuleGraph; cmd/go/internal/modcmd.for
noalg.struct { F uintptr; cmd/go/internal/modcmd.oldPath string; cmd/go/internal/modcmd.oldVersion string; cmd/go/in
noalg.struct { F uintptr; cmd/go/internal/modcmd.path string; cmd/go/internal/modcmd.arg string }
noalg.struct { F uintptr; cmd/go/internal/modcmd.path string; cmd/go/internal/modcmd.version string; cmd/go/internal
noalg.struct { F uintptr; cmd/go/internal/modcmd.vi cmd/vendor/golang.org/x/mod/modfile.VersionInterval; cmd/go/inte
noalg.struct { F uintptr; cmd/go/internal/modcmd.w *bufio.Writer }
noalg.struct { F uintptr; cmd/go/internal/modconv..autotmp_38 func(int, cmd/vendor/golang.org/x/mod/module.Version);
noalg.struct { F uintptr; cmd/go/internal/modconv.sem chan cmd/go/internal/modconv.token·1 }
noalg.struct { F uintptr; cmd/go/internal/modconv.sem chan cmd/go/internal/modconv.token·1; cmd/go/internal/modconv.
noalg.struct { F uintptr; cmd/go/internal/modfetch..autotmp_12 io.ReadCloser }
noalg.struct { F uintptr; cmd/go/internal/modfetch..autotmp_17 io.ReadCloser }
noalg.struct { F uintptr; cmd/go/internal/modfetch..autotmp_17 *sync.Mutex }
noalg.struct { F uintptr; cmd/go/internal/modfetch..autotmp_19 *cmd/go/internal/lockedfile.File }
noalg.struct { F uintptr; cmd/go/internal/modfetch..autotmp_38 *cmd/go/internal/trace.Span }
noalg.struct { F uintptr; cmd/go/internal/modfetch..autotmp_39 *cmd/go/internal/trace.Span }
noalg.struct { F uintptr; cmd/go/internal/modfetch..autotmp_40 *cmd/go/internal/trace.Span }
noalg.struct { F uintptr; cmd/go/internal/modfetch..autotmp_53 io.ReadCloser }
noalg.struct { F uintptr; cmd/go/internal/modfetch..autotmp_54 string }
noalg.struct { F uintptr; cmd/go/internal/modfetch..autotmp_55 *os.File }
noalg.struct { F uintptr; cmd/go/internal/modfetch..autotmp_8 *sync.Mutex }
noalg.struct { F uintptr; cmd/go/internal/modfetch..autotmp_9 *sync.Mutex }
noalg.struct { F uintptr; cmd/go/internal/modfetch.c *cmd/go/internal/modfetch.dbClient }
noalg.struct { F uintptr; cmd/go/internal/modfetch/codehost..autotmp_26 *sync.Mutex }
noalg.struct { F uintptr; cmd/go/internal/modfetch/codehost..autotmp_2 string }
noalg.struct { F uintptr; cmd/go/internal/modfetch/codehost..autotmp_35 string }
noalg.struct { F uintptr; cmd/go/internal/modfetch/codehost.c *os/exec.Cmd }
noalg.struct { F uintptr; cmd/go/internal/modfetch/codehost.ctx context.Context; cmd/go/internal/modfetch/codehost.v
noalg.struct { F uintptr; cmd/go/internal/modfetch/codehost.err *error; cmd/go/internal/modfetch/codehost.ctx contex
noalg.struct { F uintptr; cmd/go/internal/modfetch/codehost.f *os.File; cmd/go/internal/modfetch/codehost.err *error
noalg.struct { F uintptr; cmd/go/internal/modfetch/codehost.info **cmd/go/internal/modfetch/codehost.RevInfo; cmd/go
noalg.struct { F uintptr; cmd/go/internal/modfetch/codehost.r *cmd/go/internal/modfetch/codehost.gitRepo; cmd/go/int
noalg.struct { F uintptr; cmd/go/internal/modfetch/codehost.r *cmd/go/internal/modfetch/codehost.vcsRepo; cmd/go/int
noalg.struct { F uintptr; cmd/go/internal/modfetch/codehost.tags *cmd/go/internal/modfetch/codehost.Tags }
noalg.struct { F uintptr; cmd/go/internal/modfetch/codehost.xLog io.Writer; cmd/go/internal/modfetch/codehost.start 
noalg.struct { F uintptr; cmd/go/internal/modfetch.ctx context.Context; cmd/go/internal/modfetch.mod cmd/vendor/gola
noalg.struct { F uintptr; cmd/go/internal/modfetch.ctx context.Context; cmd/go/internal/modfetch.path string; cmd/go
noalg.struct { F uintptr; cmd/go/internal/modfetch.ctx context.Context; cmd/go/internal/modfetch.r *cmd/go/internal/
noalg.struct { F uintptr; cmd/go/internal/modfetch.data []uint8 }
noalg.struct { F uintptr; cmd/go/internal/modfetch.data *[]uint8; cmd/go/internal/modfetch.ctx context.Context; cmd/
noalg.struct { F uintptr; cmd/go/internal/modfetch.dirs *[]cmd/go/internal/modfetch.pathMode·1 }
noalg.struct { F uintptr; cmd/go/internal/modfetch.err *error; cmd/go/internal/modfetch.f *os.File }
noalg.struct { F uintptr; cmd/go/internal/modfetch.err error; cmd/go/internal/modfetch.f *os.File }
noalg.struct { F uintptr; cmd/go/internal/modfetch.err *error; cmd/go/internal/modfetch.version string; cmd/go/inter
noalg.struct { F uintptr; cmd/go/internal/modfetch.f *cmd/go/internal/lockedfile.File; cmd/go/internal/modfetch.err 
noalg.struct { F uintptr; cmd/go/internal/modfetch.hf *cmd/go/internal/lockedfile.File; cmd/go/internal/modfetch.err
noalg.struct { F uintptr; cmd/go/internal/modfetch.info *cmd/go/internal/modfetch.RevInfo }
noalg.struct { F uintptr; cmd/go/internal/modfetch.keep map[cmd/vendor/golang.org/x/mod/module.Version]bool }
noalg.struct { F uintptr; cmd/go/internal/modfetch.l *cmd/go/internal/modfetch.loggingRepo; cmd/go/internal/modfetch
noalg.struct { F uintptr; cmd/go/internal/modfetch.list []string }
noalg.struct { F uintptr; cmd/go/internal/modfetch.p *cmd/go/internal/modfetch.proxyRepo; cmd/go/internal/modfetch.c
noalg.struct { F uintptr; cmd/go/internal/modfetch.p *cmd/go/internal/modfetch.proxyRepo; cmd/go/internal/modfetch.e
noalg.struct { F uintptr; cmd/go/internal/modfetch.proxy string; cmd/go/internal/modfetch.path string }
noalg.struct { F uintptr; cmd/go/internal/modfetch.r *cmd/go/internal/modfetch.cachingRepo; cmd/go/internal/modfetch
noalg.struct { F uintptr; cmd/go/internal/modfetch.r *cmd/go/internal/modfetch.codeRepo; cmd/go/internal/modfetch.ct
noalg.struct { F uintptr; cmd/go/internal/modfetch.r *cmd/go/internal/modfetch.codeRepo; cmd/go/internal/modfetch.in
noalg.struct { F uintptr; cmd/go/internal/modfetch.r *cmd/go/internal/modfetch.codeRepo; cmd/go/internal/modfetch.v 
noalg.struct { F uintptr; cmd/go/internal/modfetch.rem []string; cmd/go/internal/modfetch.major string }
noalg.struct { F uintptr; cmd/go/internal/modfetch.retractions []cmd/vendor/golang.org/x/mod/modfile.VersionInterval
noalg.struct { F uintptr; cmd/go/internal/modfetch.start time.Time; cmd/go/internal/modfetch.format string; cmd/go/i
noalg.struct { F uintptr; cmd/go/internal/modfetch.tagPrefix string }
noalg.struct { F uintptr; cmd/go/internal/modfetch.tagToVersion func(string) (string, bool); cmd/go/internal/modfetc
noalg.struct { F uintptr; cmd/go/internal/modfetch.unrecoverableErr *error; cmd/go/internal/modfetch.ctx context.Con
noalg.struct { F uintptr; cmd/go/internal/modget.ctx context.Context; cmd/go/internal/modget.deprecations []cmd/go/i
noalg.struct { F uintptr; cmd/go/internal/modget.ctx context.Context; cmd/go/internal/modget.mActual cmd/vendor/gola
noalg.struct { F uintptr; cmd/go/internal/modget.ctx context.Context; cmd/go/internal/modget.pattern string; cmd/go/
noalg.struct { F uintptr; cmd/go/internal/modget.ctx context.Context; cmd/go/internal/modget.retractions []cmd/go/in
noalg.struct { F uintptr; cmd/go/internal/modget.curM *cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/m
noalg.struct { F uintptr; cmd/go/internal/modget.deprecations []cmd/go/internal/modget.modMessage·2 }
noalg.struct { F uintptr; cmd/go/internal/modget.findPackage func(context.Context, string, cmd/vendor/golang.org/x/m
noalg.struct { F uintptr; cmd/go/internal/modget.q **cmd/go/internal/modget.query }
noalg.struct { F uintptr; cmd/go/internal/modget.q *cmd/go/internal/modget.query }
noalg.struct { F uintptr; cmd/go/internal/modget.q **cmd/go/internal/modget.query; cmd/go/internal/modget.ctx contex
noalg.struct { F uintptr; cmd/go/internal/modget.q **cmd/go/internal/modget.query; cmd/go/internal/modget.r *cmd/go/
noalg.struct { F uintptr; cmd/go/internal/modget.q *cmd/go/internal/modget.query; cmd/go/internal/modget.r *cmd/go/i
noalg.struct { F uintptr; cmd/go/internal/modget.r *cmd/go/internal/modget.resolver }
noalg.struct { F uintptr; cmd/go/internal/modget.r *cmd/go/internal/modget.resolver; cmd/go/internal/modget.ctx cont
noalg.struct { F uintptr; cmd/go/internal/modget.r *cmd/go/internal/modget.resolver; cmd/go/internal/modget.curM *cm
noalg.struct { F uintptr; cmd/go/internal/modget.r *cmd/go/internal/modget.resolver; cmd/go/internal/modget.mu *sync
noalg.struct { F uintptr; cmd/go/internal/modget.requested string; cmd/go/internal/modget.selected func(string) stri
noalg.struct { F uintptr; cmd/go/internal/modget.retractions []cmd/go/internal/modget.modMessage·2 }
noalg.struct { F uintptr; cmd/go/internal/modget.sortedChanges []cmd/go/internal/modget.change·3 }
noalg.struct { F uintptr; cmd/go/internal/modget.upgrades *[]cmd/go/internal/modget.pathSet }
noalg.struct { F uintptr; cmd/go/internal/modindex.args *string; cmd/go/internal/modindex.trimBytes func(int) }
noalg.struct { F uintptr; cmd/go/internal/modindex..autotmp_3 bool }
noalg.struct { F uintptr; cmd/go/internal/modindex..autotmp_74 bool; cmd/go/internal/modindex..autotmp_75 *error }
noalg.struct { F uintptr; cmd/go/internal/modindex..autotmp_7 bool }
noalg.struct { F uintptr; cmd/go/internal/modindex..autotmp_7 bool; cmd/go/internal/modindex..autotmp_8 *error }
noalg.struct { F uintptr; cmd/go/internal/modindex.badGoError *error; cmd/go/internal/modindex.badGoFiles map[string
noalg.struct { F uintptr; cmd/go/internal/modindex.ctxt *cmd/go/internal/modindex.Context; cmd/go/internal/modindex.
noalg.struct { F uintptr; cmd/go/internal/modindex.err *error }
noalg.struct { F uintptr; cmd/go/internal/modindex.modroot string; cmd/go/internal/modindex.ismodcache bool }
noalg.struct { F uintptr; cmd/go/internal/modindex.packages []*cmd/go/internal/modindex.rawPackage }
noalg.struct { F uintptr; cmd/go/internal/modindex.path string; cmd/go/internal/modindex.m *cmd/go/internal/modindex
noalg.struct { F uintptr; cmd/go/internal/modindex.pkgdir string; cmd/go/internal/modindex.modroot string }
noalg.struct { F uintptr; cmd/go/internal/modindex.pos *go/token.Position; cmd/go/internal/modindex.args *string }
noalg.struct { F uintptr; cmd/go/internal/modindex.root string; cmd/go/internal/modindex.modroot string; cmd/go/inte
noalg.struct { F uintptr; cmd/go/internal/modindex.sf *cmd/go/internal/modindex.sourceFile }
noalg.struct { F uintptr; cmd/go/internal/modload..autotmp_12 *cmd/go/internal/trace.Span }
noalg.struct { F uintptr; cmd/go/internal/modload..autotmp_14 *cmd/go/internal/trace.Span }
noalg.struct { F uintptr; cmd/go/internal/modload..autotmp_18 *cmd/go/internal/trace.Span }
noalg.struct { F uintptr; cmd/go/internal/modload..autotmp_25 *cmd/go/internal/trace.Span }
noalg.struct { F uintptr; cmd/go/internal/modload..autotmp_26 func(string, *cmd/go/internal/modload.result·5); cmd/g
noalg.struct { F uintptr; cmd/go/internal/modload..autotmp_30 *cmd/go/internal/trace.Span }
noalg.struct { F uintptr; cmd/go/internal/modload..autotmp_3 *sync.Mutex }
noalg.struct { F uintptr; cmd/go/internal/modload..autotmp_61 *cmd/go/internal/trace.Span }
noalg.struct { F uintptr; cmd/go/internal/modload..autotmp_7 *cmd/go/internal/trace.Span }
noalg.struct { F uintptr; cmd/go/internal/modload.ctx context.Context; cmd/go/internal/modload.dir string }
noalg.struct { F uintptr; cmd/go/internal/modload.ctx context.Context; cmd/go/internal/modload.m *cmd/go/internal/se
noalg.struct { F uintptr; cmd/go/internal/modload.ctx *context.Context; cmd/go/internal/modload.m cmd/vendor/golang.
noalg.struct { F uintptr; cmd/go/internal/modload.ctx context.Context; cmd/go/internal/modload.path string }
noalg.struct { F uintptr; cmd/go/internal/modload.ctx context.Context; cmd/go/internal/modload.path string; cmd/go/i
noalg.struct { F uintptr; cmd/go/internal/modload.ctx context.Context; cmd/go/internal/modload.pkg *cmd/go/internal/
noalg.struct { F uintptr; cmd/go/internal/modload.ctx context.Context; cmd/go/internal/modload.rs *cmd/go/internal/m
noalg.struct { F uintptr; cmd/go/internal/modload.current func(string) string; cmd/go/internal/modload.query string;
noalg.struct { F uintptr; cmd/go/internal/modload.d *string }
noalg.struct { F uintptr; cmd/go/internal/modload.err *error; cmd/go/internal/modload.m cmd/vendor/golang.org/x/mod/
noalg.struct { F uintptr; cmd/go/internal/modload.err *error; cmd/go/internal/modload.resolved *string; cmd/go/inter
noalg.struct { F uintptr; cmd/go/internal/modload.fixed *bool; cmd/go/internal/modload.ctx context.Context }
noalg.struct { F uintptr; cmd/go/internal/modload.importPathRoot string; cmd/go/internal/modload.treeCanMatch func(s
noalg.struct { F uintptr; cmd/go/internal/modload.imports []string; cmd/go/internal/modload.testImports []string }
noalg.struct { F uintptr; cmd/go/internal/modload.info **cmd/go/internal/modfetch.RevInfo; cmd/go/internal/modload.c
noalg.struct { F uintptr; cmd/go/internal/modload.ld *cmd/go/internal/modload.loader; cmd/go/internal/modload.ctx co
noalg.struct { F uintptr; cmd/go/internal/modload.ld *cmd/go/internal/modload.loader; cmd/go/internal/modload.goVers
noalg.struct { F uintptr; cmd/go/internal/modload.loading *sync.Map; cmd/go/internal/modload.loadQueue *cmd/go/inter
noalg.struct { F uintptr; cmd/go/internal/modload.loadOne func(cmd/vendor/golang.org/x/mod/module.Version) (*cmd/go/
noalg.struct { F uintptr; cmd/go/internal/modload.mainModule cmd/vendor/golang.org/x/mod/module.Version; cmd/go/inte
noalg.struct { F uintptr; cmd/go/internal/modload.matches *[]*cmd/go/internal/search.Match; cmd/go/internal/modload.
noalg.struct { F uintptr; cmd/go/internal/modload.m *cmd/go/internal/search.Match; cmd/go/internal/modload.root stri
noalg.struct { F uintptr; cmd/go/internal/modload.m cmd/vendor/golang.org/x/mod/module.Version }
noalg.struct { F uintptr; cmd/go/internal/modload.m cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/modl
noalg.struct { F uintptr; cmd/go/internal/modload.mdir string; cmd/go/internal/modload.dir *string }
noalg.struct { F uintptr; cmd/go/internal/modload.mg *cmd/go/internal/modload.ModuleGraph }
noalg.struct { F uintptr; cmd/go/internal/modload.mg *cmd/go/internal/modload.ModuleGraph; cmd/go/internal/modload.k
noalg.struct { F uintptr; cmd/go/internal/modload.mg *cmd/go/internal/modload.ModuleGraph; cmd/go/internal/modload.m
noalg.struct { F uintptr; cmd/go/internal/modload.mod *cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/m
noalg.struct { F uintptr; cmd/go/internal/modload.mode cmd/go/internal/modload.ListMode; cmd/go/internal/modload.ctx
noalg.struct { F uintptr; cmd/go/internal/modload.mods []cmd/vendor/golang.org/x/mod/module.Version }
noalg.struct { F uintptr; cmd/go/internal/modload.mp func(string) bool }
noalg.struct { F uintptr; cmd/go/internal/modload.mustSelectVersion map[string]string; cmd/go/internal/modload.t *cm
noalg.struct { F uintptr; cmd/go/internal/modload.mu *sync.Mutex; cmd/go/internal/modload.m *cmd/go/internal/search.
noalg.struct { F uintptr; cmd/go/internal/modload.new []uint8; cmd/go/internal/modload.errNoChange error; cmd/go/int
noalg.struct { F uintptr; cmd/go/internal/modload.noneSelected func(string) string }
noalg.struct { F uintptr; cmd/go/internal/modload.path string }
noalg.struct { F uintptr; cmd/go/internal/modload.path string; cmd/go/internal/modload.ld *cmd/go/internal/modload.l
noalg.struct { F uintptr; cmd/go/internal/modload.path string; cmd/go/internal/modload.versions *[]string }
noalg.struct { F uintptr; cmd/go/internal/modload.pattern string }
noalg.struct { F uintptr; cmd/go/internal/modload.pattern string; cmd/go/internal/modload.ctx context.Context }
noalg.struct { F uintptr; cmd/go/internal/modload.pkg *cmd/go/internal/modload.loadPkg; cmd/go/internal/modload.ld *
noalg.struct { F uintptr; cmd/go/internal/modload.proxy string; cmd/go/internal/modload.current func(string) string;
noalg.struct { F uintptr; cmd/go/internal/modload.q *cmd/go/internal/par.Queue; cmd/go/internal/modload.m *cmd/go/in
noalg.struct { F uintptr; cmd/go/internal/modload.qm *cmd/go/internal/modload.queryMatcher; cmd/go/internal/modload.
noalg.struct { F uintptr; cmd/go/internal/modload.queryModule func(context.Context, string) (cmd/go/internal/modload
noalg.struct { F uintptr; cmd/go/internal/modload.query string }
noalg.struct { F uintptr; cmd/go/internal/modload.repo cmd/go/internal/modload.versionRepo; cmd/go/internal/modload.
noalg.struct { F uintptr; cmd/go/internal/modload.reuse map[cmd/vendor/golang.org/x/mod/module.Version]*cmd/go/inter
noalg.struct { F uintptr; cmd/go/internal/modload.rootPruning *cmd/go/internal/modload.modPruning; cmd/go/internal/m
noalg.struct { F uintptr; cmd/go/internal/modload.roots *[]cmd/vendor/golang.org/x/mod/module.Version; cmd/go/intern
noalg.struct { F uintptr; cmd/go/internal/modload.root string; cmd/go/internal/modload.pkgDir string; cmd/go/interna
noalg.struct { F uintptr; cmd/go/internal/modload.rs *cmd/go/internal/modload.Requirements; cmd/go/internal/modload.
noalg.struct { F uintptr; cmd/go/internal/modload.seenrep map[cmd/vendor/golang.org/x/mod/module.Version]bool; cmd/g
noalg.struct { F uintptr; cmd/go/internal/modload.sem chan cmd/go/internal/modload.token·2; cmd/go/internal/modload.
noalg.struct { F uintptr; cmd/go/internal/modload.updateMatches func(*cmd/go/internal/modload.Requirements, *cmd/go/
noalg.struct { F uintptr; cmd/go/internal/modload.vendErrors *strings.Builder }
noalg.struct { F uintptr; cmd/go/internal/modload.vendorDir string }
noalg.struct { F uintptr; cmd/go/internal/modload.v string }
noalg.struct { F uintptr; cmd/go/internal/mvs..autotmp_5 *cmd/go/internal/par.Work[go.shape.struct { Path string; Ve
noalg.struct { F uintptr; cmd/go/internal/mvs.errs map[cmd/vendor/golang.org/x/mod/module.Version]error }
noalg.struct { F uintptr; cmd/go/internal/mvs.have map[cmd/vendor/golang.org/x/mod/module.Version]bool; cmd/go/inter
noalg.struct { F uintptr; cmd/go/internal/mvs.min []cmd/vendor/golang.org/x/mod/module.Version }
noalg.struct { F uintptr; cmd/go/internal/mvs.reqCache map[cmd/vendor/golang.org/x/mod/module.Version][]cmd/vendor/g
noalg.struct { F uintptr; cmd/go/internal/mvs.reqs cmd/go/internal/mvs.Reqs }
noalg.struct { F uintptr; cmd/go/internal/mvs.reqs cmd/go/internal/mvs.Reqs; cmd/go/internal/mvs.upgrade func(cmd/ve
noalg.struct { F uintptr; cmd/go/internal/mvs.upgrades map[cmd/vendor/golang.org/x/mod/module.Version]cmd/vendor/gol
noalg.struct { F uintptr; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.[2]string,go.shape.struct { cmd/
noalg.struct { F uintptr; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.string,go.shape.bool]; cmd/go/in
noalg.struct { F uintptr; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.string,go.shape.interface { Erro
noalg.struct { F uintptr; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.string,go.shape.string]; cmd/go/
noalg.struct { F uintptr; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/
noalg.struct { F uintptr; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.string,go.shape.*uint8]; cmd/go/
noalg.struct { F uintptr; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.struct { cmd/go/internal/load.pa
noalg.struct { F uintptr; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.struct { cmd/go/internal/modfetc
noalg.struct { F uintptr; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.struct { cmd/go/internal/modget.
noalg.struct { F uintptr; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.struct {},go.shape.struct { cmd/
noalg.struct { F uintptr; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.struct { Path string; Version st
noalg.struct { F uintptr; cmd/go/internal/par.f *func(); cmd/go/internal/par.q *cmd/go/internal/par.Queue }
noalg.struct { F uintptr; cmd/go/internal/par.f func() (go.shape.bool, error); cmd/go/internal/par..dict *[11]uintpt
noalg.struct { F uintptr; cmd/go/internal/par.f func() (go.shape.interface { CheckReuse(context.Context, *cmd/go/int
noalg.struct { F uintptr; cmd/go/internal/par.f func() (go.shape.[]string, error); cmd/go/internal/par..dict *[11]ui
noalg.struct { F uintptr; cmd/go/internal/par.f func() (go.shape.string, error); cmd/go/internal/par..dict *[11]uint
noalg.struct { F uintptr; cmd/go/internal/par.f func() (go.shape.struct { Path string; Version string "json:\",omite
noalg.struct { F uintptr; cmd/go/internal/par.f func() (go.shape.struct { Revision string; CommitTime time.Time; Unc
noalg.struct { F uintptr; cmd/go/internal/par.f func() (go.shape.[]uint8, error); cmd/go/internal/par..dict *[11]uin
noalg.struct { F uintptr; cmd/go/internal/par.f func() (go.shape.*uint8, error); cmd/go/internal/par..dict *[11]uint
noalg.struct { F uintptr; cmd/go/internal/par.pred func(go.shape.[2]string) bool; cmd/go/internal/par.c *cmd/go/inte
noalg.struct { F uintptr; cmd/go/internal/par.pred func(go.shape.string) bool; cmd/go/internal/par.c *cmd/go/interna
noalg.struct { F uintptr; cmd/go/internal/par.pred func(go.shape.struct {}) bool; cmd/go/internal/par.c *cmd/go/inte
noalg.struct { F uintptr; cmd/go/internal/par.pred func(go.shape.struct { cmd/go/internal/load.path string; cmd/go/i
noalg.struct { F uintptr; cmd/go/internal/par.pred func(go.shape.struct { cmd/go/internal/modfetch/codehost.vcs stri
noalg.struct { F uintptr; cmd/go/internal/par.pred func(go.shape.struct { cmd/go/internal/modfetch.proxy string; cmd
noalg.struct { F uintptr; cmd/go/internal/par.pred func(go.shape.struct { cmd/go/internal/modget.pattern string; cmd
noalg.struct { F uintptr; cmd/go/internal/par.pred func(go.shape.struct { Path string; Version string "json:\",omite
noalg.struct { F uintptr; cmd/go/internal/par.q *cmd/go/internal/par.Queue; cmd/go/internal/par.st *cmd/go/internal/
noalg.struct { F uintptr; cmd/go/internal/run.b *cmd/go/internal/work.Builder }
noalg.struct { F uintptr; cmd/go/internal/search.dir string; cmd/go/internal/search.prefix string; cmd/go/internal/s
noalg.struct { F uintptr; cmd/go/internal/search.src *string; cmd/go/internal/search.m *cmd/go/internal/search.Match
noalg.struct { F uintptr; cmd/go/internal/test.addFromGOFLAGS map[string]bool }
noalg.struct { F uintptr; cmd/go/internal/test.addFromGOFLAGS map[string]bool; cmd/go/internal/test.injectedFlags *[
noalg.struct { F uintptr; cmd/go/internal/test..autotmp_13 *sync.Mutex }
noalg.struct { F uintptr; cmd/go/internal/test..autotmp_14 *os.File }
noalg.struct { F uintptr; cmd/go/internal/test..autotmp_5 *sync.Mutex }
noalg.struct { F uintptr; cmd/go/internal/test..autotmp_70 *cmd/go/internal/trace.Span }
noalg.struct { F uintptr; cmd/go/internal/test.b *cmd/go/internal/work.Builder }
noalg.struct { F uintptr; cmd/go/internal/test.close func() error }
noalg.struct { F uintptr; cmd/go/internal/test.cmd *os/exec.Cmd; cmd/go/internal/test.cancelKilled *bool; cmd/go/int
noalg.struct { F uintptr; cmd/go/internal/test.json *cmd/internal/test2json.Converter; cmd/go/internal/test.err *err
noalg.struct { F uintptr; cmd/go/internal/tool..autotmp_8 *os.File }
noalg.struct { F uintptr; cmd/go/internal/tool.c chan os.Signal; cmd/go/internal/tool.toolCmd *os/exec.Cmd }
noalg.struct { F uintptr; cmd/go/internal/toolchain..autotmp_24 string; cmd/go/internal/toolchain..autotmp_25 io/fs.
noalg.struct { F uintptr; cmd/go/internal/toolchain..autotmp_26 string; cmd/go/internal/toolchain..autotmp_27 io/fs.
noalg.struct { F uintptr; cmd/go/internal/toolchain.ctx context.Context; cmd/go/internal/toolchain.versions **cmd/go
noalg.struct { F uintptr; cmd/go/internal/toolchain.gotoolchain string }
noalg.struct { F uintptr; cmd/go/internal/toolchain.list []string }
noalg.struct { F uintptr; cmd/go/internal/toolchain.srcUGoMod string }
noalg.struct { F uintptr; cmd/go/internal/trace.t *cmd/go/internal/trace.tracer; cmd/go/internal/trace.f *cmd/go/int
noalg.struct { F uintptr; cmd/go/internal/trace.t *cmd/go/internal/trace.tracer; cmd/go/internal/trace.f cmd/go/inte
noalg.struct { F uintptr; cmd/go/internal/vcs..autotmp_27 io.ReadCloser }
noalg.struct { F uintptr; cmd/go/internal/vcs..autotmp_3 *sync.Mutex }
noalg.struct { F uintptr; cmd/go/internal/vcs..autotmp_40 io.ReadCloser }
noalg.struct { F uintptr; cmd/go/internal/vcs.importPrefix string }
noalg.struct { F uintptr; cmd/go/internal/vcs.importPrefix string; cmd/go/internal/vcs.setCache func(cmd/go/internal
noalg.struct { F uintptr; cmd/go/internal/vet.addFromGOFLAGS map[string]bool; cmd/go/internal/vet.passToVet *[]strin
noalg.struct { F uintptr; cmd/go/internal/vet..autotmp_30 *cmd/go/internal/trace.Span }
noalg.struct { F uintptr; cmd/go/internal/vet.b *cmd/go/internal/work.Builder }
noalg.struct { F uintptr; cmd/go/internal/vet.close func() error }
noalg.struct { F uintptr; cmd/go/internal/vet.isVetFlag map[string]bool; cmd/go/internal/vet.addFromGOFLAGS map[stri
noalg.struct { F uintptr; cmd/go/internal/web..autotmp_11 io.ReadCloser }
noalg.struct { F uintptr; cmd/go/internal/web.security cmd/go/internal/web.SecurityMode }
noalg.struct { F uintptr; cmd/go/internal/work.a1 **cmd/go/internal/work.Action; cmd/go/internal/work.fullShlib stri
noalg.struct { F uintptr; cmd/go/internal/work.a1 *cmd/go/internal/work.Action; cmd/go/internal/work.p *cmd/go/inter
noalg.struct { F uintptr; cmd/go/internal/work.a1 **cmd/go/internal/work.Action; cmd/go/internal/work.shlib string; 
noalg.struct { F uintptr; cmd/go/internal/work.a *cmd/go/internal/work.Action; cmd/go/internal/work.b *cmd/go/intern
noalg.struct { F uintptr; cmd/go/internal/work..autotmp_11 *sync.Mutex }
noalg.struct { F uintptr; cmd/go/internal/work..autotmp_12 *os.File }
noalg.struct { F uintptr; cmd/go/internal/work..autotmp_12 string }
noalg.struct { F uintptr; cmd/go/internal/work..autotmp_147 *cmd/go/internal/work.Builder; cmd/go/internal/work..aut
noalg.struct { F uintptr; cmd/go/internal/work..autotmp_14 *cmd/go/internal/work.Builder; cmd/go/internal/work..auto
noalg.struct { F uintptr; cmd/go/internal/work..autotmp_17 *cmd/go/internal/trace.Span }
noalg.struct { F uintptr; cmd/go/internal/work..autotmp_19 *cmd/go/internal/trace.Span }
noalg.struct { F uintptr; cmd/go/internal/work..autotmp_22 *os.File }
noalg.struct { F uintptr; cmd/go/internal/work..autotmp_25 *os.File }
noalg.struct { F uintptr; cmd/go/internal/work..autotmp_2 *sync.Mutex }
noalg.struct { F uintptr; cmd/go/internal/work..autotmp_36 *sync.Mutex }
noalg.struct { F uintptr; cmd/go/internal/work..autotmp_40 *sync.Mutex }
noalg.struct { F uintptr; cmd/go/internal/work..autotmp_4 *sync.Mutex }
noalg.struct { F uintptr; cmd/go/internal/work..autotmp_5 *sync.WaitGroup }
noalg.struct { F uintptr; cmd/go/internal/work..autotmp_7 *sync.Map; cmd/go/internal/work..autotmp_8 interface {} }
noalg.struct { F uintptr; cmd/go/internal/work..autotmp_7 *sync.Mutex }
noalg.struct { F uintptr; cmd/go/internal/work..autotmp_8 *cmd/go/internal/work.Builder; cmd/go/internal/work..autot
noalg.struct { F uintptr; cmd/go/internal/work..autotmp_8 *os.File }
noalg.struct { F uintptr; cmd/go/internal/work.b *cmd/go/internal/work.Builder }
noalg.struct { F uintptr; cmd/go/internal/work.b *cmd/go/internal/work.Builder; cmd/go/internal/work.depMode cmd/go/
noalg.struct { F uintptr; cmd/go/internal/work.b *cmd/go/internal/work.Builder; cmd/go/internal/work.mode cmd/go/int
noalg.struct { F uintptr; cmd/go/internal/work.b *cmd/go/internal/work.Builder; cmd/go/internal/work.objdir string }
noalg.struct { F uintptr; cmd/go/internal/work.b *cmd/go/internal/work.Builder; cmd/go/internal/work.root *cmd/go/in
noalg.struct { F uintptr; cmd/go/internal/work.b *cmd/go/internal/work.Builder; cmd/go/internal/work.tools cmd/go/in
noalg.struct { F uintptr; cmd/go/internal/work.c cmd/go/internal/cache.Cache }
noalg.struct { F uintptr; cmd/go/internal/work.cgoldflags *[]string }
noalg.struct { F uintptr; cmd/go/internal/workcmd.arg string }
noalg.struct { F uintptr; cmd/go/internal/workcmd.lookDir func(string) }
noalg.struct { F uintptr; cmd/go/internal/workcmd.oldPath string; cmd/go/internal/workcmd.oldVersion string; cmd/go/
noalg.struct { F uintptr; cmd/go/internal/workcmd.path string; cmd/go/internal/workcmd.version string; cmd/go/intern
noalg.struct { F uintptr; cmd/go/internal/workcmd.workDir string; cmd/go/internal/workcmd.keepDirs map[string]string
noalg.struct { F uintptr; cmd/go/internal/work.ctx *context.Context; cmd/go/internal/work.wg *sync.WaitGroup; cmd/go
noalg.struct { F uintptr; cmd/go/internal/work.err *error; cmd/go/internal/work.a *cmd/go/internal/work.Action }
noalg.struct { F uintptr; cmd/go/internal/work.err *error; cmd/go/internal/work.b *cmd/go/internal/work.Builder; cmd
noalg.struct { F uintptr; cmd/go/internal/work.inWorkq map[*cmd/go/internal/work.Action]int; cmd/go/internal/work.wo
noalg.struct { F uintptr; cmd/go/internal/work.leakedBuilders *int }
noalg.struct { F uintptr; cmd/go/internal/work.libname *string }
noalg.struct { F uintptr; cmd/go/internal/work.newID *int; cmd/go/internal/work.root *cmd/go/internal/work.Action; c
noalg.struct { F uintptr; cmd/go/internal/work.oseq *int; cmd/go/internal/work.objdir string }
noalg.struct { F uintptr; cmd/go/internal/work.p *cmd/go/internal/load.Package; cmd/go/internal/work.b *cmd/go/inter
noalg.struct { F uintptr; cmd/go/internal/work.root *cmd/go/internal/work.Action }
noalg.struct { F uintptr; cmd/go/internal/work.seen map[*cmd/go/internal/work.Action]bool; cmd/go/internal/work.syso
noalg.struct { F uintptr; cmd/go/internal/work.seen map[*cmd/go/internal/work.Action]bool; cmd/go/internal/work.walk
noalg.struct { F uintptr; cmd/go/internal/work.tf *os.File }
noalg.struct { F uintptr; cmd/internal/browser.errc chan error; cmd/internal/browser.cmd *os/exec.Cmd }
noalg.struct { F uintptr; cmd/internal/buildid..autotmp_21 *debug/elf.File }
noalg.struct { F uintptr; cmd/internal/buildid..autotmp_36 *os.File }
noalg.struct { F uintptr; cmd/internal/buildid.name string }
noalg.struct { F uintptr; cmd/internal/buildid.name string; cmd/internal/buildid.f *os.File }
noalg.struct { F uintptr; cmd/internal/pkgpath..autotmp_14 string }
noalg.struct { F uintptr; cmd/internal/pkgpattern.pattern string; cmd/internal/pkgpattern.wildCard bool }
noalg.struct { F uintptr; cmd/internal/pkgpattern.vendorExclude bool; cmd/internal/pkgpattern.reg *regexp.Regexp }
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/modfile.block *cmd/vendor/golang.org/x/mod/modfile.LineBlock }
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/modfile.errs *cmd/vendor/golang.org/x/mod/modfile.ErrorList; c
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/modfile.f *cmd/vendor/golang.org/x/mod/modfile.File }
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/modfile.filename string; cmd/vendor/golang.org/x/mod/modfile.l
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/modfile.in *cmd/vendor/golang.org/x/mod/modfile.input; cmd/ven
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/modfile.less func(*cmd/vendor/golang.org/x/mod/modfile.Line, *
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/modfile.tokens []string; cmd/vendor/golang.org/x/mod/modfile.x
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/modfile.wrapError func(error) }
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/modfile.wrapError func(error) *cmd/vendor/golang.org/x/mod/mod
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/module.err *error; cmd/vendor/golang.org/x/mod/module.path str
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/module.list []cmd/vendor/golang.org/x/mod/module.Version }
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/sumdb..autotmp_10 func(int, cmd/vendor/golang.org/x/mod/sumdb/
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/sumdb..autotmp_4 *sync.WaitGroup }
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/sumdb.c *cmd/vendor/golang.org/x/mod/sumdb.Client }
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/sumdb.c *cmd/vendor/golang.org/x/mod/sumdb.Client; cmd/vendor/
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/sumdb/dirhash..autotmp_14 *archive/zip.ReadCloser }
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/sumdb/dirhash.dir string; cmd/vendor/golang.org/x/mod/sumdb/di
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/sumdb/dirhash.zfiles map[string]*archive/zip.File }
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/sumdb.err *error; cmd/vendor/golang.org/x/mod/sumdb.path strin
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/sumdb.errs []error; cmd/vendor/golang.org/x/mod/sumdb.i int }
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/sumdb/note.key []uint8 }
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/sumdb.wg *sync.WaitGroup; cmd/vendor/golang.org/x/mod/sumdb.er
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/zip..autotmp_15 io.ReadCloser }
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/zip..autotmp_33 *os.File }
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/zip.cf *cmd/vendor/golang.org/x/mod/zip.CheckedFiles }
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/zip.err *error }
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/zip.err *error; cmd/vendor/golang.org/x/mod/zip.zipFile string
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/zip.errPaths map[string]struct {}; cmd/vendor/golang.org/x/mod
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/zip.haveGoMod map[string]bool }
noalg.struct { F uintptr; cmd/vendor/golang.org/x/mod/zip.zw *archive/zip.Writer; cmd/vendor/golang.org/x/mod/zip.pr
noalg.struct { F uintptr; context..autotmp_13 *sync.Mutex }
noalg.struct { F uintptr; context..autotmp_3 *sync.Mutex }
noalg.struct { F uintptr; context..autotmp_6 *sync.Mutex }
noalg.struct { F uintptr; context.c *context.cancelCtx }
noalg.struct { F uintptr; context.c *context.timerCtx }
noalg.struct { F uintptr; context.c *context.timerCtx; context.cause error }
noalg.struct { F uintptr; context.child context.canceler; context.parent context.Context }
noalg.struct { F uintptr; context.parent context.Context; context.child context.canceler }
noalg.struct { F uintptr; crypto/ecdh.k *crypto/ecdh.PrivateKey }
noalg.struct { F uintptr; crypto/rand..autotmp_11 *time.Timer }
noalg.struct { F uintptr; crypto/rand.readMax int; crypto/rand.f func([]uint8) error }
noalg.struct { F uintptr; crypto/tls..autotmp_10 *sync.Mutex }
noalg.struct { F uintptr; crypto/tls..autotmp_10 *sync.RWMutex }
noalg.struct { F uintptr; crypto/tls..autotmp_11 *sync.Mutex }
noalg.struct { F uintptr; crypto/tls..autotmp_11 *sync.RWMutex }
noalg.struct { F uintptr; crypto/tls..autotmp_12 *sync.Mutex }
noalg.struct { F uintptr; crypto/tls..autotmp_12 *sync.RWMutex }
noalg.struct { F uintptr; crypto/tls..autotmp_13 *sync.Mutex }
noalg.struct { F uintptr; crypto/tls..autotmp_19 *sync/atomic.Int32 }
noalg.struct { F uintptr; crypto/tls..autotmp_20 *sync.Mutex }
noalg.struct { F uintptr; crypto/tls..autotmp_2 *sync.Mutex }
noalg.struct { F uintptr; crypto/tls..autotmp_2 *sync.RWMutex }
noalg.struct { F uintptr; crypto/tls..autotmp_3 *sync.Mutex }
noalg.struct { F uintptr; crypto/tls..autotmp_4 *sync.RWMutex }
noalg.struct { F uintptr; crypto/tls..autotmp_5 *sync.Mutex }
noalg.struct { F uintptr; crypto/tls..autotmp_5 *sync.RWMutex }
noalg.struct { F uintptr; crypto/tls.binder *[]uint8 }
noalg.struct { F uintptr; crypto/tls.ca *[]uint8 }
noalg.struct { F uintptr; crypto/tls.c *crypto/tls.cipherSuiteTLS13; crypto/tls.expMasterSecret []uint8 }
noalg.struct { F uintptr; crypto/tls.cert **crypto/x509.Certificate }
noalg.struct { F uintptr; crypto/tls.certificate crypto/tls.Certificate }
noalg.struct { F uintptr; crypto/tls.cert *[]uint8 }
noalg.struct { F uintptr; crypto/tls.chain *[]*crypto/x509.Certificate }
noalg.struct { F uintptr; crypto/tls.context []uint8 }
noalg.struct { F uintptr; crypto/tls.done chan struct {}; crypto/tls.interruptRes chan error; crypto/tls.ret *error 
noalg.struct { F uintptr; crypto/tls.ecdsaCipherSuite bool; crypto/tls.vers uint16 }
noalg.struct { F uintptr; crypto/tls.e *crypto/tls.cacheEntry; crypto/tls.cc *crypto/tls.certCache }
noalg.struct { F uintptr; crypto/tls.err *error; crypto/tls.c *crypto/tls.Conn }
noalg.struct { F uintptr; crypto/tls.extBytes []uint8 }
noalg.struct { F uintptr; crypto/tls.extra *[]uint8 }
noalg.struct { F uintptr; crypto/tls.handshakeCtx context.Context; crypto/tls.c *crypto/tls.Conn; crypto/tls.interru
noalg.struct { F uintptr; crypto/tls.hashFunc func() hash.Hash }
noalg.struct { F uintptr; crypto/tls.h func() hash.Hash }
noalg.struct { F uintptr; crypto/tls.i *int; crypto/tls.certificate crypto/tls.Certificate }
noalg.struct { F uintptr; crypto/tls.ks *crypto/tls.keyShare }
noalg.struct { F uintptr; crypto/tls.label string }
noalg.struct { F uintptr; crypto/tls.m *crypto/tls.certificateMsgTLS13 }
noalg.struct { F uintptr; crypto/tls.m *crypto/tls.certificateRequestMsgTLS13 }
noalg.struct { F uintptr; crypto/tls.m *crypto/tls.certificateStatusMsg }
noalg.struct { F uintptr; crypto/tls.m *crypto/tls.certificateVerifyMsg }
noalg.struct { F uintptr; crypto/tls.m *crypto/tls.clientHelloMsg }
noalg.struct { F uintptr; crypto/tls.m *crypto/tls.clientHelloMsg; crypto/tls.extBytes []uint8 }
noalg.struct { F uintptr; crypto/tls.m *crypto/tls.encryptedExtensionsMsg }
noalg.struct { F uintptr; crypto/tls.m *crypto/tls.finishedMsg }
noalg.struct { F uintptr; crypto/tls.m *crypto/tls.keyUpdateMsg }
noalg.struct { F uintptr; crypto/tls.m *crypto/tls.newSessionTicketMsgTLS13 }
noalg.struct { F uintptr; crypto/tls.m *crypto/tls.serverHelloMsg }
noalg.struct { F uintptr; crypto/tls.m *crypto/tls.serverHelloMsg; crypto/tls.extBytes []uint8 }
noalg.struct { F uintptr; crypto/tls.outBufPtr *[]uint8; crypto/tls.outBuf *[]uint8 }
noalg.struct { F uintptr; crypto/tls.proto *string }
noalg.struct { F uintptr; crypto/tls.psk *crypto/tls.pskIdentity }
noalg.struct { F uintptr; crypto/tls.s *crypto/tls.SessionState }
noalg.struct { F uintptr; crypto/tls.sct *[]uint8 }
noalg.struct { F uintptr; crypto/tls.serverRandom []uint8; crypto/tls.clientRandom []uint8; crypto/tls.version uint1
noalg.struct { F uintptr; crypto/tls.vers uint16 }
noalg.struct { F uintptr; crypto/tls.vers uint16; crypto/tls.c *crypto/tls.Certificate; crypto/tls.chi *crypto/tls.C
noalg.struct { F uintptr; crypto/tls.v []uint8; crypto/tls.n int }
noalg.struct { F uintptr; crypto/x509..autotmp_1 *sync.RWMutex }
noalg.struct { F uintptr; crypto/x509..autotmp_2 *sync.RWMutex }
noalg.struct { F uintptr; crypto/x509.c *crypto/x509.Certificate; crypto/x509.comparisonCount *int; crypto/x509.maxC
noalg.struct { F uintptr; crypto/x509.cert *crypto/x509.Certificate }
noalg.struct { F uintptr; crypto/x509.currentChain []*crypto/x509.Certificate; crypto/x509.sigChecks **int; crypto/x
noalg.struct { F uintptr; crypto/x509.emailAddresses *[]string; crypto/x509.dnsNames *[]string; crypto/x509.uris *[]
noalg.struct { F uintptr; crypto/x509.lazyCert *struct { sync.Once; crypto/x509.v *crypto/x509.Certificate }; crypto
noalg.struct { F uintptr; crypto/x509.unhandled *bool }
noalg.struct { F uintptr; debug/buildinfo..autotmp_8 *os.File }
noalg.struct { F uintptr; debug/buildinfo.bo encoding/binary.ByteOrder }
noalg.struct { F uintptr; debug/buildinfo.err *error; debug/buildinfo.name string }
noalg.struct { F uintptr; debug/dwarf.b *debug/dwarf.buf }
noalg.struct { F uintptr; debug/dwarf.d *debug/dwarf.Data; debug/dwarf.off debug/dwarf.Offset }
noalg.struct { F uintptr; debug/dwarf.e *debug/dwarf.Entry; debug/dwarf.r debug/dwarf.typeReader; debug/dwarf.err *e
noalg.struct { F uintptr; debug/dwarf.err *error; debug/dwarf.d *debug/dwarf.Data; debug/dwarf.name string; debug/dw
noalg.struct { F uintptr; debug/dwarf.fixer *debug/dwarf.typeFixer }
noalg.struct { F uintptr; debug/elf.f *debug/elf.File }
noalg.struct { F uintptr; debug/elf.s *debug/elf.Section; debug/elf.zrd func(io.Reader) (io.ReadCloser, error) }
noalg.struct { F uintptr; debug/pe.err *error; debug/pe.r io.ReadSeeker }
noalg.struct { F uintptr; debug/plan9obj.n *int }
noalg.struct { F uintptr; debug/plan9obj.syms *[]debug/plan9obj.Sym; debug/plan9obj.fname map[uint16]string }
noalg.struct { F uintptr; encoding/asn1.l [][]uint8 }
noalg.struct { F uintptr; encoding/json..autotmp_10 *sync.Pool; encoding/json..autotmp_11 interface {} }
noalg.struct { F uintptr; encoding/json..autotmp_11 *encoding/json.scanner }
noalg.struct { F uintptr; encoding/json..autotmp_12 *encoding/json.scanner }
noalg.struct { F uintptr; encoding/json..autotmp_15 map[interface {}]struct {}; encoding/json..autotmp_16 interface 
noalg.struct { F uintptr; encoding/json..autotmp_6 *sync.Pool; encoding/json..autotmp_7 interface {} }
noalg.struct { F uintptr; encoding/json..autotmp_8 map[interface {}]struct {}; encoding/json..autotmp_9 interface {}
noalg.struct { F uintptr; encoding/json.err *error }
noalg.struct { F uintptr; encoding/json.fields *[]encoding/json.field }
noalg.struct { F uintptr; encoding/json.sv []encoding/json.reflectWithString }
noalg.struct { F uintptr; encoding/json.wg *sync.WaitGroup; encoding/json.f *encoding/json.encoderFunc }
noalg.struct { F uintptr; flag.isZeroValueErrs *[]error; flag.f *flag.FlagSet }
noalg.struct { F uintptr; flag.result []*flag.Flag }
noalg.struct { F uintptr; flag.typ *reflect.Type; flag.err *error; flag.flag *flag.Flag }
noalg.struct { F uintptr; fmt..autotmp_16 *fmt.pp; fmt..autotmp_17 interface {}; fmt..autotmp_18 int32 }
noalg.struct { F uintptr; fmt..autotmp_19 *fmt.pp; fmt..autotmp_20 interface {}; fmt..autotmp_21 int32 }
noalg.struct { F uintptr; fmt..autotmp_22 *fmt.pp; fmt..autotmp_23 interface {}; fmt..autotmp_24 int32 }
noalg.struct { F uintptr; fmt..autotmp_25 *fmt.pp; fmt..autotmp_26 interface {}; fmt..autotmp_27 int32 }
noalg.struct { F uintptr; fmt..autotmp_6 *error }
noalg.struct { F uintptr; fmt.err *error }
noalg.struct { F uintptr; go/build.args *string; go/build.trimBytes func(int) }
noalg.struct { F uintptr; go/build.badGoError *error; go/build.badGoFiles map[string]bool; go/build.p *go/build.Pack
noalg.struct { F uintptr; go/build/constraint.err *error }
noalg.struct { F uintptr; go/build.ctxt *go/build.Context; go/build.allTags map[string]bool }
noalg.struct { F uintptr; go/build.ctxt *go/build.Context; go/build.p *go/build.Package; go/build.pkga *string; go/b
noalg.struct { F uintptr; go/build.ctxt *go/build.Context; go/build.srcDir string; go/build.path string; go/build.p 
noalg.struct { F uintptr; go/build.pos *go/token.Position; go/build.args *string }
noalg.struct { F uintptr; go/doc/comment.add func(go/doc/comment.score·1, go/doc/comment.score·1) go/doc/comment.sco
noalg.struct { F uintptr; go/doc/comment.c int; go/doc/comment.cmp func(go/doc/comment.score·1, go/doc/comment.score
noalg.struct { F uintptr; go/doc/comment.item **go/doc/comment.ListItem; go/doc/comment.d *go/doc/comment.parseDoc; 
noalg.struct { F uintptr; go/doc/comment.path string }
noalg.struct { F uintptr; go/doc.comments []*go/ast.CommentGroup }
noalg.struct { F uintptr; go/doc/comment.total []int; go/doc/comment.words []string; go/doc/comment.max int }
noalg.struct { F uintptr; go/doc/comment.words []string; go/doc/comment.cmp func(go/doc/comment.score·1, go/doc/comm
noalg.struct { F uintptr; go/doc/comment.writeUntil func(int); go/doc/comment.w *strings.Builder; go/doc/comment.out
noalg.struct { F uintptr; go/doc/comment.wrote *int; go/doc/comment.out *[]go/doc/comment.Text; go/doc/comment.d *go
noalg.struct { F uintptr; go/doc/comment.w *strings.Builder; go/doc/comment.s string; go/doc/comment.wrote *int }
noalg.struct { F uintptr; go/doc.decls []go/ast.Decl }
noalg.struct { F uintptr; go/doc.groupStarts []go/token.Pos }
noalg.struct { F uintptr; go/doc.has *bool }
noalg.struct { F uintptr; go/doc.imps []*go/ast.ImportSpec }
noalg.struct { F uintptr; go/doc.inspectFunc *func(go/ast.Node) bool }
noalg.struct { F uintptr; go/doc.list []*go/doc.Example }
noalg.struct { F uintptr; go/doc.unresolved map[string]bool; go/doc.topDecls map[*go/ast.Object]go/ast.Decl; go/doc.
noalg.struct { F uintptr; go/parser..autotmp_10 *go/parser.parser }
noalg.struct { F uintptr; go/parser..autotmp_11 *go/parser.parser }
noalg.struct { F uintptr; go/parser..autotmp_12 *go/parser.parser }
noalg.struct { F uintptr; go/parser..autotmp_14 *go/parser.parser }
noalg.struct { F uintptr; go/parser..autotmp_15 *go/parser.parser }
noalg.struct { F uintptr; go/parser..autotmp_16 *go/parser.parser }
noalg.struct { F uintptr; go/parser..autotmp_17 *go/parser.parser }
noalg.struct { F uintptr; go/parser..autotmp_19 *go/parser.parser }
noalg.struct { F uintptr; go/parser..autotmp_22 *go/parser.parser }
noalg.struct { F uintptr; go/parser..autotmp_24 *go/parser.parser }
noalg.struct { F uintptr; go/parser..autotmp_25 *go/parser.parser }
noalg.struct { F uintptr; go/parser..autotmp_2 *go/parser.parser }
noalg.struct { F uintptr; go/parser..autotmp_2 *go/parser.resolver }
noalg.struct { F uintptr; go/parser..autotmp_3 *go/parser.parser }
noalg.struct { F uintptr; go/parser..autotmp_41 *go/parser.resolver }
noalg.struct { F uintptr; go/parser..autotmp_42 *go/parser.resolver }
noalg.struct { F uintptr; go/parser..autotmp_43 *go/parser.resolver }
noalg.struct { F uintptr; go/parser..autotmp_44 *go/parser.resolver }
noalg.struct { F uintptr; go/parser..autotmp_45 *go/parser.resolver }
noalg.struct { F uintptr; go/parser..autotmp_46 *go/parser.resolver }
noalg.struct { F uintptr; go/parser..autotmp_47 *go/parser.resolver }
noalg.struct { F uintptr; go/parser..autotmp_48 *go/parser.resolver }
noalg.struct { F uintptr; go/parser..autotmp_49 *go/parser.resolver }
noalg.struct { F uintptr; go/parser..autotmp_4 *go/parser.parser }
noalg.struct { F uintptr; go/parser..autotmp_50 *go/parser.resolver }
noalg.struct { F uintptr; go/parser..autotmp_51 *go/parser.resolver }
noalg.struct { F uintptr; go/parser..autotmp_52 *go/parser.resolver }
noalg.struct { F uintptr; go/parser..autotmp_53 *go/parser.resolver }
noalg.struct { F uintptr; go/parser..autotmp_54 *go/parser.resolver }
noalg.struct { F uintptr; go/parser..autotmp_55 *go/parser.resolver }
noalg.struct { F uintptr; go/parser..autotmp_56 *go/parser.resolver }
noalg.struct { F uintptr; go/parser..autotmp_5 *go/parser.parser }
noalg.struct { F uintptr; go/parser..autotmp_6 *go/parser.parser }
noalg.struct { F uintptr; go/parser..autotmp_7 *go/parser.parser }
noalg.struct { F uintptr; go/parser..autotmp_8 *go/parser.parser }
noalg.struct { F uintptr; go/parser..autotmp_9 *go/parser.parser }
noalg.struct { F uintptr; go/parser.p *go/parser.parser }
noalg.struct { F uintptr; go/parser.p *go/parser.parser; go/parser.f **go/ast.File; go/parser.err *error }
noalg.struct { F uintptr; go/parser.p *go/parser.parser; go/parser.n *int }
noalg.struct { F uintptr; go/parser.res *go/token.Pos; go/parser.p *go/parser.parser }
noalg.struct { F uintptr; go/parser.typ *go/ast.Expr; go/parser.names *[]*go/ast.Ident; go/parser.params *[]*go/ast.
noalg.struct { F uintptr; go/token.a []*go/token.File; go/token.x int }
noalg.struct { F uintptr; go/token.a []go/token.lineInfo; go/token.x int }
noalg.struct { F uintptr; go/token..autotmp_2 *sync.Mutex }
noalg.struct { F uintptr; go/token..autotmp_3 *sync.Mutex }
noalg.struct { F uintptr; go/token..autotmp_6 *sync.RWMutex }
noalg.struct { F uintptr; internal/buildcfg.flags *internal/buildcfg.ExperimentFlags }
noalg.struct { F uintptr; internal/godebug..autotmp_3 *sync.Mutex }
noalg.struct { F uintptr; internal/godebug.did map[string]bool }
noalg.struct { F uintptr; internal/godebug.s *internal/godebug.Setting }
noalg.struct { F uintptr; internal/intern..autotmp_1 *sync.Mutex }
noalg.struct { F uintptr; internal/intern..autotmp_7 *sync.Mutex }
noalg.struct { F uintptr; internal/poll..autotmp_10 *internal/poll.FD }
noalg.struct { F uintptr; internal/poll..autotmp_11 *internal/poll.FD }
noalg.struct { F uintptr; internal/poll..autotmp_12 *internal/poll.FD }
noalg.struct { F uintptr; internal/poll..autotmp_13 *internal/poll.FD }
noalg.struct { F uintptr; internal/poll..autotmp_15 *internal/poll.FD }
noalg.struct { F uintptr; internal/poll..autotmp_16 *internal/poll.FD }
noalg.struct { F uintptr; internal/poll..autotmp_18 *internal/poll.splicePipe }
noalg.struct { F uintptr; internal/poll..autotmp_19 *internal/poll.FD }
noalg.struct { F uintptr; internal/poll..autotmp_21 *internal/poll.FD }
noalg.struct { F uintptr; internal/poll..autotmp_3 *internal/poll.FD }
noalg.struct { F uintptr; internal/poll..autotmp_4 *internal/poll.FD }
noalg.struct { F uintptr; internal/poll..autotmp_5 *internal/poll.FD }
noalg.struct { F uintptr; internal/poll..autotmp_6 *internal/poll.FD }
noalg.struct { F uintptr; internal/poll..autotmp_7 *internal/poll.FD }
noalg.struct { F uintptr; internal/poll..autotmp_8 *internal/poll.FD }
noalg.struct { F uintptr; internal/poll..autotmp_8 *sync.RWMutex }
noalg.struct { F uintptr; internal/poll..autotmp_9 *internal/poll.FD }
noalg.struct { F uintptr; internal/poll.fd *internal/poll.FD }
noalg.struct { F uintptr; internal/poll.fd *internal/poll.FD; internal/poll.mode uint32 }
noalg.struct { F uintptr; internal/poll.fd *internal/poll.FD; internal/poll.size int64 }
noalg.struct { F uintptr; internal/poll.fd *internal/poll.FD; internal/poll.s *syscall.Stat_t }
noalg.struct { F uintptr; internal/poll.fd *internal/poll.FD; internal/poll.uid int; internal/poll.gid int }
noalg.struct { F uintptr; internal/reflectlite.is []int16 }
noalg.struct { F uintptr; internal/reflectlite.is []int32 }
noalg.struct { F uintptr; internal/reflectlite.is []int64 }
noalg.struct { F uintptr; internal/reflectlite.is []int8 }
noalg.struct { F uintptr; internal/reflectlite.ps []unsafe.Pointer }
noalg.struct { F uintptr; internal/reflectlite.s *internal/unsafeheader.Slice; internal/reflectlite.size uintptr; in
noalg.struct { F uintptr; internal/reflectlite.ss []string }
noalg.struct { F uintptr; internal/singleflight..autotmp_10 *internal/singleflight.Group; internal/singleflight..aut
noalg.struct { F uintptr; internal/singleflight..autotmp_7 *sync.Mutex }
noalg.struct { F uintptr; internal/testlog..autotmp_1 *sync.Mutex }
noalg.struct { F uintptr; internal/zstd.huffBits uint32; internal/zstd.huffMask uint32; internal/zstd.huffTable []ui
noalg.struct { F uintptr; log..autotmp_23 *[]uint8 }
noalg.struct { F uintptr; log..autotmp_24 *sync.Mutex }
noalg.struct { F uintptr; log..autotmp_2 *sync.Mutex }
noalg.struct { F uintptr; log.data []uint8 }
noalg.struct { F uintptr; log.format string; log.v []interface {} }
noalg.struct { F uintptr; log.s string }
noalg.struct { F uintptr; main.close func() error }
noalg.struct { F uintptr; main.cmd *cmd/go/internal/base.Command }
noalg.struct { F uintptr; mime..autotmp_10 *os.File }
noalg.struct { F uintptr; mime..autotmp_13 *os.File }
noalg.struct { F uintptr; mime..autotmp_16 *sync.Mutex }
noalg.struct { F uintptr; mime/multipart.file **os.File; mime/multipart.err *error; mime/multipart.combineFiles bool
noalg.struct { F uintptr; net..autotmp_11 *net.file }
noalg.struct { F uintptr; net..autotmp_12 *sync.RWMutex }
noalg.struct { F uintptr; net..autotmp_14 *net.file }
noalg.struct { F uintptr; net..autotmp_15 func(int) error; net..autotmp_16 int }
noalg.struct { F uintptr; net..autotmp_19 *net._Ctype_struct_addrinfo }
noalg.struct { F uintptr; net..autotmp_20 *net._Ctype_struct_addrinfo }
noalg.struct { F uintptr; net..autotmp_23 chan struct {} }
noalg.struct { F uintptr; net..autotmp_24 func(context.Context, bool); net..autotmp_25 context.Context }
noalg.struct { F uintptr; net..autotmp_24 *net.file }
noalg.struct { F uintptr; net..autotmp_25 *net.file }
noalg.struct { F uintptr; net..autotmp_26 *internal/poll.FD; net..autotmp_27 time.Time }
noalg.struct { F uintptr; net..autotmp_26 *time.Timer }
noalg.struct { F uintptr; net..autotmp_27 func(context.Context, bool); net..autotmp_28 context.Context }
noalg.struct { F uintptr; net..autotmp_2 func(vendor/golang.org/x/net/dns/dnsmessage.Type); net..autotmp_3 vendor/go
noalg.struct { F uintptr; net..autotmp_31 *net.file }
noalg.struct { F uintptr; net..autotmp_36 *net.file }
noalg.struct { F uintptr; net..autotmp_42 func(<-chan internal/singleflight.Result, context.CancelFunc); net..autotm
noalg.struct { F uintptr; net..autotmp_45 func(<-chan internal/singleflight.Result, context.CancelFunc); net..autotm
noalg.struct { F uintptr; net..autotmp_8 *net.nsswitchConfig }
noalg.struct { F uintptr; net..autotmp_9 *net.resolverConfig }
noalg.struct { F uintptr; net..autotmp_9 *sync.Mutex }
noalg.struct { F uintptr; net..autotmp_9 *sync.WaitGroup }
noalg.struct { F uintptr; net.blocking func() (go.shape.int, error); net.res chan net.result[go.shape.int]·1; net..d
noalg.struct { F uintptr; net.blocking func() (go.shape.[]net.IPAddr, error); net.res chan net.result[go.shape.[]net
noalg.struct { F uintptr; net.c *[]net.nssCriterion }
noalg.struct { F uintptr; net.ctxDone <-chan struct {}; net.fd *net.netFD; net.interruptRes chan error; net.ctx cont
noalg.struct { F uintptr; net.debugLevel *int; net.dnsMode *string }
noalg.struct { F uintptr; net.done chan struct {}; net.interruptRes chan error; net.ret *error; net.fd *net.netFD }
noalg.struct { F uintptr; net.hints *net._Ctype_struct_addrinfo; net.network string; net.service string }
noalg.struct { F uintptr; net.hostname string; net.ret *net.hostLookupOrder }
noalg.struct { F uintptr; net/http..autotmp_0 *sync.Mutex }
noalg.struct { F uintptr; net/http..autotmp_10 *sync.Mutex }
noalg.struct { F uintptr; net/http..autotmp_11 *net/http.http2addConnCall; net/http..autotmp_12 *net/http.http2Trans
noalg.struct { F uintptr; net/http..autotmp_11 *sync.Mutex }
noalg.struct { F uintptr; net/http..autotmp_12 *sync.Mutex }
noalg.struct { F uintptr; net/http..autotmp_13 *sync.Mutex }
noalg.struct { F uintptr; net/http..autotmp_14 *net/http.http2clientStream; net/http..autotmp_15 *net/http.Request }
noalg.struct { F uintptr; net/http..autotmp_14 *net/http.persistConn }
noalg.struct { F uintptr; net/http..autotmp_14 *sync.Mutex }
noalg.struct { F uintptr; net/http..autotmp_14 *time.Timer }
noalg.struct { F uintptr; net/http..autotmp_16 *net/http.http2ClientConn }
noalg.struct { F uintptr; net/http..autotmp_16 *sync.Mutex }
noalg.struct { F uintptr; net/http..autotmp_1 *sync.Mutex }
noalg.struct { F uintptr; net/http..autotmp_20 *vendor/golang.org/x/net/http2/hpack.Decoder; net/http..autotmp_21 fu
noalg.struct { F uintptr; net/http..autotmp_22 chan struct {} }
noalg.struct { F uintptr; net/http..autotmp_23 chan struct {} }
noalg.struct { F uintptr; net/http..autotmp_23 *time.Timer }
noalg.struct { F uintptr; net/http..autotmp_27 *time.Timer }
noalg.struct { F uintptr; net/http..autotmp_2 *sync.Mutex }
noalg.struct { F uintptr; net/http..autotmp_2 *time.Timer }
noalg.struct { F uintptr; net/http..autotmp_36 *sync.Pool; net/http..autotmp_37 interface {} }
noalg.struct { F uintptr; net/http..autotmp_38 *sync.Pool; net/http..autotmp_39 interface {} }
noalg.struct { F uintptr; net/http..autotmp_3 chan struct {} }
noalg.struct { F uintptr; net/http..autotmp_3 func(io.Reader); net/http..autotmp_4 io.Reader }
noalg.struct { F uintptr; net/http..autotmp_3 *sync.Mutex }
noalg.struct { F uintptr; net/http..autotmp_40 *sync.Mutex }
noalg.struct { F uintptr; net/http..autotmp_41 net.Conn; net/http..autotmp_42 time.Time }
noalg.struct { F uintptr; net/http..autotmp_4 *net/http.http2ClientConn }
noalg.struct { F uintptr; net/http..autotmp_4 *net/http.Transport; net/http..autotmp_5 *net/http.wantConn }
noalg.struct { F uintptr; net/http..autotmp_4 *sync.Mutex }
noalg.struct { F uintptr; net/http..autotmp_5 *net/http.http2ClientConn }
noalg.struct { F uintptr; net/http..autotmp_5 *sync.Cond }
noalg.struct { F uintptr; net/http..autotmp_5 *sync.Mutex }
noalg.struct { F uintptr; net/http..autotmp_5 *time.Timer }
noalg.struct { F uintptr; net/http..autotmp_66 net.Conn }
noalg.struct { F uintptr; net/http..autotmp_67 *net/http.persistConn }
noalg.struct { F uintptr; net/http..autotmp_68 *net/http.persistConn }
noalg.struct { F uintptr; net/http..autotmp_6 chan struct {} }
noalg.struct { F uintptr; net/http..autotmp_6 *net/http.http2clientConnReadLoop }
noalg.struct { F uintptr; net/http..autotmp_6 *sync.Mutex }
noalg.struct { F uintptr; net/http..autotmp_7 *net/http.Transport; net/http..autotmp_8 *net/http.wantConn }
noalg.struct { F uintptr; net/http..autotmp_7 *sync.Cond }
noalg.struct { F uintptr; net/http..autotmp_7 *sync.Mutex }
noalg.struct { F uintptr; net/http..autotmp_8 chan struct {} }
noalg.struct { F uintptr; net/http..autotmp_8 *crypto/tls.Conn }
noalg.struct { F uintptr; net/http..autotmp_8 *sync.Mutex }
noalg.struct { F uintptr; net/http..autotmp_9 *crypto/tls.Conn }
noalg.struct { F uintptr; net/http..autotmp_9 *net/http.http2dialCall; net/http..autotmp_10 context.Context; net/htt
noalg.struct { F uintptr; net/http.buf []uint8 }
noalg.struct { F uintptr; net/http.cancelc chan error }
noalg.struct { F uintptr; net/http.cancel chan struct {}; net/http.rt net/http.RoundTripper; net/http.req *net/http.
noalg.struct { F uintptr; net/http.cc *net/http.http2ClientConn; net/http.done chan struct {}; net/http.cancelled *b
noalg.struct { F uintptr; net/http.cc *net/http.http2ClientConn; net/http.p *[8]uint8; net/http.errc chan error }
noalg.struct { F uintptr; net/http.cc *net/http.http2ClientConn; net/http.seenMaxConcurrentStreams *bool }
noalg.struct { F uintptr; net/http.cc *net/http.http2ClientConn; net/http.traceHeaders bool; net/http.trace *net/htt
noalg.struct { F uintptr; net/http.closed *bool; net/http.r *net/http.Request; net/http.err *error }
noalg.struct { F uintptr; net/http.closed *bool; net/http.t *net/http.transferWriter; net/http.err *error }
noalg.struct { F uintptr; net/http.cm *net/http.connectMethod }
noalg.struct { F uintptr; net/http.c *net/http.Client; net/http.icookies map[string][]*net/http.Cookie; net/http.ire
noalg.struct { F uintptr; net/http.connPool *net/http.http2clientConnPool; net/http.t2 *net/http.http2Transport }
noalg.struct { F uintptr; net/http.cs *net/http.http2clientStream; net/http.ctx context.Context }
noalg.struct { F uintptr; net/http.cs *net/http.http2clientStream; net/http.err error }
noalg.struct { F uintptr; net/http.cs *net/http.http2clientStream; net/http.reqBodyClosed chan struct {} }
noalg.struct { F uintptr; net/http.cs *net/http.http2clientStream; net/http.req *net/http.Request; net/http.cc *net/
noalg.struct { F uintptr; net/http.ctx context.Context; net/http.c net.Conn; net/http.errCh chan error; net/http.don
noalg.struct { F uintptr; net/http.deadline time.Time }
noalg.struct { F uintptr; net/http.didReadResponse chan struct {}; net/http.err *error; net/http.connectReq *net/htt
noalg.struct { F uintptr; net/http.done chan struct {}; net/http.ctxErr *error; net/http.errCh chan error }
noalg.struct { F uintptr; net/http.errc chan error }
noalg.struct { F uintptr; net/http.err *error }
noalg.struct { F uintptr; net/http.err *error; net/http.pc *net/http.persistConn; net/http.req *net/http.transportRe
noalg.struct { F uintptr; net/http.err *error; net/http.trailer net/http.Header }
noalg.struct { F uintptr; net/http.err *error; net/http.w *net/http.wantConn; net/http.t *net/http.Transport }
noalg.struct { F uintptr; net/http.fr *net/http.http2Framer }
noalg.struct { F uintptr; net/http.fr *net/http.http2Framer; net/http.invalid *error; net/http.sawRegular *bool; net
noalg.struct { F uintptr; net/http.hlSize *uint64 }
noalg.struct { F uintptr; net/http.host string; net/http.req *net/http.Request; net/http.path string; net/http.trail
noalg.struct { F uintptr; net/http.initialReqCancel <-chan struct {}; net/http.doCancel func(); net/http.timer *time
noalg.struct { F uintptr; net/http.ireq *net/http.Request; net/http.req **net/http.Request }
noalg.struct { F uintptr; net/http.n *int; net/http.buf *bytes.Buffer }
noalg.struct { F uintptr; net/http.once *sync.Once; net/http.stopTimerCh chan struct {}; net/http.cancelCtx func() }
noalg.struct { F uintptr; net/http.pa string }
noalg.struct { F uintptr; net/http.pc *net/http.persistConn; net/http.closeErr *error }
noalg.struct { F uintptr; net/http.pc *net/http.persistConn; net/http.continueCh <-chan struct {} }
noalg.struct { F uintptr; net/http.reqBodyClosed *bool; net/http.req **net/http.Request; net/http.resp **net/http.Re
noalg.struct { F uintptr; net/http.retres **net/http.Response; net/http.reterr *error }
noalg.struct { F uintptr; net/http.snapshot bytes.Reader }
noalg.struct { F uintptr; net/http.snapshot strings.Reader }
noalg.struct { F uintptr; net/http.stopTimerCh chan struct {}; net/http.cancelCtx func() }
noalg.struct { F uintptr; net/http.t net/http.Header }
noalg.struct { F uintptr; net/http.t *net/http.transferWriter }
noalg.struct { F uintptr; net/http.trace *net/http/httptrace.ClientTrace; net/http.err *error }
noalg.struct { F uintptr; net/http.trace *net/http/httptrace.ClientTrace; net/http.tlsConn *crypto/tls.Conn; net/htt
noalg.struct { F uintptr; net/http.waitForBodyRead chan bool; net/http.eofc chan struct {} }
noalg.struct { F uintptr; net/http.waitForBodyRead chan bool; net/http.eofc chan struct {}; net/http.pc *net/http.pe
noalg.struct { F uintptr; net.lane chan net.result·3 }
noalg.struct { F uintptr; net.lookupGroupCtx context.Context; net.resolverFunc func(context.Context, string, string)
noalg.struct { F uintptr; net.net string; net.portnum int }
noalg.struct { F uintptr; net.network string; net.name string }
noalg.struct { F uintptr; net.oldCancel <-chan struct {}; net.cancel context.CancelFunc; net.subCtx context.Context 
noalg.struct { F uintptr; net.primaries net.addrList; net.fallbacks net.addrList; net.sd *net.sysDialer; net.results
noalg.struct { F uintptr; net.r *net.Resolver; net.ctx context.Context; net.conf *net.dnsConfig }
noalg.struct { F uintptr; net.r *net.Resolver; net.ctx context.Context; net.conf *net.dnsConfig; net.fqdn string; ne
noalg.struct { F uintptr; net.r *net.Resolver; net.ctx context.Context; net.conf *net.dnsConfig; net.lane chan net.r
noalg.struct { F uintptr; net.sd *net.sysDialer }
noalg.struct { F uintptr; net.trace *internal/nettrace.Trace; net.sd *net.sysDialer; net.raStr string; net.err *erro
noalg.struct { F uintptr; net.written *int64; net.werr *error; net.handled *bool; net.c *net.netFD; net.remain int64
noalg.struct { F uintptr; os..autotmp_10 *os.File }
noalg.struct { F uintptr; os..autotmp_12 *os.File }
noalg.struct { F uintptr; os..autotmp_15 *os.File }
noalg.struct { F uintptr; os..autotmp_19 *os.File }
noalg.struct { F uintptr; os..autotmp_8 *sync.RWMutex }
noalg.struct { F uintptr; os.dirs []io/fs.DirEntry }
noalg.struct { F uintptr; os/exec..autotmp_26 func(func() error); os/exec..autotmp_27 func() error }
noalg.struct { F uintptr; os/exec..autotmp_28 *os/exec.Cmd; os/exec..autotmp_29 chan<- os/exec.ctxResult }
noalg.struct { F uintptr; os/exec.cmd *os/exec.Cmd }
noalg.struct { F uintptr; os/exec.c *os/exec.Cmd; os/exec.started *bool }
noalg.struct { F uintptr; os/exec.pw *os.File; os/exec.c *os/exec.Cmd }
noalg.struct { F uintptr; os/exec.statusc chan os/exec.goroutineStatus·1; os/exec.goroutineErr chan error }
noalg.struct { F uintptr; os/exec.timer **time.Timer; os/exec.c *os/exec.Cmd }
noalg.struct { F uintptr; os/exec.w io.Writer; os/exec.pr *os.File }
noalg.struct { F uintptr; os.longName string; os.mode io/fs.FileMode }
noalg.struct { F uintptr; os.longName string; os.perm io/fs.FileMode }
noalg.struct { F uintptr; os.name string }
noalg.struct { F uintptr; os.name string; os.fs *os.fileStat }
noalg.struct { F uintptr; os.oldname string; os.newname string }
noalg.struct { F uintptr; os.parentFd int; os.base string }
noalg.struct { F uintptr; os.parentFd int; os.base string; os.statInfo *syscall.Stat_t }
noalg.struct { F uintptr; os/signal..autotmp_5 *sync.Mutex }
noalg.struct { F uintptr; os/signal..autotmp_6 *sync.Mutex }
noalg.struct { F uintptr; os/signal.h *os/signal.handler }
noalg.struct { F uintptr; os.utimes *[2]syscall.Timespec }
noalg.struct { F uintptr; path/filepath..autotmp_20 *os.File }
noalg.struct { F uintptr; path/filepath.dirs []io/fs.DirEntry }
noalg.struct { F uintptr; R *cmd/go/internal/generate.Generator }
noalg.struct { F uintptr; R *cmd/go/internal/modfetch.dbClient }
noalg.struct { F uintptr; R *cmd/go/internal/modget.resolver }
noalg.struct { F uintptr; R *cmd/go/internal/modload.ModuleGraph }
noalg.struct { F uintptr; R *cmd/go/internal/test.runCache }
noalg.struct { F uintptr; R *cmd/go/internal/trace.tracer }
noalg.struct { F uintptr; R cmd/go/internal/work.toolchain }
noalg.struct { F uintptr; R *cmd/internal/test2json.Converter }
noalg.struct { F uintptr; R *cmd/internal/test2json.lineBuffer }
noalg.struct { F uintptr; R *cmd/vendor/golang.org/x/mod/internal/lazyregexp.Regexp }
noalg.struct { F uintptr; R *cmd/vendor/golang.org/x/mod/sumdb.Client }
noalg.struct { F uintptr; R crypto.Hash }
noalg.struct { F uintptr; R *crypto/tls.Conn }
noalg.struct { F uintptr; reflect..autotmp_29 *sync.Mutex }
noalg.struct { F uintptr; reflect..autotmp_3 *sync.Mutex }
noalg.struct { F uintptr; reflect..autotmp_76 *sync.Mutex }
noalg.struct { F uintptr; reflect.hash uint32 }
noalg.struct { F uintptr; reflect.ifield int; reflect.imethod int }
noalg.struct { F uintptr; reflect.length int; reflect.esize uintptr; reflect.eequal func(unsafe.Pointer, unsafe.Poin
noalg.struct { F uintptr; reflect.name string }
noalg.struct { F uintptr; reflect.typ *reflect.structType }
noalg.struct { F uintptr; reflect.x *internal/abi.Type }
noalg.struct { F uintptr; regexp.ix *int; regexp.merged *[]int32; regexp.next *[]uint32 }
noalg.struct { F uintptr; regexp.ok *bool; regexp.merged *[]int32; regexp.next *[]uint32 }
noalg.struct { F uintptr; regexp.p **regexp.onePassProg; regexp.visitQueue *regexp.queueOnePass; regexp.check *func(
noalg.struct { F uintptr; regexp.repl func(string) string; regexp.src string }
noalg.struct { F uintptr; regexp.repl func([]uint8) []uint8; regexp.src []uint8 }
noalg.struct { F uintptr; regexp.repl string }
noalg.struct { F uintptr; regexp.repl []uint8 }
noalg.struct { F uintptr; regexp.re *regexp.Regexp; regexp.repl string; regexp.src string }
noalg.struct { F uintptr; regexp.result *[][]int }
noalg.struct { F uintptr; regexp.result *[][]string; regexp.s string }
noalg.struct { F uintptr; regexp.result *[]string; regexp.s string }
noalg.struct { F uintptr; regexp.result *[][][]uint8; regexp.b []uint8 }
noalg.struct { F uintptr; regexp.result *[][]uint8; regexp.b []uint8 }
noalg.struct { F uintptr; regexp.srepl *string; regexp.repl []uint8; regexp.re *regexp.Regexp; regexp.src []uint8 }
noalg.struct { F uintptr; regexp/syntax.err *error; regexp/syntax.s string }
noalg.struct { F uintptr; R encoding/binary.ByteOrder }
noalg.struct { F uintptr; R encoding/json.arrayEncoder }
noalg.struct { F uintptr; R encoding/json.condAddrEncoder }
noalg.struct { F uintptr; R encoding/json.floatEncoder }
noalg.struct { F uintptr; R encoding/json.mapEncoder }
noalg.struct { F uintptr; R encoding/json.ptrEncoder }
noalg.struct { F uintptr; R encoding/json.sliceEncoder }
noalg.struct { F uintptr; R encoding/json.structEncoder }
noalg.struct { F uintptr; R *flag.FlagSet }
noalg.struct { F uintptr; R *go/doc.Package }
noalg.struct { F uintptr; R *go/parser.parser }
noalg.struct { F uintptr; R *internal/godebug.Setting }
noalg.struct { F uintptr; R *internal/goroot.gccgoDirs }
noalg.struct { F uintptr; R *internal/lazyregexp.Regexp }
noalg.struct { F uintptr; R *internal/lazytemplate.Template }
noalg.struct { F uintptr; R io.WriteCloser }
noalg.struct { F uintptr; R *net.Dialer }
noalg.struct { F uintptr; R *net/http.http2ClientConn }
noalg.struct { F uintptr; R *net/http.http2clientStream }
noalg.struct { F uintptr; R *net/http.http2Transport }
noalg.struct { F uintptr; R *net/http.persistConn }
noalg.struct { F uintptr; R *net/http.socksUsernamePassword }
noalg.struct { F uintptr; R *net/http.Transport }
noalg.struct { F uintptr; R *net.ipStackCapabilities }
noalg.struct { F uintptr; R *net.nsswitchConfig }
noalg.struct { F uintptr; R *net.Resolver }
noalg.struct { F uintptr; R *net.resolverConfig }
noalg.struct { F uintptr; R reflect.Value }
noalg.struct { F uintptr; R *runtime.itabTableType }
noalg.struct { F uintptr; R runtime.metricReader }
noalg.struct { F uintptr; R *strings.Replacer }
noalg.struct { F uintptr; R *sync/atomic.Bool }
noalg.struct { F uintptr; R *sync/atomic.Uint64 }
noalg.struct { F uintptr; runtime.addrRangeToSummaryRange func(int, runtime.addrRange) (int, int); runtime.summaryRa
noalg.struct { F uintptr; runtime.addr *uint32; runtime.ret int32 }
noalg.struct { F uintptr; runtime.addr unsafe.Pointer; runtime.n uintptr }
noalg.struct { F uintptr; runtime.argp unsafe.Pointer; runtime.isLive func(uint8, uint8) bool }
noalg.struct { F uintptr; runtime..autotmp_10 func(*runtime.g); runtime..autotmp_11 *runtime.g }
noalg.struct { F uintptr; runtime..autotmp_12 *bool }
noalg.struct { F uintptr; runtime.bufp *runtime.traceBufPtr }
noalg.struct { F uintptr; runtime.buf **runtime.traceBuf; runtime.pid int32 }
noalg.struct { F uintptr; runtime.buf **runtime.traceBuf; runtime.pid int32; runtime.bufp *runtime.traceBufPtr }
noalg.struct { F uintptr; runtime.buf []uint8; runtime.gp *runtime.g; runtime.pc uintptr; runtime.sp uintptr; runtim
noalg.struct { F uintptr; runtime.buf *[]uint8; runtime.park *bool }
noalg.struct { F uintptr; runtime.caughtPanic *bool }
noalg.struct { F uintptr; runtime.c *runtime.hchan }
noalg.struct { F uintptr; runtime.c **runtime.mcache }
noalg.struct { F uintptr; runtime.c *runtime.mcache }
noalg.struct { F uintptr; runtime/debug.buf *strings.Builder; runtime/debug.formatMod *func(string, runtime/debug.Mo
noalg.struct { F uintptr; runtime/debug.err *error; runtime/debug.lineNum *int }
noalg.struct { F uintptr; runtime.e *runtime.eface }
noalg.struct { F uintptr; runtime.e *runtime.eface; runtime.f *runtime.eface; runtime.nret uintptr; runtime.fint *in
noalg.struct { F uintptr; runtime.firstFree *struct { runtime.base runtime.offAddr; runtime.bound runtime.offAddr } 
noalg.struct { F uintptr; runtime.fn *runtime.funcval; runtime.gp *runtime.g; runtime.pc uintptr }
noalg.struct { F uintptr; runtime.frame *runtime.stkframe; runtime.bad uintptr }
noalg.struct { F uintptr; runtime.freem **runtime.m }
noalg.struct { F uintptr; runtime.gp1 *runtime.g; runtime.offset int }
noalg.struct { F uintptr; runtime.gp *runtime.g }
noalg.struct { F uintptr; runtime.gp *runtime.g; runtime.callerpc uintptr; runtime.dispatch uintptr; runtime.lockedm
noalg.struct { F uintptr; runtime.gp *runtime.g; runtime.pc uintptr; runtime.sp uintptr }
noalg.struct { F uintptr; runtime.gp *runtime.g; runtime.pp *runtime.p }
noalg.struct { F uintptr; runtime.gp *runtime.g; runtime.reason runtime.stwReason }
noalg.struct { F uintptr; runtime.gp *runtime.g; runtime.scanWork int64 }
noalg.struct { F uintptr; runtime.gp *runtime.g; runtime.traceskip int }
noalg.struct { F uintptr; runtime.gp *runtime.g; runtime.workDone *int64; runtime.gcw *runtime.gcWork }
noalg.struct { F uintptr; runtime.grunning *int }
noalg.struct { F uintptr; runtime.h *runtime.mheap; runtime.npages uintptr; runtime.s **runtime.mspan; runtime.spanc
noalg.struct { F uintptr; runtime.i *int }
noalg.struct { F uintptr; runtime.info *runtime.vdsoInfo; runtime.version int32 }
noalg.struct { F uintptr; runtime.liveInfo unsafe.Pointer; runtime.liveIdx int32; runtime.startOffset uint8 }
noalg.struct { F uintptr; runtime.me *runtime.g; runtime.curgp *runtime.g; runtime.level int32 }
noalg.struct { F uintptr; runtime.msgs *runtime._panic; runtime.docrash *bool; runtime.gp *runtime.g; runtime.pc uin
noalg.struct { F uintptr; runtime.needUnlock *bool }
noalg.struct { F uintptr; runtime.newg *runtime.g; runtime.stacksize int32 }
noalg.struct { F uintptr; runtime.now *int64 }
noalg.struct { F uintptr; runtime.ok *bool }
noalg.struct { F uintptr; runtime.ok *bool; runtime.oldp *runtime.p; runtime.gp *runtime.g }
noalg.struct { F uintptr; runtime.oldval uint32; runtime.newval uint32 }
noalg.struct { F uintptr; runtime.pc *uintptr; runtime.ret *string }
noalg.struct { F uintptr; runtime.pc uintptr; runtime.sp uintptr; runtime.gp *runtime.g }
noalg.struct { F uintptr; runtime.pc uintptr; runtime.sp uintptr; runtime.gp *runtime.g; runtime.n *int; runtime.ski
noalg.struct { F uintptr; runtime.pc uintptr; runtime.sp unsafe.Pointer; runtime.gp *runtime.g; runtime.prevDefer *r
noalg.struct { F uintptr; runtime.pp *runtime.p }
noalg.struct { F uintptr; runtime.preemptible bool }
noalg.struct { F uintptr; runtime.p **runtime.notInHeap; runtime.size uintptr; runtime.align uintptr; runtime.sysSta
noalg.struct { F uintptr; runtime.p *runtime.pageAlloc }
noalg.struct { F uintptr; runtime.p unsafe.Pointer; runtime.b *runtime.bucket }
noalg.struct { F uintptr; runtime.released *uintptr; runtime.p *runtime.pageAlloc; runtime.ci runtime.chunkIdx; runt
noalg.struct { F uintptr; runtime.restart *bool }
noalg.struct { F uintptr; runtime.ret *int32; runtime.sig *uint32; runtime.new *runtime.sigactiont; runtime.old *run
noalg.struct { F uintptr; runtime.ret *uintptr; runtime.addr unsafe.Pointer; runtime.n uintptr; runtime.prot int32; 
noalg.struct { F uintptr; runtime.rw *runtime.rwmutex }
noalg.struct { F uintptr; runtime.rw *runtime.rwmutex; runtime.m *runtime.m }
noalg.struct { F uintptr; runtime.scases []runtime.scase; runtime.lockorder []uint16 }
noalg.struct { F uintptr; runtime.skip *int; runtime.max *int; runtime.n *int; runtime.lastN *int }
noalg.struct { F uintptr; runtime.skip *uintptr; runtime.newPCBuf *[]uintptr }
noalg.struct { F uintptr; runtime.sp1 uintptr; runtime.sp2 uintptr; runtime.sp3 uintptr; runtime.gp *runtime.g }
noalg.struct { F uintptr; runtime.sp uintptr; runtime.gp *runtime.g }
noalg.struct { F uintptr; runtime.s **runtime.mspan }
noalg.struct { F uintptr; runtime.s *runtime.mspan }
noalg.struct { F uintptr; runtime.s *runtime.mspan; runtime.h *runtime.mheap }
noalg.struct { F uintptr; runtime.s string }
noalg.struct { F uintptr; runtime.stackID uint64 }
noalg.struct { F uintptr; runtime.start *bool }
noalg.struct { F uintptr; runtime.startTime int64 }
noalg.struct { F uintptr; runtime.stk unsafe.Pointer; runtime.mp *runtime.m }
noalg.struct { F uintptr; runtime.stwSwept *bool }
noalg.struct { F uintptr; runtime.tab *runtime.traceStackTable; runtime.id *uint32; runtime.pcs []uintptr; runtime.h
noalg.struct { F uintptr; runtime.t *internal/abi.MapType }
noalg.struct { F uintptr; runtime/trace..autotmp_0 *sync.Mutex }
noalg.struct { F uintptr; runtime/trace..autotmp_3 *sync.Mutex }
noalg.struct { F uintptr; runtime/trace.w io.Writer }
noalg.struct { F uintptr; runtime.u *runtime.unwinder; runtime.pc uintptr; runtime.sp uintptr; runtime.lr uintptr; r
noalg.struct { F uintptr; R *vendor/golang.org/x/net/http/httpproxy.config }
noalg.struct { F uintptr; sync..autotmp_19 *sync.Mutex }
noalg.struct { F uintptr; sync..autotmp_2 *sync.Mutex }
noalg.struct { F uintptr; sync..autotmp_3 *uint32 }
noalg.struct { F uintptr; sync..autotmp_8 *sync.Mutex }
noalg.struct { F uintptr; syscall..autotmp_0 *sync.Mutex }
noalg.struct { F uintptr; syscall..autotmp_10 *sync.RWMutex }
noalg.struct { F uintptr; syscall..autotmp_14 *sync.Mutex }
noalg.struct { F uintptr; syscall..autotmp_31 int }
noalg.struct { F uintptr; syscall..autotmp_32 *sync.Pool; syscall..autotmp_33 interface {} }
noalg.struct { F uintptr; syscall..autotmp_3 *sync.RWMutex }
noalg.struct { F uintptr; syscall..autotmp_6 *sync.RWMutex }
noalg.struct { F uintptr; syscall..autotmp_9 *sync.RWMutex }
noalg.struct { F uintptr; text/template..autotmp_11 *text/template.state; text/template..autotmp_12 int }
noalg.struct { F uintptr; text/template..autotmp_18 *text/template.state; text/template..autotmp_19 int }
noalg.struct { F uintptr; text/template..autotmp_2 *text/template.state; text/template..autotmp_3 int }
noalg.struct { F uintptr; text/template..autotmp_3 *sync.RWMutex }
noalg.struct { F uintptr; text/template..autotmp_6 *sync.RWMutex }
noalg.struct { F uintptr; text/template..autotmp_7 *sync.RWMutex }
noalg.struct { F uintptr; text/template..autotmp_9 *error }
noalg.struct { F uintptr; text/template.err *error }
noalg.struct { F uintptr; text/template/parse..autotmp_13 *text/template/parse.Tree; text/template/parse..autotmp_14
noalg.struct { F uintptr; text/template/parse..autotmp_3 *text/template/parse.Tree }
noalg.struct { F uintptr; text/template/parse..autotmp_9 *text/template/parse.Tree; text/template/parse..autotmp_10 
noalg.struct { F uintptr; text/template.r *text/template/parse.RangeNode; text/template.s *text/template.state; text
noalg.struct { F uintptr; time..autotmp_12 uintptr }
noalg.struct { F uintptr; time..autotmp_24 uintptr }
noalg.struct { F uintptr; time.ok *bool; time..dict *[5]uintptr }
noalg.struct { F uintptr; vendor/golang.org/x/crypto/cryptobyte.b *vendor/golang.org/x/crypto/cryptobyte.Builder }
noalg.struct { F uintptr; vendor/golang.org/x/crypto/cryptobyte.bytes []uint8 }
noalg.struct { F uintptr; vendor/golang.org/x/crypto/cryptobyte.data []uint8 }
noalg.struct { F uintptr; vendor/golang.org/x/crypto/cryptobyte.n *math/big.Int }
noalg.struct { F uintptr; vendor/golang.org/x/crypto/cryptobyte.oid encoding/asn1.ObjectIdentifier }
noalg.struct { F uintptr; vendor/golang.org/x/crypto/cryptobyte.t time.Time }
noalg.struct { F uintptr; vendor/golang.org/x/crypto/cryptobyte.t time.Time; vendor/golang.org/x/crypto/cryptobyte.b
noalg.struct { F uintptr; vendor/golang.org/x/crypto/cryptobyte.v bool }
noalg.struct { F uintptr; vendor/golang.org/x/crypto/cryptobyte.v int64 }
noalg.struct { F uintptr; vendor/golang.org/x/crypto/cryptobyte.v uint64 }
noalg.struct { F uintptr; vendor/golang.org/x/net/http2/hpack.d *vendor/golang.org/x/net/http2/hpack.Decoder; vendor
noalg.struct { F uintptr; vendor/golang.org/x/net/http2/hpack.hf *[]vendor/golang.org/x/net/http2/hpack.HeaderField 
noalg.struct { F uintptr; vendor/golang.org/x/text/unicode/norm.bp *int; vendor/golang.org/x/text/unicode/norm.s str
noalg.struct { go/build/constraint.started bool; go/build/constraint.heap bool; go/build/constraint.openDefer bool; 
noalg.struct { go/parser.started bool; go/parser.heap bool; go/parser.openDefer bool; go/parser.sp uintptr; go/parse
noalg.struct { go/token.started bool; go/token.heap bool; go/token.openDefer bool; go/token.sp uintptr; go/token.pc 
noalg.struct { internal/godebug.started bool; internal/godebug.heap bool; internal/godebug.openDefer bool; internal/
noalg.struct { internal/intern.started bool; internal/intern.heap bool; internal/intern.openDefer bool; internal/int
noalg.struct { internal/poll.started bool; internal/poll.heap bool; internal/poll.openDefer bool; internal/poll.sp u
noalg.struct { internal/singleflight.started bool; internal/singleflight.heap bool; internal/singleflight.openDefer 
noalg.struct { internal/testlog.started bool; internal/testlog.heap bool; internal/testlog.openDefer bool; internal/
noalg.struct { log.started bool; log.heap bool; log.openDefer bool; log.sp uintptr; log.pc uintptr; log.fn uintptr; 
noalg.struct { main.started bool; main.heap bool; main.openDefer bool; main.sp uintptr; main.pc uintptr; main.fn uin
noalg.struct { mime/multipart.started bool; mime/multipart.heap bool; mime/multipart.openDefer bool; mime/multipart.
noalg.struct { mime.started bool; mime.heap bool; mime.openDefer bool; mime.sp uintptr; mime.pc uintptr; mime.fn uin
noalg.struct { net.c unsafe.Pointer; net.elem unsafe.Pointer }
noalg.struct { net/http.c unsafe.Pointer; net/http.elem unsafe.Pointer }
noalg.struct { net/http.started bool; net/http.heap bool; net/http.openDefer bool; net/http.sp uintptr; net/http.pc 
noalg.struct { net.started bool; net.heap bool; net.openDefer bool; net.sp uintptr; net.pc uintptr; net.fn uintptr; 
noalg.struct { os/exec.c unsafe.Pointer; os/exec.elem unsafe.Pointer }
noalg.struct { os/exec.started bool; os/exec.heap bool; os/exec.openDefer bool; os/exec.sp uintptr; os/exec.pc uintp
noalg.struct { os/signal.started bool; os/signal.heap bool; os/signal.openDefer bool; os/signal.sp uintptr; os/signa
noalg.struct { os.started bool; os.heap bool; os.openDefer bool; os.sp uintptr; os.pc uintptr; os.fn uintptr; os._pa
noalg.struct { path/filepath.started bool; path/filepath.heap bool; path/filepath.openDefer bool; path/filepath.sp u
noalg.struct { reflect.started bool; reflect.heap bool; reflect.openDefer bool; reflect.sp uintptr; reflect.pc uintp
noalg.struct { regexp.started bool; regexp.heap bool; regexp.openDefer bool; regexp.sp uintptr; regexp.pc uintptr; r
noalg.struct { regexp/syntax.started bool; regexp/syntax.heap bool; regexp/syntax.openDefer bool; regexp/syntax.sp u
noalg.struct { runtime.c unsafe.Pointer; runtime.elem unsafe.Pointer }
noalg.struct { runtime/debug.started bool; runtime/debug.heap bool; runtime/debug.openDefer bool; runtime/debug.sp u
noalg.struct { runtime/trace.started bool; runtime/trace.heap bool; runtime/trace.openDefer bool; runtime/trace.sp u
noalg.struct { sync.started bool; sync.heap bool; sync.openDefer bool; sync.sp uintptr; sync.pc uintptr; sync.fn uin
noalg.struct { syscall.started bool; syscall.heap bool; syscall.openDefer bool; syscall.sp uintptr; syscall.pc uintp
noalg.struct { text/template/parse.started bool; text/template/parse.heap bool; text/template/parse.openDefer bool; 
noalg.struct { text/template.started bool; text/template.heap bool; text/template.openDefer bool; text/template.sp u
noalg.struct { time.started bool; time.heap bool; time.openDefer bool; time.sp uintptr; time.pc uintptr; time.fn uin
noalg.struct { vendor/golang.org/x/crypto/cryptobyte.started bool; vendor/golang.org/x/crypto/cryptobyte.heap bool; 
noalg.struct { vendor/golang.org/x/net/http2/hpack.started bool; vendor/golang.org/x/net/http2/hpack.heap bool; vend
n:\",omitempty\"" },go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modload.modFileSummary; cmd/go/internal
n:\",omitempty\"" },go.shape.struct { cmd/go/internal/par.v string; cmd/go/internal/par.err error }]; cmd/go/interna
n.openDefer bool; cmd/go/internal/toolchain.sp uintptr; cmd/go/internal/toolchain.pc uintptr; cmd/go/internal/toolch
nsafe.Pointer; runtime.atomicstatus runtime/internal/atomic.Uint32; runtime.stackLock uint32; runtime.goid uint64; r
ns(context.Context, string) (*cmd/go/internal/modfetch.Versions, error); Zip(context.Context, io.Writer, string) err
n, string) error; DescendsFrom(context.Context, string, string) (bool, error); Latest(context.Context) (*cmd/go/inte
n struct {} }
nt16 }
nternal/cache._panic uintptr; cmd/go/internal/cache.link uintptr; cmd/go/internal/cache.fd uintptr; cmd/go/internal/
nternal/list.pmain *cmd/go/internal/load.Package; cmd/go/internal/list.sema *cmd/vendor/golang.org/x/sync/semaphore.
nternal/load.parentPath string; cmd/go/internal/load.parentDir string; cmd/go/internal/load.parentRoot string; cmd/g
nternal/modcmd.mod cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/modcmd.sem chan cmd/go/internal/modcm
nternal/modfetch.args []interface {} }
nternal/modfetch/codehost.openDefer bool; cmd/go/internal/modfetch/codehost.sp uintptr; cmd/go/internal/modfetch/cod
nternal/modfetch/codehost.Repo; cmd/go/internal/par.err error }]; cmd/go/internal/par..dict *[22]uintptr }
nternal/modfetch.path string }) bool; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.struct { cmd/go/inte
nternal/modfetch.RevInfo, error); ModulePath() string; Stat(context.Context, string) (*cmd/go/internal/modfetch.RevI
nternal/modget.m cmd/vendor/golang.org/x/mod/module.Version }) bool; cmd/go/internal/par.c *cmd/go/internal/par.Cach
nternal/modget.modMessage·2; cmd/go/internal/modget.i int }
nternal/modget.resolver; cmd/go/internal/modget.ctx context.Context }
nternal/modload.allowed cmd/go/internal/modload.AllowedFunc; cmd/go/internal/modload.versions *[]string; cmd/go/inte
nternal/modload.ld *cmd/go/internal/modload.loader; cmd/go/internal/modload.needc chan map[cmd/vendor/golang.org/x/m
nternal/modload.match func(cmd/vendor/golang.org/x/mod/module.Version, []string, bool) *cmd/go/internal/search.Match
nternal/modload.old *cmd/go/internal/modfetch/codehost.Origin }
nternal/modload.QueryResult }
nternal/par..dict *[22]uintptr }
nternal/par.err error }]
nternal/trace._panic uintptr; cmd/go/internal/trace.link uintptr; cmd/go/internal/trace.fd uintptr; cmd/go/internal/
nternal/work.p *cmd/go/internal/load.Package }
ntext) (*cmd/go/internal/modfetch/codehost.RevInfo, error); ReadFile(context.Context, string, string, int64) ([]uint
ntext) (*cmd/go/internal/modfetch.RevInfo, error); ModulePath() string; Stat(context.Context, string) (*cmd/go/inter
ntext.Context }
ntext.Context; cmd/go/internal/modfetch.allLine []string }
ntext.Context; cmd/go/internal/modload.path string; cmd/go/internal/modload.query string; cmd/go/internal/modload.cu
ntext.Context; cmd/go/internal/modload.pkg *cmd/go/internal/modload.loadPkg }
ntext.Context, string) (*cmd/go/internal/modfetch/codehost.Tags, error) }]
ntext, string) ([]uint8, error); Latest(context.Context) (*cmd/go/internal/modfetch.RevInfo, error); ModulePath() st
nt; go/doc/comment.g func(int, int) go/doc/comment.score·1; go/doc/comment.a int; go/doc/comment.b int }
ntime.gcscandone bool; runtime.throwsplit bool; runtime.activeStackChans bool; runtime.parkingOnChan runtime/interna
ntime.preemptShrink bool; runtime.asyncSafePoint bool; runtime.paniconfault bool; runtime.gcscandone bool; runtime.t
ntime.schedlink runtime.guintptr; runtime.waitsince int64; runtime.waitreason runtime.waitReason; runtime.preempt bo
ntime.spans [512]runtime.atomicMSpanPointer }]
ntime.sudog; runtime.cgoCtxt []uintptr; runtime.labels unsafe.Pointer; runtime.timer *runtime.timer; runtime.selectD
ntptr }
ntptr; runtime.labels unsafe.Pointer; runtime.timer *runtime.timer; runtime.selectDone runtime/internal/atomic.Uint3
nt string }
oader; cmd/go/internal/modload.ctx context.Context; cmd/go/internal/modload.flags cmd/go/internal/modload.loadPkgFla
oad.err *error; cmd/go/internal/modload.ctx context.Context }
oad.list []string }
oad.mode int }) bool
oad.mu *sync.Mutex; cmd/go/internal/modload.mg *cmd/go/internal/modload.ModuleGraph; cmd/go/internal/modload.hasErro
oad.Package; cmd/go/internal/work.mode cmd/go/internal/work.BuildMode; cmd/go/internal/work.b *cmd/go/internal/work.
ockedfile.fn uintptr; cmd/go/internal/lockedfile._panic uintptr; cmd/go/internal/lockedfile.link uintptr; cmd/go/int
ode }
odehost.Origin, string) error; DescendsFrom(context.Context, string, string) (bool, error); Latest(context.Context) 
odehost.remote string },go.shape.struct { cmd/go/internal/par.v cmd/go/internal/modfetch/codehost.Repo; cmd/go/inter
odehost.remote string },go.shape.struct { cmd/go/internal/par.v go.shape.interface { CheckReuse(context.Context, *cm
ode int }
odfetch.r *cmd/go/internal/modfetch.codeRepo }
odget.q *cmd/go/internal/modget.query }
odinfo.ModulePublic; cmd/go/internal/modload.ctx context.Context; cmd/go/internal/modload.rs *cmd/go/internal/modloa
odload.addPkg func(string) }
odload.ctx context.Context; cmd/go/internal/modload.pkg *cmd/go/internal/modload.loadPkg; cmd/go/internal/modload.ld
odload.mg *cmd/go/internal/modload.ModuleGraph }
odload.modFileSummary]]
odload.Requirements }
odload.Requirements; cmd/go/internal/modload.mode cmd/go/internal/modload.ListMode }
odload.suggestEFlag *bool }
odload.vers *string; cmd/go/internal/modload.fixed *bool }
od/modfile.LineBlock }
od/module.Version) bool }
od/module.Version]bool }
od/module.Version) bool; cmd/go/internal/modget.ctx context.Context; cmd/go/internal/modget.path string }
o/doc/comment.Text }
odule.Version }) bool
o/internal/load.parentIsStd bool; cmd/go/internal/load.mode int }) bool; cmd/go/internal/par.c *cmd/go/internal/par.
o/internal/modload..autotmp_27 string; cmd/go/internal/modload..autotmp_28 *cmd/go/internal/modload.result·5 }
o/internal/modload.loader; cmd/go/internal/modload.ctx context.Context; cmd/go/internal/modload.testFlags cmd/go/int
o/internal/modload.loadPkgFlags; cmd/go/internal/modload.createdTest *bool }
o/internal/modload.ModuleGraph; cmd/go/internal/modload.ld *cmd/go/internal/modload.loader; cmd/go/internal/modload.
o/internal/modload.pre114 bool; cmd/go/internal/modload.vendErrorf func(cmd/vendor/golang.org/x/mod/module.Version, 
o/internal/modload.pruning cmd/go/internal/modload.modPruning; cmd/go/internal/modload.unprune map[cmd/vendor/golang
o/internal/modload.token·2 }
o/internal/par..dict *[22]uintptr }
o/internal/par.err error }
o/internal/par.err error }]
o/internal/work.buildAction *cmd/go/internal/work.Action }
o/internal/work.depMode cmd/go/internal/work.BuildMode; cmd/go/internal/work.shlib string }
ol }
ol }]
olang.org/x/mod/modfile.err *error }
olang.org/x/mod/module.Version; cmd/go/internal/mvs.reqs cmd/go/internal/mvs.Reqs; cmd/go/internal/mvs.walk *func(cm
olang.org/x/mod/sumdb/dirhash.framepc uintptr }
olang.org/x/mod/sumdb/tlog.Tile }
olang.org/x/mod/zip.openDefer bool; cmd/vendor/golang.org/x/mod/zip.sp uintptr; cmd/vendor/golang.org/x/mod/zip.pc u
olchain.fd uintptr; cmd/go/internal/toolchain.varp uintptr; cmd/go/internal/toolchain.framepc uintptr }
ol; cmd/go/internal/load.mode int },go.shape.struct { cmd/go/internal/load.path string; cmd/go/internal/load.dir str
old cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/modget.sumErrs []error; cmd/go/internal/modget.i int
ol; HasAVX2 bool; HasAVX512 bool; HasAVX512F bool; HasAVX512CD bool; HasAVX512ER bool; HasAVX512PF bool; HasAVX512VL
ol; HasSSE3 bool; HasSSSE3 bool; HasSSE41 bool; HasSSE42 bool; vendor/golang.org/x/sys/cpu._ vendor/golang.org/x/sys
ol; runtime.preemptStop bool; runtime.preemptShrink bool; runtime.asyncSafePoint bool; runtime.paniconfault bool; ru
omitempty\"" },go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modload.modFileSummary; cmd/go/internal/par.
omitempty\"" },go.shape.struct { cmd/go/internal/par.v string; cmd/go/internal/par.err error }]; cmd/go/internal/par
ommitted bool }, error); cmd/go/internal/par..dict *[11]uintptr }
one runtime/internal/atomic.Uint32; runtime.goroutineProfiled runtime.goroutineProfileStateHolder; runtime.trace run
ons(context.Context, string) (*cmd/go/internal/modfetch.Versions, error); Zip(context.Context, io.Writer, string) er
onstraintComparisons *int }
ontext; cmd/go/internal/modget.path string; cmd/go/internal/modget.q **cmd/go/internal/modget.query; cmd/go/internal
ontext; cmd/go/internal/modget.q **cmd/go/internal/modget.query }
ontext.Context) (*cmd/go/internal/modfetch/codehost.RevInfo, error); ReadFile(context.Context, string, string, int64
ontext.Context; cmd/go/internal/modload.revErr *cmd/go/internal/modfetch.RevInfo; cmd/go/internal/modload.mergeRevOr
ontext.Context, string) (*cmd/go/internal/modfetch/codehost.Tags, error) }]
ontext.Context, string, string, int64) (io.ReadCloser, error); RecentTag(context.Context, string, string, func(strin
ontext; net.done chan struct {} }
ool }
ool }]
ool; cmd/go/internal/load.mode int },go.shape.struct { cmd/go/internal/load.path string; cmd/go/internal/load.dir st
ool; runtime.preemptStop bool; runtime.preemptShrink bool; runtime.asyncSafePoint bool; runtime.paniconfault bool; r
oot string }
opts *cmd/go/internal/modload.PackageOpts; cmd/go/internal/modload.ctx context.Context }
or }
or }]
or/golang.org/x/mod/module.Version },go.shape.struct { cmd/go/internal/par.v go.shape.[]string; cmd/go/internal/par.
or/golang.org/x/mod/module.Version },go.shape.struct { cmd/go/internal/par.v []string; cmd/go/internal/par.err error
or/golang.org/x/mod/sumdb.openDefer bool; cmd/vendor/golang.org/x/mod/sumdb.sp uintptr; cmd/vendor/golang.org/x/mod/
or/golang.org/x/net/http2/hpack.openDefer bool; vendor/golang.org/x/net/http2/hpack.sp uintptr; vendor/golang.org/x/
.org/x/mod/modfile.File; cmd/vendor/golang.org/x/mod/modfile.err *error }
.org/x/mod/module.Version]bool; cmd/go/internal/modload.enqueue *func(cmd/vendor/golang.org/x/mod/module.Version, cm
org/x/mod/module.Version; cmd/go/internal/modload.cancel context.CancelFunc; cmd/go/internal/modload.rs *cmd/go/inte
.org/x/mod/module.Version; cmd/go/internal/mvs.reqs cmd/go/internal/mvs.Reqs; cmd/go/internal/mvs.walk *func(cmd/ven
.org/x/mod/sumdb.tileReader }
org/x/net/dns/dnsmessage.Type }
Origin) error; GoMod(context.Context, string) ([]uint8, error); Latest(context.Context) (*cmd/go/internal/modfetch.R
ork.Action) }
ork.Builder; cmd/go/internal/work.depMode cmd/go/internal/work.BuildMode }
or); ReadZip(context.Context, string, string, int64) (io.ReadCloser, error); RecentTag(context.Context, string, stri
ort; cmd/go/internal/load.ctx context.Context; cmd/go/internal/load.path string; cmd/go/internal/load.mode int; cmd/
*os.dirInfo
os.dirInfo
*os/exec.Cmd
os/exec.Cmd
*os/exec.ctxResult
os/exec.ctxResult
*os/exec.Error
os/exec.Error
**os/exec.ExitError
*os/exec.ExitError
os/exec.ExitError
*os/exec.goroutineStatus·1
os/exec.goroutineStatus·1
*os/exec.prefixSuffixSaver
os/exec.prefixSuffixSaver
*os/exec.wrappedError
os/exec.wrappedError
*os.file
os.file
**os.File
*os.File
[]*os.File
os.File
*os.fileStat
os.fileStat
*os.fileWithoutReadFrom
os.fileWithoutReadFrom
*os.LinkError
os.LinkError
os.newFileKind
*os.ProcAttr
os.ProcAttr
*os.Process
os.Process
*os.ProcessState
os.ProcessState
*os.rawConn
os.rawConn
os.readdirMode
*os.Signal
[]os.Signal
os.Signal
**os/signal.handler
*os/signal.handler
os/signal.handler
*os/signal.stopping
[]os/signal.stopping
os/signal.stopping
*os.SyscallError
os.SyscallError
os.timeout
ost.RevInfo, error); ReadFile(context.Context, string, string, int64) ([]uint8, error); ReadZip(context.Context, str
ost.rev string; cmd/go/internal/modfetch/codehost.prefix string; cmd/go/internal/modfetch/codehost.allowed func(stri
*os.unixDirent
os.unixDirent
otmp_11 *internal/singleflight.call; internal/singleflight..autotmp_12 string; internal/singleflight..autotmp_13 fun
otmp_148 *cmd/go/internal/work.Action }
p_43 <-chan internal/singleflight.Result; net..autotmp_44 context.CancelFunc }
p_46 <-chan internal/singleflight.Result; net..autotmp_47 context.CancelFunc }
Package; cmd/go/internal/par.err error }]
Package func(string, string) (cmd/vendor/golang.org/x/mod/module.Version, error); cmd/go/internal/modconv.file strin
_panic uintptr; cmd/go/internal/bug.link uintptr; cmd/go/internal/bug.fd uintptr; cmd/go/internal/bug.varp uintptr; 
_panic uintptr; cmd/go/internal/par.link uintptr; cmd/go/internal/par.fd uintptr; cmd/go/internal/par.varp uintptr; 
_panic uintptr; cmd/go/internal/run.link uintptr; cmd/go/internal/run.fd uintptr; cmd/go/internal/run.varp uintptr; 
_panic uintptr; cmd/go/internal/vcs.link uintptr; cmd/go/internal/vcs.fd uintptr; cmd/go/internal/vcs.varp uintptr; 
_panic uintptr; cmd/go/internal/vet.link uintptr; cmd/go/internal/vet.fd uintptr; cmd/go/internal/vet.varp uintptr; 
_panic uintptr; cmd/go/internal/web.link uintptr; cmd/go/internal/web.fd uintptr; cmd/go/internal/web.varp uintptr; 
_panic uintptr; go/build/constraint.link uintptr; go/build/constraint.fd uintptr; go/build/constraint.varp uintptr; 
_panic uintptr; text/template/parse.link uintptr; text/template/parse.fd uintptr; text/template/parse.varp uintptr; 
panPointer }
par.Cache[go.shape.[2]string,go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modindex.IndexPackage; cmd/go/
par.Cache[go.shape.struct {},go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch.RevInfo; cmd/go/inter
/par..dict *[22]uintptr }
/par.err error }]
par.err error }]
/par.err error }]; cmd/go/internal/par..dict *[22]uintptr }
par.queueState }
; path/filepath.fd uintptr; path/filepath.varp uintptr; path/filepath.framepc uintptr }
*path/filepath.lazybuf
path/filepath.lazybuf
*path/filepath.statDirEntry
path/filepath.statDirEntry
path/filepath.WalkFunc
*path.lazybuf
path.lazybuf
pattern string; cmd/go/internal/modget.m cmd/vendor/golang.org/x/mod/module.Version },go.shape.struct { cmd/go/inter
.pattern string; cmd/go/internal/modload.ctx context.Context; cmd/go/internal/modload.candidateModules []string; cmd
p..autotmp_11 string }
p bool; cmd/vendor/golang.org/x/mod/sumdb/dirhash.openDefer bool; cmd/vendor/golang.org/x/mod/sumdb/dirhash.sp uintp
p[cmd/vendor/golang.org/x/mod/module.Version]cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/mvs.g *cmd/
p(context.Context, io.Writer, string) error }]; cmd/go/internal/par..dict *[22]uintptr }
p.ctx context.Context; net/http.timer *time.Timer; net/http.errc chan error }
penDefer bool; cmd/go/internal/generate.sp uintptr; cmd/go/internal/generate.pc uintptr; cmd/go/internal/generate.fn
penDefer bool; cmd/go/internal/modfetch.sp uintptr; cmd/go/internal/modfetch.pc uintptr; cmd/go/internal/modfetch.fn
penDefer bool; cmd/go/internal/modindex.sp uintptr; cmd/go/internal/modindex.pc uintptr; cmd/go/internal/modindex.fn
pe.struct { cmd/go/internal/modfetch/codehost.vcs string; cmd/go/internal/modfetch/codehost.remote string },go.shape
p/httptrace.ClientTrace }
p int; runtime.pcbuf []uintptr }
pkgtargetroot string }
.Pointer]int32 }
.Pointer[runtime.g]; runtime.signalLock runtime/internal/atomic.Uint32; runtime.cpuLogWrite *runtime.profBuf; runtim
port; net/http..autotmp_13 string; net/http..autotmp_14 *crypto/tls.Conn }
.prefix string }
.prefix string; cmd/vendor/golang.org/x/mod/sumdb/dirhash.files *[]string }
p.Request; net/http.conn net.Conn; net/http.resp **net/http.Response }
ptr }
ptrace.ClientTrace }
ptr; cmd/vendor/golang.org/x/mod/module.link uintptr; cmd/vendor/golang.org/x/mod/module.fd uintptr; cmd/vendor/gola
ptRes chan error; crypto/tls.done chan struct {} }
pts cmd/go/internal/load.PackageOpts }
pts int; net.rotate bool; net.unknownOpt bool; net.lookup []string; net.err error; net.mtime time.Time; net.soffset 
pxtest **cmd/go/internal/load.Package }
.q *cmd/go/internal/modget.query }
qhdr net/http.Header; net/http.preq **net/http.Request }
queryPackage func(string, string) (cmd/vendor/golang.org/x/mod/module.Version, error); cmd/go/internal/modconv.file 
.QueryResult, error); cmd/go/internal/modload.ctx context.Context; cmd/go/internal/modload.wg *sync.WaitGroup }
query string }
quest }
r }
r }]
ration; net.attempts int; net.rotate bool; net.unknownOpt bool; net.lookup []string; net.err error; net.mtime time.T
r *bool }
r **cmd/vendor/golang.org/x/mod/modfile.Retract }
re·1; go/doc/comment.f *[]go/doc/comment.score·1; go/doc/comment.weight func(int, int) go/doc/comment.score·1 }
reflect.abiDesc
*reflect.abiSeq
reflect.abiSeq
*reflect.abiStep
[]reflect.abiStep
reflect.abiStep
reflect.abiStepKind
*reflect.bitVector
reflect.bitVector
reflect.cacheKey
*reflect.ChanDir
reflect.ChanDir
*reflect.emptyInterface
reflect.emptyInterface
*reflect.fieldScan
[]reflect.fieldScan
reflect.fieldScan
reflect.flag
reflect.fun [100000]unsafe.Pointer }
*reflect.hiter
reflect.hiter
*reflect.interfaceType
reflect.interfaceType
*reflect.Kind
reflect.Kind
reflect.layoutKey
reflect.layoutType
*reflect.makeFuncCtxt
reflect.makeFuncCtxt
*reflect.makeFuncImpl
reflect.makeFuncImpl
*reflect.MapIter
reflect.MapIter
*reflect.mapType
reflect.mapType
*reflect.Method
reflect.Method
*reflect.methodValue
reflect.methodValue
*reflect.nonEmptyInterface
reflect.nonEmptyInterface
*reflect.ptrType
reflect.ptrType
**reflect.rtype
*reflect.rtype
[]*reflect.rtype
reflect.rtype
reflect.SelectDir
*reflect.sliceType
reflect.sliceType
*reflect.StructField
[]reflect.StructField
reflect.StructField
*reflect.StructTag
reflect.StructTag
*reflect.structType
reflect.structType
*reflect.structTypeUncommon
reflect.structTypeUncommon
*reflect.Type
[]reflect.Type
reflect.Type
*[]reflect.Value
*reflect.Value
[]reflect.Value
reflect.Value
*reflect.ValueError
reflect.ValueError
*reflect.visit
reflect.visit
*regexp.bitState
regexp.bitState
*regexp.entry
[]regexp.entry
regexp.entry
regexp.input
*regexp.inputBytes
regexp.inputBytes
*regexp.inputReader
regexp.inputReader
*regexp.inputs
regexp.inputs
*regexp.inputString
regexp.inputString
*regexp.job
[]regexp.job
regexp.job
*regexp.lazyFlag
regexp.lazyFlag
*regexp.machine
regexp.machine
*regexp.onePassInst
[]regexp.onePassInst
regexp.onePassInst
*regexp.onePassMachine
regexp.onePassMachine
**regexp.onePassProg
*regexp.onePassProg
regexp.onePassProg
*regexp.queue
regexp.queue
*regexp.queueOnePass
regexp.queueOnePass
*regexp.Regexp
regexp.Regexp
*regexp.runeSlice
regexp.runeSlice
*regexp/syntax.charGroup
regexp/syntax.charGroup
*regexp/syntax.compiler
regexp/syntax.compiler
regexp/syntax.EmptyOp
*regexp/syntax.Error
regexp/syntax.Error
*regexp/syntax.ErrorCode
regexp/syntax.ErrorCode
; regexp/syntax.fd uintptr; regexp/syntax.varp uintptr; regexp/syntax.framepc uintptr }
regexp/syntax.Flags
regexp/syntax.frag
*regexp/syntax.Inst
[]regexp/syntax.Inst
regexp/syntax.Inst
*regexp/syntax.InstOp
regexp/syntax.InstOp
regexp/syntax.Op
*regexp/syntax.parser
regexp/syntax.parser
regexp/syntax.patchList
*regexp/syntax.Prog
regexp/syntax.Prog
*regexp/syntax.ranges
regexp/syntax.ranges
**regexp/syntax.Regexp
*regexp/syntax.Regexp
[]*regexp/syntax.Regexp
regexp/syntax.Regexp
**regexp.thread
*regexp.thread
[]*regexp.thread
regexp.thread
re int8; runtime.tracking bool; runtime.trackingSeq uint8; runtime.trackingStamp int64; runtime.runnableTime int64; 
reload; cmd/go/internal/load.opts cmd/go/internal/load.PackageOpts }
rentDir string; cmd/go/internal/load.parentRoot string; cmd/go/internal/load.parentIsStd bool; cmd/go/internal/load.
rentRoot string }
Request }
r.err error }]
r.err error }]; cmd/go/internal/par..dict *[22]uintptr }
.RevInfo; cmd/go/internal/par.err error }]
RevInfo, error); Tags(context.Context, string) (*cmd/go/internal/modfetch/codehost.Tags, error) }, error); cmd/go/in
.RevInfo, error); Versions(context.Context, string) (*cmd/go/internal/modfetch.Versions, error); Zip(context.Context
RevOrigin func(*cmd/go/internal/modfetch.RevInfo, *cmd/go/internal/modfetch/codehost.Origin) *cmd/go/internal/modfet
rg/x/mod/module.Version }
rhash.prefix string }
rhash.prefix string; cmd/vendor/golang.org/x/mod/sumdb/dirhash.files *[]string }
rigin) error; GoMod(context.Context, string) ([]uint8, error); Latest(context.Context) (*cmd/go/internal/modfetch.Re
ring }
ring; cmd/go/internal/load.err error }]
ring; cmd/go/internal/load.parentPath string; cmd/go/internal/load.parentDir string; cmd/go/internal/load.parentRoot
ring; cmd/go/internal/modfetch/codehost.remote string }
ring },go.shape.interface { CheckReuse(context.Context, *cmd/go/internal/modfetch/codehost.Origin) error; GoMod(cont
ring, int64) (io.ReadCloser, error); RecentTag(context.Context, string, string, func(string) bool) (string, error); 
ring "json:\",omitempty\"" },go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modload.modFileSummary; cmd/go
ring "json:\",omitempty\"" },go.shape.struct { cmd/go/internal/par.v string; cmd/go/internal/par.err error }]; cmd/g
ring; Stat(context.Context, string) (*cmd/go/internal/modfetch.RevInfo, error); Versions(context.Context, string) (*
ring, string, func(string) bool) (string, error); Stat(context.Context, string) (*cmd/go/internal/modfetch/codehost.
rk.Builder }
rkcmd.arg string }
rkq *[]*cmd/go/internal/work.Action }
rList []cmd/vendor/golang.org/x/mod/module.Version }
rnal/load.Package; cmd/go/internal/load.ptest **cmd/go/internal/load.Package; cmd/go/internal/load.pmain **cmd/go/in
rnal/load.path string; cmd/go/internal/load.parentDir string; cmd/go/internal/load.mode int; cmd/go/internal/load.pa
rnal/modcmd.arg string }
rnal/modfetch/codehost.Origin) error; GoMod(context.Context, string) ([]uint8, error); Latest(context.Context) (*cmd
rnal/modfetch/codehost.ref *string }
rnal/modfetch/codehost.RevInfo, error); ReadFile(context.Context, string, string, int64) ([]uint8, error); ReadZip(c
rnal/modfetch.proxy string }
rnal/modfetch.proxy string; cmd/go/internal/modfetch.path string },go.shape.interface { CheckReuse(context.Context, 
rnal/modfetch.rev *string }
rnal/modfetch.Versions }
rnal/modfetch.version string; cmd/go/internal/modfetch.info **cmd/go/internal/modfetch.RevInfo; cmd/go/internal/modf
rnal/modindex.packages *[]*cmd/go/internal/modindex.rawPackage }
rnal/modload.index *cmd/go/internal/modindex.Module; cmd/go/internal/modload.tags map[string]bool; cmd/go/internal/m
rnal/modload.new []uint8; cmd/go/internal/modload.modFile *cmd/vendor/golang.org/x/mod/modfile.File; cmd/go/internal
rnal/modload.origin **cmd/go/internal/modfetch/codehost.Origin }
rnal/modload.Requirements }
rnal/mvs.walk *func(cmd/vendor/golang.org/x/mod/module.Version) error }
rnal/par.Cache[go.shape.[2]string,go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modindex.IndexPackage; cm
rnal/par.Cache[go.shape.struct {},go.shape.struct { cmd/go/internal/par.v *cmd/go/internal/modfetch.RevInfo; cmd/go/
rnal/par.err error }]
rnal/par.err error }]; cmd/go/internal/par..dict *[22]uintptr }
rnal/trace.traceFile }
rnal/work.b *cmd/go/internal/work.Builder; cmd/go/internal/work.handle func(context.Context, *cmd/go/internal/work.A
r; net/http.timedOut *sync/atomic.Bool; net/http.stopTimerCh chan struct {} }
rn string; cmd/go/internal/modget.m cmd/vendor/golang.org/x/mod/module.Version },go.shape.struct { cmd/go/internal/p
rom(context.Context, string, string) (bool, error); Latest(context.Context) (*cmd/go/internal/modfetch/codehost.RevI
ror }
ror }]
ror)
ror); Tags(context.Context, string) (*cmd/go/internal/modfetch/codehost.Tags, error) }; cmd/go/internal/par.err erro
r.pc uintptr; go/parser.fn uintptr; go/parser._panic uintptr; go/parser.link uintptr; go/parser.fd uintptr; go/parse
r); ReadZip(context.Context, string, string, int64) (io.ReadCloser, error); RecentTag(context.Context, string, strin
rrent string; cmd/go/internal/modload.allowed cmd/go/internal/modload.AllowedFunc; cmd/go/internal/modload.reuse map
rr error }
rr *error; crypto/x509.c *crypto/x509.Certificate; crypto/x509.hintErr *error; crypto/x509.hintCert **crypto/x509.Ce
rror }
rror }]
rror }]; cmd/go/internal/par..dict *[22]uintptr }
rror; debug/dwarf.name string; debug/dwarf.nextDepth *int }
rror); Latest(context.Context) (*cmd/go/internal/modfetch/codehost.RevInfo, error); ReadFile(context.Context, string
rror); Stat(context.Context, string) (*cmd/go/internal/modfetch/codehost.RevInfo, error); Tags(context.Context, stri
rror); Tags(context.Context, string) (*cmd/go/internal/modfetch/codehost.Tags, error) }; cmd/go/internal/par.err err
r; runtime.ancestors *[]runtime.ancestorInfo; runtime.startpc uintptr; runtime.racectx uintptr; runtime.waiting *run
r; runtime.waitsince int64; runtime.waitreason runtime.waitReason; runtime.preempt bool; runtime.preemptStop bool; r
rs []error; cmd/vendor/golang.org/x/mod/sumdb.data [][]uint8; cmd/vendor/golang.org/x/mod/sumdb.r *cmd/vendor/golang
rsion] }
rsion string "json:\",omitempty\"" }]; cmd/go/internal/mvs..autotmp_6 *[11]uintptr }
rsion string "json:\",omitempty\"" }; cmd/go/internal/par.err error }]
rsistConn }
r() string }]; cmd/go/internal/par..dict *[22]uintptr }
rtificate; crypto/x509.opts *crypto/x509.VerifyOptions; crypto/x509.chains *[][]*crypto/x509.Certificate }
ruct { cmd/go/internal/modfetch/codehost.vcs string; cmd/go/internal/modfetch/codehost.remote string },go.shape.stru
*runtime.activeSweep
runtime.activeSweep
*runtime.addrRange
[]runtime.addrRange
runtime.addrRange
*runtime.addrRanges
runtime.addrRanges
*runtime.adjustinfo
runtime.adjustinfo
*[]runtime.ancestorInfo
*runtime.ancestorInfo
[]runtime.ancestorInfo
runtime.ancestorInfo
**runtime.arenaHint
*runtime.arenaHint
runtime.arenaHint
*runtime.arenaIdx
[]runtime.arenaIdx
runtime.arenaIdx
*runtime.atomicHeadTailIndex
runtime.atomicHeadTailIndex
*runtime.atomicMSpanPointer
runtime.atomicMSpanPointer
*runtime.atomicOffAddr
runtime.atomicOffAddr
*runtime.atomicScavChunkData
[]runtime.atomicScavChunkData
runtime.atomicScavChunkData
*runtime.atomicSpanSetSpinePointer
runtime.atomicSpanSetSpinePointer
*runtime.bitvector
runtime.bitvector
*runtime.blockRecord
runtime.blockRecord
**runtime.bmap
*[]*runtime.bmap
*runtime.bmap
[]*runtime.bmap
runtime.bmap
*runtime.boundsError
runtime.boundsError
runtime.boundsErrorCode
*runtime.bucket
runtime.bucket
runtime.bucketType
*runtime.buckhashArray
runtime.buckhashArray
*runtime.cgoCallers
runtime.cgoCallers
*runtime.cgoSymbolizerArg
runtime.cgoSymbolizerArg
runtime.cgothreadstart
runtime.cgoTracebackArg
*runtime.checkmarksMap
runtime.checkmarksMap
runtime.chunkIdx
*runtime.consistentHeapStats
runtime.consistentHeapStats
; runtime.cpuLogRead *runtime.profBuf; runtime.cpuLogBuf runtime.traceBufPtr; runtime.reader runtime/internal/atomic
*runtime.cpuProfile
runtime.cpuProfile
*runtime.cpuStats
runtime.cpuStats
runtime.cpuStatsAggregate
**runtime.dbgVar
*runtime.dbgVar
[]*runtime.dbgVar
runtime.dbgVar
*runtime/debug.BuildInfo
runtime/debug.BuildInfo
*runtime/debug.BuildSetting
[]runtime/debug.BuildSetting
runtime/debug.BuildSetting
*runtime.debugCallWrapArgs
runtime.debugCallWrapArgs
; runtime/debug.fd uintptr; runtime/debug.varp uintptr; runtime/debug.framepc uintptr }
**runtime/debug.Module
*runtime/debug.Module
[]*runtime/debug.Module
runtime/debug.Module
**runtime._defer
*runtime._defer
[]*runtime._defer
runtime._defer
runtime.dlogPerM
*runtime.eface
runtime.eface
runtime.elfDyn
*runtime.elfEhdr
runtime.elfEhdr
*runtime.elfPhdr
runtime.elfPhdr
runtime.elfSym
*runtime.elfVerdaux
runtime.elfVerdaux
*runtime.elfVerdef
runtime.elfVerdef
runtime.Error
*runtime.errorAddressString
runtime.errorAddressString
*runtime.errorString
runtime.errorString
runtime.evacDst
*runtime.exitHook
[]runtime.exitHook
runtime.exitHook
runtime.finalizer
*runtime.finblock
runtime.finblock
*runtime.findfuncbucket
runtime.findfuncbucket
*runtime.fixalloc
runtime.fixalloc
runtime.flags int32; runtime.fd int32; runtime.off uint32 }
runtime.forcegcstate
*runtime.fpstate1
runtime.fpstate1
runtime.fpxreg1
*runtime.Frame
[]runtime.Frame
runtime.Frame
*runtime.Frames
runtime.Frames
runtime.fullHead runtime.traceBufPtr; runtime.fullTail runtime.traceBufPtr; runtime.stackTab runtime.traceStackTable
*runtime._func
runtime._func
*runtime.Func
runtime.Func
runtime.funcInfo
*runtime.funcinl
runtime.funcinl
*runtime.functab
[]runtime.functab
runtime.functab
*runtime.funcval
runtime.funcval
**runtime.g
*runtime.g
[]*runtime.g
runtime.g
*runtime.gcBgMarkWorkerNode
runtime.gcBgMarkWorkerNode
*runtime.gcBits
runtime.gcBits
*runtime.gcBitsArena
runtime.gcBitsArena
runtime.gccheckmark int32; runtime.gcpacertrace int32; runtime.gcshrinkstackoff int32; runtime.gcstoptheworld int32;
*runtime.gcControllerState
runtime.gcControllerState
*runtime.gcCPULimiterState
runtime.gcCPULimiterState
runtime.gcDrainFlags
*runtime.gclink
runtime.gclink
runtime.gclinkptr
runtime.gcMarkWorkerMode
runtime.gcMode
runtime.gcStatsAggregate
 runtime.gctrace int32; runtime.invalidptr int32; runtime.madvdontneed int32; runtime.scavtrace int32; runtime.sched
runtime.gcTrigger
runtime.gcTriggerKind
*runtime.gcWork
runtime.gcWork
*runtime.gList
runtime.gList
*runtime.gobuf
runtime.gobuf
*runtime.godebugInc
runtime.godebugInc
runtime.goroutineProfileState
*runtime.goroutineProfileStateHolder
runtime.goroutineProfileStateHolder
*runtime.gQueue
runtime.gQueue
*runtime.gsignalStack
runtime.gsignalStack
*runtime.gTraceState
runtime.gTraceState
*runtime.guintptr
runtime.guintptr
 runtime.haveTemplateThread uint32 }
*runtime.hchan
runtime.hchan
runtime.headTailIndex
*runtime.heapArena
runtime.heapArena
runtime.heapBits
runtime.heapStatsAggregate
*runtime.heapStatsDelta
runtime.heapStatsDelta
runtime.heldLockInfo
runtime.hex
*runtime.hiter
runtime.hiter
*runtime.hmap
runtime.hmap
*runtime.iface
runtime.iface
**runtime.initTask
*runtime.initTask
[]*runtime.initTask
runtime.initTask
runtime.inlinedCall
runtime.inlineFrame
*runtime.inlineUnwinder
runtime.inlineUnwinder
runtime/internal/atomic.align64
*runtime/internal/atomic.Bool
runtime/internal/atomic.Bool
*runtime/internal/atomic.Float64
runtime/internal/atomic.Float64
*runtime/internal/atomic.Int32
runtime/internal/atomic.Int32
*runtime/internal/atomic.Int64
runtime/internal/atomic.Int64
runtime/internal/atomic.noCopy
*runtime/internal/atomic.Pointer[func()]
runtime/internal/atomic.Pointer[func()]
*runtime/internal/atomic.Pointer[func(string) func()]
runtime/internal/atomic.Pointer[func(string) func()]
*runtime/internal/atomic.Pointer[func(string, string)]
runtime/internal/atomic.Pointer[func(string, string)]
*runtime/internal/atomic.Pointer[go.shape.func()]
runtime/internal/atomic.Pointer[go.shape.func()]
*runtime/internal/atomic.Pointer[go.shape.func(string) func()]
runtime/internal/atomic.Pointer[go.shape.func(string) func()]
*runtime/internal/atomic.Pointer[go.shape.func(string, string)]
runtime/internal/atomic.Pointer[go.shape.func(string, string)]
*runtime/internal/atomic.Pointer[go.shape.string]
runtime/internal/atomic.Pointer[go.shape.string]
*runtime/internal/atomic.Pointer[go.shape.struct { runtime.lfnode; runtime.popped runtime/internal/atomic.Uint32; ru
runtime/internal/atomic.Pointer[go.shape.struct { runtime.lfnode; runtime.popped runtime/internal/atomic.Uint32; run
*runtime/internal/atomic.Pointer[go.shape.struct { runtime.stack runtime.stack; runtime.stackguard0 uintptr; runtime
runtime/internal/atomic.Pointer[go.shape.struct { runtime.stack runtime.stack; runtime.stackguard0 uintptr; runtime.
*runtime/internal/atomic.Pointer[runtime.g]
runtime/internal/atomic.Pointer[runtime.g]
*runtime/internal/atomic.Pointer[runtime.spanSetBlock]
runtime/internal/atomic.Pointer[runtime.spanSetBlock]
*runtime/internal/atomic.Pointer[string]
runtime/internal/atomic.Pointer[string]
*runtime/internal/atomic.Uint32
runtime/internal/atomic.Uint32
*runtime/internal/atomic.Uint64
runtime/internal/atomic.Uint64
*runtime/internal/atomic.Uint8
runtime/internal/atomic.Uint8
*runtime/internal/atomic.Uintptr
runtime/internal/atomic.Uintptr
*runtime/internal/atomic.UnsafePointer
runtime/internal/atomic.UnsafePointer
*runtime/internal/syscall.EpollEvent
[]runtime/internal/syscall.EpollEvent
runtime/internal/syscall.EpollEvent
runtime/internal/sys.nih
*runtime/internal/sys.NotInHeap
runtime/internal/sys.NotInHeap
; runtime.inuse bool }
**runtime.itab
*runtime.itab
[]*runtime.itab
runtime.itab
*runtime.itabTableType
runtime.itabTableType
*runtime.itimerspec
runtime.itimerspec
*runtime.lfnode
runtime.lfnode
*runtime.lfstack
runtime.lfstack
runtime.libcall
*runtime.limiterEvent
runtime.limiterEvent
runtime.limiterEventStamp
runtime.limiterEventType
*runtime.linearAlloc
runtime.linearAlloc
*runtime.liveUserArenaChunk
[]runtime.liveUserArenaChunk
runtime.liveUserArenaChunk
runtime.lockedm runtime.muintptr; runtime.sig uint32; runtime.writebuf []uint8; runtime.sigcode0 uintptr; runtime.si
*runtime.lockRank
runtime.lockRank
runtime.lockRankStruct
**runtime.m
*runtime.m
runtime.m
*runtime.mapextra
runtime.mapextra
*runtime.markBits
runtime.markBits
**runtime.mcache
*runtime.mcache
runtime.mcache
*runtime.mcentral
runtime.mcentral
*runtime.memRecord
runtime.memRecord
*runtime.memRecordCycle
runtime.memRecordCycle
runtime.metricData
*runtime.metricFloat64Histogram
runtime.metricFloat64Histogram
runtime.metricKind
runtime.metricReader
*runtime.metricValue
runtime.metricValue
*runtime.mheap
runtime.mheap
*runtime.mlink
runtime.mlink
**runtime.moduledata
*[]*runtime.moduledata
*runtime.moduledata
[]*runtime.moduledata
runtime.moduledata
*runtime.modulehash
[]runtime.modulehash
runtime.modulehash
*runtime.mOS
runtime.mOS
*runtime.mProfCycleHolder
runtime.mProfCycleHolder
**runtime.mspan
*runtime.mspan
[]*runtime.mspan
runtime.mspan
*runtime.mSpanList
runtime.mSpanList
runtime.mSpanState
*runtime.mSpanStateBox
runtime.mSpanStateBox
runtime.mstats
runtime.mTraceState
*runtime.muintptr
runtime.muintptr
*runtime.mutex
runtime.mutex
*runtime.note
runtime.note
*runtime.notifyList
runtime.notifyList
**runtime.notInHeap
*runtime.notInHeap
runtime.notInHeap
runtime.notInHeapSlice
runtime.offAddr
**runtime.p
*runtime.p
[]*runtime.p
runtime.p
*runtime.pageAlloc
runtime.pageAlloc
*runtime.pageBits
runtime.pageBits
*runtime.pageCache
runtime.pageCache
runtime.pageTraceBuf
*runtime.pallocBits
runtime.pallocBits
*runtime.pallocData
runtime.pallocData
*runtime.pallocSum
[]runtime.pallocSum
runtime.pallocSum
*runtime._panic
runtime._panic
*runtime.PanicNilError
runtime.PanicNilError
*runtime.pcHeader
runtime.pcHeader
*runtime.pcvalueCache
runtime.pcvalueCache
runtime.pcvalueCacheEnt
*runtime.persistentAlloc
runtime.persistentAlloc
runtime.perThreadSyscallArgs
*runtime.piController
runtime.piController
*runtime.pinner
runtime.pinner
*runtime.pinnerBits
runtime.pinnerBits
*runtime.pinState
runtime.pinState
*runtime.plainError
runtime.plainError
runtime.pMask
*runtime.pollCache
runtime.pollCache
*runtime.pollDesc
runtime.pollDesc
runtime.pollInfo
*runtime.profAtomic
runtime.profAtomic
*runtime.profBuf
runtime.profBuf
runtime.profBufReadMode
runtime.profIndex
*runtime.ptabEntry
[]runtime.ptabEntry
runtime.ptabEntry
*runtime.pTraceState
runtime.pTraceState
*runtime.puintptr
runtime.puintptr
*runtime.randomEnum
runtime.randomEnum
*runtime.randomOrder
runtime.randomOrder
*runtime.reflectMethodValue
runtime.reflectMethodValue
runtime.rtype
*runtime.rwmutex
runtime.rwmutex
*runtime.scase
[]runtime.scase
runtime.scase
*runtime.scavChunkData
runtime.scavChunkData
*runtime.scavChunkFlags
runtime.scavChunkFlags
*runtime.scavengeIndex
runtime.scavengeIndex
*runtime.scavengerState
runtime.scavengerState
runtime.schedt
runtime.selectDir
runtime.semaProfileFlags
*runtime.semaRoot
runtime.semaRoot
*runtime.semTable
runtime.semTable
*runtime.sigactiont
runtime.sigactiont
*runtime.sigcontext
runtime.sigcontext
*runtime.sigctxt
runtime.sigctxt
runtime.sigevent
runtime.sigeventFields
*runtime.siginfo
runtime.siginfo
runtime.siginfoFields
*runtime.sigset
runtime.sigset
runtime.sigTabT
*runtime.slice
runtime.slice
runtime.spanAllocType
runtime.spanClass
*runtime.spanSet
runtime.spanSet
*runtime.spanSetBlock
runtime.spanSetBlock
*runtime.spanSetBlockAlloc
runtime.spanSetBlockAlloc
runtime.spanSetSpinePointer
**runtime.special
*runtime.special
runtime.special
*runtime.specialfinalizer
runtime.specialfinalizer
*runtime.specialprofile
runtime.specialprofile
*runtime.specialReachable
runtime.specialReachable
*runtime.specialsIter
runtime.specialsIter
runtime.srcFunc
*runtime.stack
runtime.stack
*runtime.stackfreelist
runtime.stackfreelist
*runtime.stackmap
runtime.stackmap
*runtime.stackObject
runtime.stackObject
*runtime.stackObjectBuf
runtime.stackObjectBuf
runtime.stackObjectBufHdr
*runtime.stackObjectRecord
[]runtime.stackObjectRecord
runtime.stackObjectRecord
runtime.stackpoolItem
*runtime.StackRecord
[]runtime.StackRecord
runtime.StackRecord
*runtime.stackScanState
runtime.stackScanState
*runtime.stackt
runtime.stackt
**runtime.stackWorkBuf
*runtime.stackWorkBuf
runtime.stackWorkBuf
runtime.stackWorkBufHdr
*runtime.statAggregate
runtime.statAggregate
*runtime.statDep
[]runtime.statDep
runtime.statDep
runtime.statDepSet
*runtime.stkframe
runtime.stkframe
runtime.stringer
*runtime.stringStruct
runtime.stringStruct
runtime.stringStructDWARF
runtime.stwReason
**runtime.sudog
*runtime.sudog
[]*runtime.sudog
runtime.sudog
runtime.suspendGState
*runtime.sweepClass
runtime.sweepClass
runtime.sweepdata
*runtime.sweepLocked
runtime.sweepLocked
*runtime.sweepLocker
runtime.sweepLocker
*runtime.sysMemStat
runtime.sysMemStat
*runtime.sysmontick
runtime.sysmontick
runtime.sysStatsAggregate
runtime.taggedPointer
*runtime.textsect
[]runtime.textsect
runtime.textsect
runtime.throwType
*runtime.timeHistogram
runtime.timeHistogram
**runtime.timer
*runtime.timer
[]*runtime.timer
runtime.timer
*runtime.timespec
runtime.timespec
*runtime.tmpBuf
runtime.tmpBuf
*runtime.traceAlloc
runtime.traceAlloc
*runtime.traceAllocBlock
runtime.traceAllocBlock
*runtime.traceAllocBlockPtr
runtime.traceAllocBlockPtr
runtime.traceBlockReason
**runtime.traceBuf
*runtime.traceBuf
runtime.traceBuf
runtime.traceBufHeader
*runtime.traceBufPtr
runtime.traceBufPtr
; runtime/trace.fd uintptr; runtime/trace.varp uintptr; runtime/trace.framepc uintptr }
*runtime.traceFrame
[]runtime.traceFrame
runtime.traceFrame
*runtime.traceStack
runtime.traceStack
runtime.traceStackPtr
*runtime.traceStackTable
runtime.traceStackTable
runtime.tracestat
runtime.traceTime
*runtime.TypeAssertionError
runtime.TypeAssertionError
runtime._typePair
*runtime.unwinder
runtime.unwinder
runtime.unwindFlags
*runtime.vdsoInfo
runtime.vdsoInfo
*runtime.vdsoSymbolKey
[]runtime.vdsoSymbolKey
runtime.vdsoSymbolKey
*runtime.vdsoVersionKey
runtime.vdsoVersionKey
*runtime.waitq
runtime.waitq
*runtime.waitReason
runtime.waitReason
; runtime.waitsince int64; runtime.waitreason runtime.waitReason; runtime.preempt bool; runtime.preemptStop bool; ru
*runtime.wbBuf
runtime.wbBuf
*runtime.workbuf
runtime.workbuf
runtime.workbufhdr
runtime.workType
runtime.writeHeapBits
runtime.xmmreg1
r.varp uintptr; go/parser.framepc uintptr }
ryptobyte._panic uintptr; vendor/golang.org/x/crypto/cryptobyte.link uintptr; vendor/golang.org/x/crypto/cryptobyte.
SA bool; internal/cpu._ internal/cpu.CacheLinePad }
safe.Pointer; runtime.atomicstatus runtime/internal/atomic.Uint32; runtime.stackLock uint32; runtime.goid uint64; ru
sched runtime.gobuf; runtime.syscallsp uintptr; runtime.syscallpc uintptr; runtime.stktopsp uintptr; runtime.param u
s []*cmd/go/internal/load.Package; cmd/go/internal/load.stk *cmd/go/internal/load.ImportStack; cmd/go/internal/load.
s; cmd/go/internal/par.err error }]
Sending output to pager...
/singleflight._panic uintptr; internal/singleflight.link uintptr; internal/singleflight.fd uintptr; internal/singlef
sion }
sion string "json:\",omitempty\"" }; cmd/go/internal/par.err error }]
slices.sortedHint
*slices.xorshift
slices.xorshift
sort.Interface
sort.lessSwap
sort.sortedHint
*sort.xorshift
sort.xorshift
SpanPointer }
sponse; net/http.reqs *[]*net/http.Request }
sp uintptr; mime/multipart.pc uintptr; mime/multipart.fn uintptr; mime/multipart._panic uintptr; mime/multipart.link
st }
.stackguard1 uintptr; runtime._panic *runtime._panic; runtime._defer *runtime._defer; runtime.m *runtime.m; runtime.
stackguard1 uintptr; runtime._panic *runtime._panic; runtime._defer *runtime._defer; runtime.m *runtime.m; runtime.s
Stat(context.Context, string) (*cmd/go/internal/modfetch/codehost.RevInfo, error); Tags(context.Context, string) (*c
stBytes int64 }
*strconv.decimal
strconv.decimal
*strconv.decimalSlice
strconv.decimalSlice
*strconv.floatInfo
strconv.floatInfo
*strconv.leftCheat
[]strconv.leftCheat
strconv.leftCheat
*strconv.NumError
strconv.NumError
 string }
*[][]string
*[]string
*string
*string }
[][]string
[]string
string
string }
(string) bool; cmd/go/internal/modfetch/codehost.tag *string }
(string) bool; cmd/go/internal/modload.firstError func(*cmd/go/internal/search.Match) error; cmd/go/internal/modload
 string; cmd/go/internal/load.parentIsStd bool; cmd/go/internal/load.mode int },go.shape.struct { cmd/go/internal/lo
string; cmd/go/internal/modconv.versions []cmd/vendor/golang.org/x/mod/module.Version }
]string; cmd/go/internal/test.timeoutSet *bool; cmd/go/internal/test.outputDirSet *bool }
 *[]string; cmd/go/internal/work.gatherSyso *func(*cmd/go/internal/work.Action) }
, string, func(string) bool) (string, error); Stat(context.Context, string) (*cmd/go/internal/modfetch/codehost.RevI
, string, int64) ([]uint8, error); ReadZip(context.Context, string, string, int64) (io.ReadCloser, error); RecentTag
string, ...interface {}); cmd/go/internal/modload.describe func(cmd/vendor/golang.org/x/mod/module.Version) string }
 string "json:\",omitempty\"" }]; cmd/go/internal/mvs..autotmp_6 *[11]uintptr }
*strings.appendSliceWriter
strings.appendSliceWriter
*strings.asciiSet
strings.asciiSet
*strings.Builder
strings.Builder
*strings.byteReplacer
strings.byteReplacer
*strings.byteStringReplacer
strings.byteStringReplacer
*strings.genericReplacer
strings.genericReplacer
*strings.Reader
strings.Reader
strings.replacer
*strings.Replacer
strings.Replacer
*strings.singleStringReplacer
strings.singleStringReplacer
*strings.span·1
[]strings.span·1
strings.span·1
*strings.stringFinder
strings.stringFinder
*strings.stringWriter
strings.stringWriter
() string; Stat(context.Context, string) (*cmd/go/internal/modfetch.RevInfo, error); Versions(context.Context, strin
**strings.trieNode
*strings.trieNode
[]*strings.trieNode
strings.trieNode
*struct {}
struct {}
struct { cmd/go/internal/cfg.once sync.Once; cmd/go/internal/cfg.m map[string]string }
struct { cmd/go/internal/load.p *go/build.Package; cmd/go/internal/load.err error }
struct { cmd/go/internal/modfetch.mu sync.Mutex; cmd/go/internal/modfetch.m map[cmd/vendor/golang.org/x/mod/module.V
.struct { cmd/go/internal/par.v cmd/go/internal/modfetch/codehost.Repo; cmd/go/internal/par.err error }]; cmd/go/int
struct { cmd/go/internal/test.f *os.File; sync.Mutex }
struct { crypto/internal/edwards25519.table crypto/internal/edwards25519.nafLookupTable8; crypto/internal/edwards255
[]struct { crypto/tls.scheme crypto/tls.SignatureScheme; crypto/tls.minModulusBytes int; crypto/tls.maxVersion uint1
*struct { crypto/tls.scheme crypto/tls.SignatureScheme; crypto/tls.minModulusBytes int; crypto/tls.maxVersion uint16
struct { crypto/tls.scheme crypto/tls.SignatureScheme; crypto/tls.minModulusBytes int; crypto/tls.maxVersion uint16 
[]struct { crypto/x509.algo crypto/x509.SignatureAlgorithm; crypto/x509.name string; crypto/x509.oid encoding/asn1.O
*struct { crypto/x509.algo crypto/x509.SignatureAlgorithm; crypto/x509.name string; crypto/x509.oid encoding/asn1.Ob
struct { crypto/x509.algo crypto/x509.SignatureAlgorithm; crypto/x509.name string; crypto/x509.oid encoding/asn1.Obj
*struct { crypto/x509.extKeyUsage crypto/x509.ExtKeyUsage; crypto/x509.oid encoding/asn1.ObjectIdentifier }
[]struct { crypto/x509.extKeyUsage crypto/x509.ExtKeyUsage; crypto/x509.oid encoding/asn1.ObjectIdentifier }
struct { crypto/x509.extKeyUsage crypto/x509.ExtKeyUsage; crypto/x509.oid encoding/asn1.ObjectIdentifier }
*struct { debug/plan9obj.name string; debug/plan9obj.size uint32 }
[]struct { debug/plan9obj.name string; debug/plan9obj.size uint32 }
struct { debug/plan9obj.name string; debug/plan9obj.size uint32 }
*struct { Dependencies []struct { ImportPath string; Revision string } }
struct { Dependencies []struct { ImportPath string; Revision string } }
*struct { encoding/json.ptr interface {}; encoding/json.len int }
struct { encoding/json.ptr interface {}; encoding/json.len int }
*struct { Entries []cmd/go/internal/modfetch/codehost.listEntry·1 "xml:\"entry\"" }
struct { Entries []cmd/go/internal/modfetch/codehost.listEntry·1 "xml:\"entry\"" }
*struct { F uintptr; archive/zip..autotmp_3 *sync.Mutex }
*struct { F uintptr; archive/zip..autotmp_6 *sync.Mutex }
*struct { F uintptr; archive/zip.files []archive/zip.fileListEntry; archive/zip.dir string }
*struct { F uintptr; archive/zip.files []archive/zip.fileListEntry; archive/zip.dir string; archive/zip.elem string 
*struct { F uintptr; archive/zip.r *archive/zip.Reader }
*struct { F uintptr; cmd/go/internal/base.checker *cmd/go/internal/base.netTokenChecker; cmd/go/internal/base.hasTok
*struct { F uintptr; cmd/go/internal/base.sig chan os.Signal }
*struct { F uintptr; cmd/go/internal/base.toolPath string }
*struct { F uintptr; cmd/go/internal/bug..autotmp_17 string }
*struct { F uintptr; cmd/go/internal/bug..autotmp_18 string }
*struct { F uintptr; cmd/go/internal/cache..autotmp_10 chan<- struct {} }
*struct { F uintptr; cmd/go/internal/cache..autotmp_17 *sync.Mutex }
*struct { F uintptr; cmd/go/internal/cache..autotmp_26 *cmd/go/internal/cache.ProgCache; cmd/go/internal/cache..auto
*struct { F uintptr; cmd/go/internal/cache..autotmp_28 *time.Ticker }
*struct { F uintptr; cmd/go/internal/cache..autotmp_37 *os.File }
*struct { F uintptr; cmd/go/internal/cache..autotmp_3 *sync.Mutex }
*struct { F uintptr; cmd/go/internal/cache..autotmp_58 *os.File }
*struct { F uintptr; cmd/go/internal/cache.err *error; cmd/go/internal/cache.c *cmd/go/internal/cache.ProgCache; cmd
*struct { F uintptr; cmd/go/internal/clean.packageFile map[string]bool }
*struct { F uintptr; cmd/go/internal/cmdflag.f **flag.Flag; cmd/go/internal/cmdflag.args *[]string }
*struct { F uintptr; cmd/go/internal/envcmd.add map[string]string; cmd/go/internal/envcmd.del map[string]bool }
*struct { F uintptr; cmd/go/internal/envcmd.b *cmd/go/internal/work.Builder }
*struct { F uintptr; cmd/go/internal/envcmd.lines []string }
*struct { F uintptr; cmd/go/internal/fsys..autotmp_6 *sync.Mutex }
*struct { F uintptr; cmd/go/internal/fsys.sortedFiles []io/fs.FileInfo }
*struct { F uintptr; cmd/go/internal/generate.ok *bool }
*struct { F uintptr; cmd/go/internal/get.parent *cmd/go/internal/load.Package; cmd/go/internal/get.ctx context.Conte
*struct { F uintptr; cmd/go/internal/get.path string }
*struct { F uintptr; cmd/go/internal/gover.list []cmd/vendor/golang.org/x/mod/module.Version }
*struct { F uintptr; cmd/go/internal/list.argToMods map[string][]*cmd/go/internal/modinfo.ModulePublic; cmd/go/inter
*struct { F uintptr; cmd/go/internal/list..autotmp_87 *bufio.Writer }
*struct { F uintptr; cmd/go/internal/list.b *cmd/go/internal/work.Builder }
*struct { F uintptr; cmd/go/internal/list.cachedCtxt **cmd/go/internal/list.Context }
*struct { F uintptr; cmd/go/internal/list.ctx context.Context }
*struct { F uintptr; cmd/go/internal/list.data []uint8; cmd/go/internal/list.c cmd/go/internal/cache.Cache; cmd/go/i
*struct { F uintptr; cmd/go/internal/list.out *cmd/go/internal/list.TrackingWriter }
*struct { F uintptr; cmd/go/internal/list.p *cmd/go/internal/load.Package }
*struct { F uintptr; cmd/go/internal/list.sema *cmd/vendor/golang.org/x/sync/semaphore.Weighted; cmd/go/internal/lis
*struct { F uintptr; cmd/go/internal/list.tmpl *text/template.Template; cmd/go/internal/list.out *cmd/go/internal/li
*struct { F uintptr; cmd/go/internal/load..autotmp_17 *cmd/go/internal/load.ImportStack }
*struct { F uintptr; cmd/go/internal/load..autotmp_18 *cmd/go/internal/trace.Span }
*struct { F uintptr; cmd/go/internal/load..autotmp_25 *os.File }
*struct { F uintptr; cmd/go/internal/load..autotmp_32 *cmd/go/internal/trace.Span }
*struct { F uintptr; cmd/go/internal/load..autotmp_33 *cmd/go/internal/load.preload }
*struct { F uintptr; cmd/go/internal/load..autotmp_36 *cmd/go/internal/trace.Span }
*struct { F uintptr; cmd/go/internal/load..autotmp_37 *cmd/go/internal/load.ImportStack }
*struct { F uintptr; cmd/go/internal/load..autotmp_45 *cmd/go/internal/load.ImportStack }
*struct { F uintptr; cmd/go/internal/load..autotmp_64 *cmd/go/internal/trace.Span }
*struct { F uintptr; cmd/go/internal/load..autotmp_65 *cmd/go/internal/load.preload }
*struct { F uintptr; cmd/go/internal/load..autotmp_6 func(string); cmd/go/internal/load..autotmp_7 string }
*struct { F uintptr; cmd/go/internal/load..autotmp_7 func(string); cmd/go/internal/load..autotmp_8 string }
*struct { F uintptr; cmd/go/internal/load.cover *cmd/go/internal/load.TestCover; cmd/go/internal/load.p *cmd/go/inte
*struct { F uintptr; cmd/go/internal/load.ctx context.Context; cmd/go/internal/load.opts cmd/go/internal/load.Packag
*struct { F uintptr; cmd/go/internal/load.ctx context.Context; cmd/go/internal/load.parent *go/build.Package; cmd/go
*struct { F uintptr; cmd/go/internal/load.ctx context.Context; cmd/go/internal/load.pre *cmd/go/internal/load.preloa
*struct { F uintptr; cmd/go/internal/load.debugModFromModinfo *func(*cmd/go/internal/modinfo.ModulePublic) *runtime/
*struct { F uintptr; cmd/go/internal/load.didSplit *bool; cmd/go/internal/load.testCopy map[*cmd/go/internal/load.Pa
*struct { F uintptr; cmd/go/internal/load.dirent []io/fs.FileInfo }
*struct { F uintptr; cmd/go/internal/load.dir string }
*struct { F uintptr; cmd/go/internal/load.dir string; cmd/go/internal/load.matchPath func(string) bool }
*struct { F uintptr; cmd/go/internal/load.dir string; cmd/go/internal/load.path *string }
*struct { F uintptr; cmd/go/internal/load.err *error; cmd/go/internal/load.pattern *string }
*struct { F uintptr; cmd/go/internal/load.ex []*go/doc.Example }
*struct { F uintptr; cmd/go/internal/load.importPaths *[]string; cmd/go/internal/load.p *cmd/go/internal/load.Packag
*struct { F uintptr; cmd/go/internal/load.info *runtime/debug.BuildInfo }
*struct { F uintptr; cmd/go/internal/load.loaded *bool; cmd/go/internal/load.r cmd/go/internal/load.resolvedImport; 
*struct { F uintptr; cmd/go/internal/load.matchPath func(string) bool }
*struct { F uintptr; cmd/go/internal/load.mode int }
*struct { F uintptr; cmd/go/internal/load.parallelizablePart func(); cmd/go/internal/load.done func() }
*struct { F uintptr; cmd/go/internal/load.parentPath string; cmd/go/internal/load.parentIsStd bool; cmd/go/internal/
*struct { F uintptr; cmd/go/internal/load.path string }
*struct { F uintptr; cmd/go/internal/load.p *cmd/go/internal/load.Package }
*struct { F uintptr; cmd/go/internal/load.p *cmd/go/internal/load.Package; cmd/go/internal/load.stk *cmd/go/internal
*struct { F uintptr; cmd/go/internal/load.pkgdir string; cmd/go/internal/load.file *string; cmd/go/internal/load.all
*struct { F uintptr; cmd/go/internal/load.seen map[*cmd/go/internal/load.Package]bool; cmd/go/internal/load.walk *fu
*struct { F uintptr; cmd/go/internal/load.setPkgErrorf func(string, ...interface {}) }
*struct { F uintptr; cmd/go/internal/load.shouldDelete map[string]bool }
*struct { F uintptr; cmd/go/internal/load.vcsCmd *cmd/go/internal/vcs.Cmd; cmd/go/internal/load.repoDir string }
*struct { F uintptr; cmd/go/internal/load.visited map[*cmd/go/internal/load.Package]*cmd/go/internal/load.Package; c
*struct { F uintptr; cmd/go/internal/lockedfile..autotmp_22 *cmd/go/internal/lockedfile.File }
*struct { F uintptr; cmd/go/internal/lockedfile..autotmp_9 *cmd/go/internal/lockedfile.File }
*struct { F uintptr; cmd/go/internal/lockedfile.err *error; cmd/go/internal/lockedfile.f *cmd/go/internal/lockedfile
*struct { F uintptr; cmd/go/internal/lockedfile.mu *cmd/go/internal/lockedfile.Mutex; cmd/go/internal/lockedfile.f *
*struct { F uintptr; cmd/go/internal/modcmd..autotmp_10 *bufio.Writer }
*struct { F uintptr; cmd/go/internal/modcmd..autotmp_11 *os.File }
*struct { F uintptr; cmd/go/internal/modcmd.ctx context.Context; cmd/go/internal/modcmd.m *cmd/go/internal/modcmd.Mo
*struct { F uintptr; cmd/go/internal/modcmd.data []uint8; cmd/go/internal/modcmd.out []uint8 }
*struct { F uintptr; cmd/go/internal/modcmd.errsc chan []error; cmd/go/internal/modcmd.ctx context.Context; cmd/go/i
*struct { F uintptr; cmd/go/internal/modcmd.mg *cmd/go/internal/modload.ModuleGraph; cmd/go/internal/modcmd.format f
*struct { F uintptr; cmd/go/internal/modcmd.oldPath string; cmd/go/internal/modcmd.oldVersion string; cmd/go/interna
*struct { F uintptr; cmd/go/internal/modcmd.path string; cmd/go/internal/modcmd.arg string }
*struct { F uintptr; cmd/go/internal/modcmd.path string; cmd/go/internal/modcmd.version string; cmd/go/internal/modc
*struct { F uintptr; cmd/go/internal/modcmd.vi cmd/vendor/golang.org/x/mod/modfile.VersionInterval; cmd/go/internal/
*struct { F uintptr; cmd/go/internal/modcmd.w *bufio.Writer }
*struct { F uintptr; cmd/go/internal/modconv..autotmp_38 func(int, cmd/vendor/golang.org/x/mod/module.Version); cmd/
*struct { F uintptr; cmd/go/internal/modconv.sem chan cmd/go/internal/modconv.token·1 }
*struct { F uintptr; cmd/go/internal/modconv.sem chan cmd/go/internal/modconv.token·1; cmd/go/internal/modconv.query
*struct { F uintptr; cmd/go/internal/modfetch..autotmp_12 io.ReadCloser }
*struct { F uintptr; cmd/go/internal/modfetch..autotmp_17 io.ReadCloser }
*struct { F uintptr; cmd/go/internal/modfetch..autotmp_17 *sync.Mutex }
*struct { F uintptr; cmd/go/internal/modfetch..autotmp_19 *cmd/go/internal/lockedfile.File }
*struct { F uintptr; cmd/go/internal/modfetch..autotmp_38 *cmd/go/internal/trace.Span }
*struct { F uintptr; cmd/go/internal/modfetch..autotmp_39 *cmd/go/internal/trace.Span }
*struct { F uintptr; cmd/go/internal/modfetch..autotmp_40 *cmd/go/internal/trace.Span }
*struct { F uintptr; cmd/go/internal/modfetch..autotmp_53 io.ReadCloser }
*struct { F uintptr; cmd/go/internal/modfetch..autotmp_54 string }
*struct { F uintptr; cmd/go/internal/modfetch..autotmp_55 *os.File }
*struct { F uintptr; cmd/go/internal/modfetch..autotmp_8 *sync.Mutex }
*struct { F uintptr; cmd/go/internal/modfetch..autotmp_9 *sync.Mutex }
*struct { F uintptr; cmd/go/internal/modfetch.c *cmd/go/internal/modfetch.dbClient }
*struct { F uintptr; cmd/go/internal/modfetch/codehost..autotmp_26 *sync.Mutex }
*struct { F uintptr; cmd/go/internal/modfetch/codehost..autotmp_2 string }
*struct { F uintptr; cmd/go/internal/modfetch/codehost..autotmp_35 string }
*struct { F uintptr; cmd/go/internal/modfetch/codehost.c *os/exec.Cmd }
*struct { F uintptr; cmd/go/internal/modfetch/codehost.ctx context.Context; cmd/go/internal/modfetch/codehost.vcs st
*struct { F uintptr; cmd/go/internal/modfetch/codehost.err *error; cmd/go/internal/modfetch/codehost.ctx context.Con
*struct { F uintptr; cmd/go/internal/modfetch/codehost.f *os.File; cmd/go/internal/modfetch/codehost.err *error }
*struct { F uintptr; cmd/go/internal/modfetch/codehost.info **cmd/go/internal/modfetch/codehost.RevInfo; cmd/go/inte
*struct { F uintptr; cmd/go/internal/modfetch/codehost.r *cmd/go/internal/modfetch/codehost.gitRepo; cmd/go/internal
*struct { F uintptr; cmd/go/internal/modfetch/codehost.r *cmd/go/internal/modfetch/codehost.vcsRepo; cmd/go/internal
*struct { F uintptr; cmd/go/internal/modfetch/codehost.tags *cmd/go/internal/modfetch/codehost.Tags }
*struct { F uintptr; cmd/go/internal/modfetch/codehost.xLog io.Writer; cmd/go/internal/modfetch/codehost.start time.
*struct { F uintptr; cmd/go/internal/modfetch.ctx context.Context; cmd/go/internal/modfetch.mod cmd/vendor/golang.or
*struct { F uintptr; cmd/go/internal/modfetch.ctx context.Context; cmd/go/internal/modfetch.path string; cmd/go/inte
*struct { F uintptr; cmd/go/internal/modfetch.ctx context.Context; cmd/go/internal/modfetch.r *cmd/go/internal/modfe
*struct { F uintptr; cmd/go/internal/modfetch.data []uint8 }
*struct { F uintptr; cmd/go/internal/modfetch.data *[]uint8; cmd/go/internal/modfetch.ctx context.Context; cmd/go/in
*struct { F uintptr; cmd/go/internal/modfetch.dirs *[]cmd/go/internal/modfetch.pathMode·1 }
*struct { F uintptr; cmd/go/internal/modfetch.err *error; cmd/go/internal/modfetch.f *os.File }
*struct { F uintptr; cmd/go/internal/modfetch.err error; cmd/go/internal/modfetch.f *os.File }
*struct { F uintptr; cmd/go/internal/modfetch.err *error; cmd/go/internal/modfetch.version string; cmd/go/internal/m
*struct { F uintptr; cmd/go/internal/modfetch.f *cmd/go/internal/lockedfile.File; cmd/go/internal/modfetch.err *erro
*struct { F uintptr; cmd/go/internal/modfetch.hf *cmd/go/internal/lockedfile.File; cmd/go/internal/modfetch.err *err
*struct { F uintptr; cmd/go/internal/modfetch.info *cmd/go/internal/modfetch.RevInfo }
*struct { F uintptr; cmd/go/internal/modfetch.keep map[cmd/vendor/golang.org/x/mod/module.Version]bool }
*struct { F uintptr; cmd/go/internal/modfetch.l *cmd/go/internal/modfetch.loggingRepo; cmd/go/internal/modfetch.err 
*struct { F uintptr; cmd/go/internal/modfetch.list []string }
*struct { F uintptr; cmd/go/internal/modfetch.p *cmd/go/internal/modfetch.proxyRepo; cmd/go/internal/modfetch.ctx co
*struct { F uintptr; cmd/go/internal/modfetch.p *cmd/go/internal/modfetch.proxyRepo; cmd/go/internal/modfetch.err er
*struct { F uintptr; cmd/go/internal/modfetch.proxy string; cmd/go/internal/modfetch.path string }
*struct { F uintptr; cmd/go/internal/modfetch.r *cmd/go/internal/modfetch.cachingRepo; cmd/go/internal/modfetch.ctx 
*struct { F uintptr; cmd/go/internal/modfetch.r *cmd/go/internal/modfetch.codeRepo; cmd/go/internal/modfetch.ctx con
*struct { F uintptr; cmd/go/internal/modfetch.r *cmd/go/internal/modfetch.codeRepo; cmd/go/internal/modfetch.incompa
*struct { F uintptr; cmd/go/internal/modfetch.r *cmd/go/internal/modfetch.codeRepo; cmd/go/internal/modfetch.v *stri
*struct { F uintptr; cmd/go/internal/modfetch.rem []string; cmd/go/internal/modfetch.major string }
*struct { F uintptr; cmd/go/internal/modfetch.retractions []cmd/vendor/golang.org/x/mod/modfile.VersionInterval }
*struct { F uintptr; cmd/go/internal/modfetch.start time.Time; cmd/go/internal/modfetch.format string; cmd/go/intern
*struct { F uintptr; cmd/go/internal/modfetch.tagPrefix string }
*struct { F uintptr; cmd/go/internal/modfetch.tagToVersion func(string) (string, bool); cmd/go/internal/modfetch.r *
*struct { F uintptr; cmd/go/internal/modfetch.unrecoverableErr *error; cmd/go/internal/modfetch.ctx context.Context;
*struct { F uintptr; cmd/go/internal/modget.ctx context.Context; cmd/go/internal/modget.deprecations []cmd/go/intern
*struct { F uintptr; cmd/go/internal/modget.ctx context.Context; cmd/go/internal/modget.mActual cmd/vendor/golang.or
*struct { F uintptr; cmd/go/internal/modget.ctx context.Context; cmd/go/internal/modget.pattern string; cmd/go/inter
*struct { F uintptr; cmd/go/internal/modget.ctx context.Context; cmd/go/internal/modget.retractions []cmd/go/interna
*struct { F uintptr; cmd/go/internal/modget.curM *cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/modget
*struct { F uintptr; cmd/go/internal/modget.deprecations []cmd/go/internal/modget.modMessage·2 }
*struct { F uintptr; cmd/go/internal/modget.findPackage func(context.Context, string, cmd/vendor/golang.org/x/mod/mo
*struct { F uintptr; cmd/go/internal/modget.q **cmd/go/internal/modget.query }
*struct { F uintptr; cmd/go/internal/modget.q *cmd/go/internal/modget.query }
*struct { F uintptr; cmd/go/internal/modget.q **cmd/go/internal/modget.query; cmd/go/internal/modget.ctx context.Con
*struct { F uintptr; cmd/go/internal/modget.q **cmd/go/internal/modget.query; cmd/go/internal/modget.r *cmd/go/inter
*struct { F uintptr; cmd/go/internal/modget.q *cmd/go/internal/modget.query; cmd/go/internal/modget.r *cmd/go/intern
*struct { F uintptr; cmd/go/internal/modget.r *cmd/go/internal/modget.resolver }
*struct { F uintptr; cmd/go/internal/modget.r *cmd/go/internal/modget.resolver; cmd/go/internal/modget.ctx context.C
*struct { F uintptr; cmd/go/internal/modget.r *cmd/go/internal/modget.resolver; cmd/go/internal/modget.curM *cmd/ven
*struct { F uintptr; cmd/go/internal/modget.r *cmd/go/internal/modget.resolver; cmd/go/internal/modget.mu *sync.Mute
*struct { F uintptr; cmd/go/internal/modget.requested string; cmd/go/internal/modget.selected func(string) string }
*struct { F uintptr; cmd/go/internal/modget.retractions []cmd/go/internal/modget.modMessage·2 }
*struct { F uintptr; cmd/go/internal/modget.sortedChanges []cmd/go/internal/modget.change·3 }
*struct { F uintptr; cmd/go/internal/modget.upgrades *[]cmd/go/internal/modget.pathSet }
*struct { F uintptr; cmd/go/internal/modindex.args *string; cmd/go/internal/modindex.trimBytes func(int) }
*struct { F uintptr; cmd/go/internal/modindex..autotmp_3 bool }
*struct { F uintptr; cmd/go/internal/modindex..autotmp_74 bool; cmd/go/internal/modindex..autotmp_75 *error }
*struct { F uintptr; cmd/go/internal/modindex..autotmp_7 bool }
*struct { F uintptr; cmd/go/internal/modindex..autotmp_7 bool; cmd/go/internal/modindex..autotmp_8 *error }
*struct { F uintptr; cmd/go/internal/modindex.badGoError *error; cmd/go/internal/modindex.badGoFiles map[string]bool
*struct { F uintptr; cmd/go/internal/modindex.ctxt *cmd/go/internal/modindex.Context; cmd/go/internal/modindex.allTa
*struct { F uintptr; cmd/go/internal/modindex.err *error }
*struct { F uintptr; cmd/go/internal/modindex.modroot string; cmd/go/internal/modindex.ismodcache bool }
*struct { F uintptr; cmd/go/internal/modindex.packages []*cmd/go/internal/modindex.rawPackage }
*struct { F uintptr; cmd/go/internal/modindex.path string; cmd/go/internal/modindex.m *cmd/go/internal/modindex.Modu
*struct { F uintptr; cmd/go/internal/modindex.pkgdir string; cmd/go/internal/modindex.modroot string }
*struct { F uintptr; cmd/go/internal/modindex.pos *go/token.Position; cmd/go/internal/modindex.args *string }
*struct { F uintptr; cmd/go/internal/modindex.root string; cmd/go/internal/modindex.modroot string; cmd/go/internal/
*struct { F uintptr; cmd/go/internal/modindex.sf *cmd/go/internal/modindex.sourceFile }
*struct { F uintptr; cmd/go/internal/modload..autotmp_12 *cmd/go/internal/trace.Span }
*struct { F uintptr; cmd/go/internal/modload..autotmp_14 *cmd/go/internal/trace.Span }
*struct { F uintptr; cmd/go/internal/modload..autotmp_18 *cmd/go/internal/trace.Span }
*struct { F uintptr; cmd/go/internal/modload..autotmp_25 *cmd/go/internal/trace.Span }
*struct { F uintptr; cmd/go/internal/modload..autotmp_26 func(string, *cmd/go/internal/modload.result·5); cmd/go/int
*struct { F uintptr; cmd/go/internal/modload..autotmp_30 *cmd/go/internal/trace.Span }
*struct { F uintptr; cmd/go/internal/modload..autotmp_3 *sync.Mutex }
*struct { F uintptr; cmd/go/internal/modload..autotmp_61 *cmd/go/internal/trace.Span }
*struct { F uintptr; cmd/go/internal/modload..autotmp_7 *cmd/go/internal/trace.Span }
*struct { F uintptr; cmd/go/internal/modload.ctx context.Context; cmd/go/internal/modload.dir string }
*struct { F uintptr; cmd/go/internal/modload.ctx context.Context; cmd/go/internal/modload.m *cmd/go/internal/search.
*struct { F uintptr; cmd/go/internal/modload.ctx *context.Context; cmd/go/internal/modload.m cmd/vendor/golang.org/x
*struct { F uintptr; cmd/go/internal/modload.ctx context.Context; cmd/go/internal/modload.path string }
*struct { F uintptr; cmd/go/internal/modload.ctx context.Context; cmd/go/internal/modload.path string; cmd/go/intern
*struct { F uintptr; cmd/go/internal/modload.ctx context.Context; cmd/go/internal/modload.pkg *cmd/go/internal/modlo
*struct { F uintptr; cmd/go/internal/modload.ctx context.Context; cmd/go/internal/modload.rs *cmd/go/internal/modloa
*struct { F uintptr; cmd/go/internal/modload.current func(string) string; cmd/go/internal/modload.query string; cmd/
*struct { F uintptr; cmd/go/internal/modload.d *string }
*struct { F uintptr; cmd/go/internal/modload.err *error; cmd/go/internal/modload.m cmd/vendor/golang.org/x/mod/modul
*struct { F uintptr; cmd/go/internal/modload.err *error; cmd/go/internal/modload.resolved *string; cmd/go/internal/m
*struct { F uintptr; cmd/go/internal/modload.fixed *bool; cmd/go/internal/modload.ctx context.Context }
*struct { F uintptr; cmd/go/internal/modload.importPathRoot string; cmd/go/internal/modload.treeCanMatch func(string
*struct { F uintptr; cmd/go/internal/modload.imports []string; cmd/go/internal/modload.testImports []string }
*struct { F uintptr; cmd/go/internal/modload.info **cmd/go/internal/modfetch.RevInfo; cmd/go/internal/modload.ctx co
*struct { F uintptr; cmd/go/internal/modload.ld *cmd/go/internal/modload.loader; cmd/go/internal/modload.ctx context
*struct { F uintptr; cmd/go/internal/modload.ld *cmd/go/internal/modload.loader; cmd/go/internal/modload.goVersion s
*struct { F uintptr; cmd/go/internal/modload.loading *sync.Map; cmd/go/internal/modload.loadQueue *cmd/go/internal/p
*struct { F uintptr; cmd/go/internal/modload.loadOne func(cmd/vendor/golang.org/x/mod/module.Version) (*cmd/go/inter
*struct { F uintptr; cmd/go/internal/modload.mainModule cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/
*struct { F uintptr; cmd/go/internal/modload.matches *[]*cmd/go/internal/search.Match; cmd/go/internal/modload.opts 
*struct { F uintptr; cmd/go/internal/modload.m *cmd/go/internal/search.Match; cmd/go/internal/modload.root string; c
*struct { F uintptr; cmd/go/internal/modload.m cmd/vendor/golang.org/x/mod/module.Version }
*struct { F uintptr; cmd/go/internal/modload.m cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/modload.l
*struct { F uintptr; cmd/go/internal/modload.m cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/modload.m
*struct { F uintptr; cmd/go/internal/modload.mdir string; cmd/go/internal/modload.dir *string }
*struct { F uintptr; cmd/go/internal/modload.mg *cmd/go/internal/modload.ModuleGraph }
*struct { F uintptr; cmd/go/internal/modload.mg *cmd/go/internal/modload.ModuleGraph; cmd/go/internal/modload.keep m
*struct { F uintptr; cmd/go/internal/modload.mg *cmd/go/internal/modload.ModuleGraph; cmd/go/internal/modload.mu *sy
*struct { F uintptr; cmd/go/internal/modload.mod *cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/modloa
*struct { F uintptr; cmd/go/internal/modload.mode cmd/go/internal/modload.ListMode; cmd/go/internal/modload.ctx cont
*struct { F uintptr; cmd/go/internal/modload.mods []cmd/vendor/golang.org/x/mod/module.Version }
*struct { F uintptr; cmd/go/internal/modload.mp func(string) bool }
*struct { F uintptr; cmd/go/internal/modload.mustSelectVersion map[string]string; cmd/go/internal/modload.t *cmd/go/
*struct { F uintptr; cmd/go/internal/modload.mu *sync.Mutex; cmd/go/internal/modload.m *cmd/go/internal/search.Match
*struct { F uintptr; cmd/go/internal/modload.new []uint8; cmd/go/internal/modload.errNoChange error; cmd/go/internal
*struct { F uintptr; cmd/go/internal/modload.noneSelected func(string) string }
*struct { F uintptr; cmd/go/internal/modload.path string }
*struct { F uintptr; cmd/go/internal/modload.path string; cmd/go/internal/modload.ld *cmd/go/internal/modload.loader
*struct { F uintptr; cmd/go/internal/modload.path string; cmd/go/internal/modload.versions *[]string }
*struct { F uintptr; cmd/go/internal/modload.pattern string }
*struct { F uintptr; cmd/go/internal/modload.pattern string; cmd/go/internal/modload.ctx context.Context }
*struct { F uintptr; cmd/go/internal/modload.pkg *cmd/go/internal/modload.loadPkg; cmd/go/internal/modload.ld *cmd/g
*struct { F uintptr; cmd/go/internal/modload.proxy string; cmd/go/internal/modload.current func(string) string; cmd/
*struct { F uintptr; cmd/go/internal/modload.q *cmd/go/internal/par.Queue; cmd/go/internal/modload.m *cmd/go/interna
*struct { F uintptr; cmd/go/internal/modload.qm *cmd/go/internal/modload.queryMatcher; cmd/go/internal/modload.curre
*struct { F uintptr; cmd/go/internal/modload.qm *cmd/go/internal/modload.queryMatcher; cmd/go/internal/modload.query
*struct { F uintptr; cmd/go/internal/modload.qm *cmd/go/internal/modload.queryMatcher; cmd/go/internal/modload.v str
*struct { F uintptr; cmd/go/internal/modload.queryModule func(context.Context, string) (cmd/go/internal/modload.Quer
*struct { F uintptr; cmd/go/internal/modload.query string }
*struct { F uintptr; cmd/go/internal/modload.repo cmd/go/internal/modload.versionRepo; cmd/go/internal/modload.ctx c
*struct { F uintptr; cmd/go/internal/modload.reuse map[cmd/vendor/golang.org/x/mod/module.Version]*cmd/go/internal/m
*struct { F uintptr; cmd/go/internal/modload.rootPruning *cmd/go/internal/modload.modPruning; cmd/go/internal/modloa
*struct { F uintptr; cmd/go/internal/modload.roots *[]cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/mo
*struct { F uintptr; cmd/go/internal/modload.root string; cmd/go/internal/modload.pkgDir string; cmd/go/internal/mod
*struct { F uintptr; cmd/go/internal/modload.rs *cmd/go/internal/modload.Requirements; cmd/go/internal/modload.m *cm
*struct { F uintptr; cmd/go/internal/modload.rs *cmd/go/internal/modload.Requirements; cmd/go/internal/modload.vendo
*struct { F uintptr; cmd/go/internal/modload.seenrep map[cmd/vendor/golang.org/x/mod/module.Version]bool; cmd/go/int
*struct { F uintptr; cmd/go/internal/modload.sem chan cmd/go/internal/modload.token·2; cmd/go/internal/modload.mode 
*struct { F uintptr; cmd/go/internal/modload.updateMatches func(*cmd/go/internal/modload.Requirements, *cmd/go/inter
*struct { F uintptr; cmd/go/internal/modload.vendErrors *strings.Builder }
*struct { F uintptr; cmd/go/internal/modload.vendorDir string }
*struct { F uintptr; cmd/go/internal/modload.v string }
*struct { F uintptr; cmd/go/internal/mvs..autotmp_5 *cmd/go/internal/par.Work[go.shape.struct { Path string; Version
*struct { F uintptr; cmd/go/internal/mvs.errs map[cmd/vendor/golang.org/x/mod/module.Version]error }
*struct { F uintptr; cmd/go/internal/mvs.have map[cmd/vendor/golang.org/x/mod/module.Version]bool; cmd/go/internal/m
*struct { F uintptr; cmd/go/internal/mvs.min []cmd/vendor/golang.org/x/mod/module.Version }
*struct { F uintptr; cmd/go/internal/mvs.reqCache map[cmd/vendor/golang.org/x/mod/module.Version][]cmd/vendor/golang
*struct { F uintptr; cmd/go/internal/mvs.reqs cmd/go/internal/mvs.Reqs }
*struct { F uintptr; cmd/go/internal/mvs.reqs cmd/go/internal/mvs.Reqs; cmd/go/internal/mvs.upgrade func(cmd/vendor/
*struct { F uintptr; cmd/go/internal/mvs.upgrades map[cmd/vendor/golang.org/x/mod/module.Version]cmd/vendor/golang.o
*struct { F uintptr; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.[2]string,go.shape.struct { cmd/go/in
*struct { F uintptr; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.string,go.shape.bool]; cmd/go/interna
*struct { F uintptr; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.string,go.shape.interface { Error() s
*struct { F uintptr; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.string,go.shape.string]; cmd/go/inter
*struct { F uintptr; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.string,go.shape.struct { cmd/go/inter
*struct { F uintptr; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.string,go.shape.*uint8]; cmd/go/inter
*struct { F uintptr; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.struct { cmd/go/internal/load.path st
*struct { F uintptr; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.struct { cmd/go/internal/modfetch/cod
*struct { F uintptr; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.struct { cmd/go/internal/modfetch.pro
*struct { F uintptr; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.struct { cmd/go/internal/modget.patte
*struct { F uintptr; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.struct {},go.shape.struct { cmd/go/in
*struct { F uintptr; cmd/go/internal/par.c *cmd/go/internal/par.Cache[go.shape.struct { Path string; Version string 
*struct { F uintptr; cmd/go/internal/par.f *func(); cmd/go/internal/par.q *cmd/go/internal/par.Queue }
*struct { F uintptr; cmd/go/internal/par.f func() (go.shape.bool, error); cmd/go/internal/par..dict *[11]uintptr }
*struct { F uintptr; cmd/go/internal/par.f func() (go.shape.interface { CheckReuse(context.Context, *cmd/go/internal
*struct { F uintptr; cmd/go/internal/par.f func() (go.shape.[]string, error); cmd/go/internal/par..dict *[11]uintptr
*struct { F uintptr; cmd/go/internal/par.f func() (go.shape.string, error); cmd/go/internal/par..dict *[11]uintptr }
*struct { F uintptr; cmd/go/internal/par.f func() (go.shape.struct { Path string; Version string "json:\",omitempty\
*struct { F uintptr; cmd/go/internal/par.f func() (go.shape.struct { Revision string; CommitTime time.Time; Uncommit
*struct { F uintptr; cmd/go/internal/par.f func() (go.shape.*uint8, error); cmd/go/internal/par..dict *[11]uintptr }
*struct { F uintptr; cmd/go/internal/par.f func() (go.shape.[]uint8, error); cmd/go/internal/par..dict *[11]uintptr 
*struct { F uintptr; cmd/go/internal/par.pred func(go.shape.[2]string) bool; cmd/go/internal/par.c *cmd/go/internal/
*struct { F uintptr; cmd/go/internal/par.pred func(go.shape.string) bool; cmd/go/internal/par.c *cmd/go/internal/par
*struct { F uintptr; cmd/go/internal/par.pred func(go.shape.struct {}) bool; cmd/go/internal/par.c *cmd/go/internal/
*struct { F uintptr; cmd/go/internal/par.pred func(go.shape.struct { cmd/go/internal/load.path string; cmd/go/intern
*struct { F uintptr; cmd/go/internal/par.pred func(go.shape.struct { cmd/go/internal/modfetch/codehost.vcs string; c
*struct { F uintptr; cmd/go/internal/par.pred func(go.shape.struct { cmd/go/internal/modfetch.proxy string; cmd/go/i
*struct { F uintptr; cmd/go/internal/par.pred func(go.shape.struct { cmd/go/internal/modget.pattern string; cmd/go/i
*struct { F uintptr; cmd/go/internal/par.pred func(go.shape.struct { Path string; Version string "json:\",omitempty\
*struct { F uintptr; cmd/go/internal/par.q *cmd/go/internal/par.Queue; cmd/go/internal/par.st *cmd/go/internal/par.q
*struct { F uintptr; cmd/go/internal/run.b *cmd/go/internal/work.Builder }
*struct { F uintptr; cmd/go/internal/search.dir string; cmd/go/internal/search.prefix string; cmd/go/internal/search
*struct { F uintptr; cmd/go/internal/search.src *string; cmd/go/internal/search.m *cmd/go/internal/search.Match; cmd
*struct { F uintptr; cmd/go/internal/test.addFromGOFLAGS map[string]bool }
*struct { F uintptr; cmd/go/internal/test.addFromGOFLAGS map[string]bool; cmd/go/internal/test.injectedFlags *[]stri
*struct { F uintptr; cmd/go/internal/test..autotmp_13 *sync.Mutex }
*struct { F uintptr; cmd/go/internal/test..autotmp_14 *os.File }
*struct { F uintptr; cmd/go/internal/test..autotmp_5 *sync.Mutex }
*struct { F uintptr; cmd/go/internal/test..autotmp_70 *cmd/go/internal/trace.Span }
*struct { F uintptr; cmd/go/internal/test.b *cmd/go/internal/work.Builder }
*struct { F uintptr; cmd/go/internal/test.close func() error }
*struct { F uintptr; cmd/go/internal/test.cmd *os/exec.Cmd; cmd/go/internal/test.cancelKilled *bool; cmd/go/internal
*struct { F uintptr; cmd/go/internal/test.json *cmd/internal/test2json.Converter; cmd/go/internal/test.err *error }
*struct { F uintptr; cmd/go/internal/tool..autotmp_8 *os.File }
*struct { F uintptr; cmd/go/internal/tool.c chan os.Signal; cmd/go/internal/tool.toolCmd *os/exec.Cmd }
*struct { F uintptr; cmd/go/internal/toolchain..autotmp_24 string; cmd/go/internal/toolchain..autotmp_25 io/fs.FileM
*struct { F uintptr; cmd/go/internal/toolchain..autotmp_26 string; cmd/go/internal/toolchain..autotmp_27 io/fs.FileM
*struct { F uintptr; cmd/go/internal/toolchain.ctx context.Context; cmd/go/internal/toolchain.versions **cmd/go/inte
*struct { F uintptr; cmd/go/internal/toolchain.gotoolchain string }
*struct { F uintptr; cmd/go/internal/toolchain.list []string }
*struct { F uintptr; cmd/go/internal/toolchain.srcUGoMod string }
*struct { F uintptr; cmd/go/internal/trace.t *cmd/go/internal/trace.tracer; cmd/go/internal/trace.f *cmd/go/internal
*struct { F uintptr; cmd/go/internal/trace.t *cmd/go/internal/trace.tracer; cmd/go/internal/trace.f cmd/go/internal/
*struct { F uintptr; cmd/go/internal/vcs..autotmp_27 io.ReadCloser }
*struct { F uintptr; cmd/go/internal/vcs..autotmp_3 *sync.Mutex }
*struct { F uintptr; cmd/go/internal/vcs..autotmp_40 io.ReadCloser }
*struct { F uintptr; cmd/go/internal/vcs.importPrefix string }
*struct { F uintptr; cmd/go/internal/vcs.importPrefix string; cmd/go/internal/vcs.setCache func(cmd/go/internal/vcs.
*struct { F uintptr; cmd/go/internal/vet.addFromGOFLAGS map[string]bool; cmd/go/internal/vet.passToVet *[]string }
*struct { F uintptr; cmd/go/internal/vet..autotmp_30 *cmd/go/internal/trace.Span }
*struct { F uintptr; cmd/go/internal/vet.b *cmd/go/internal/work.Builder }
*struct { F uintptr; cmd/go/internal/vet.close func() error }
*struct { F uintptr; cmd/go/internal/vet.isVetFlag map[string]bool; cmd/go/internal/vet.addFromGOFLAGS map[string]bo
*struct { F uintptr; cmd/go/internal/web..autotmp_11 io.ReadCloser }
*struct { F uintptr; cmd/go/internal/web.security cmd/go/internal/web.SecurityMode }
*struct { F uintptr; cmd/go/internal/work.a1 **cmd/go/internal/work.Action; cmd/go/internal/work.fullShlib string; c
*struct { F uintptr; cmd/go/internal/work.a1 *cmd/go/internal/work.Action; cmd/go/internal/work.p *cmd/go/internal/l
*struct { F uintptr; cmd/go/internal/work.a1 **cmd/go/internal/work.Action; cmd/go/internal/work.shlib string; cmd/g
*struct { F uintptr; cmd/go/internal/work.a *cmd/go/internal/work.Action; cmd/go/internal/work.b *cmd/go/internal/wo
*struct { F uintptr; cmd/go/internal/work..autotmp_11 *sync.Mutex }
*struct { F uintptr; cmd/go/internal/work..autotmp_12 *os.File }
*struct { F uintptr; cmd/go/internal/work..autotmp_12 string }
*struct { F uintptr; cmd/go/internal/work..autotmp_147 *cmd/go/internal/work.Builder; cmd/go/internal/work..autotmp_
*struct { F uintptr; cmd/go/internal/work..autotmp_14 *cmd/go/internal/work.Builder; cmd/go/internal/work..autotmp_1
*struct { F uintptr; cmd/go/internal/work..autotmp_17 *cmd/go/internal/trace.Span }
*struct { F uintptr; cmd/go/internal/work..autotmp_19 *cmd/go/internal/trace.Span }
*struct { F uintptr; cmd/go/internal/work..autotmp_22 *os.File }
*struct { F uintptr; cmd/go/internal/work..autotmp_25 *os.File }
*struct { F uintptr; cmd/go/internal/work..autotmp_2 *sync.Mutex }
*struct { F uintptr; cmd/go/internal/work..autotmp_36 *sync.Mutex }
*struct { F uintptr; cmd/go/internal/work..autotmp_40 *sync.Mutex }
*struct { F uintptr; cmd/go/internal/work..autotmp_4 *sync.Mutex }
*struct { F uintptr; cmd/go/internal/work..autotmp_5 *sync.WaitGroup }
*struct { F uintptr; cmd/go/internal/work..autotmp_7 *sync.Map; cmd/go/internal/work..autotmp_8 interface {} }
*struct { F uintptr; cmd/go/internal/work..autotmp_7 *sync.Mutex }
*struct { F uintptr; cmd/go/internal/work..autotmp_8 *cmd/go/internal/work.Builder; cmd/go/internal/work..autotmp_9 
*struct { F uintptr; cmd/go/internal/work..autotmp_8 *os.File }
*struct { F uintptr; cmd/go/internal/work.b *cmd/go/internal/work.Builder }
*struct { F uintptr; cmd/go/internal/work.b *cmd/go/internal/work.Builder; cmd/go/internal/work.depMode cmd/go/inter
*struct { F uintptr; cmd/go/internal/work.b *cmd/go/internal/work.Builder; cmd/go/internal/work.mode cmd/go/internal
*struct { F uintptr; cmd/go/internal/work.b *cmd/go/internal/work.Builder; cmd/go/internal/work.objdir string }
*struct { F uintptr; cmd/go/internal/work.b *cmd/go/internal/work.Builder; cmd/go/internal/work.root *cmd/go/interna
*struct { F uintptr; cmd/go/internal/work.b *cmd/go/internal/work.Builder; cmd/go/internal/work.tools cmd/go/interna
*struct { F uintptr; cmd/go/internal/work.c cmd/go/internal/cache.Cache }
*struct { F uintptr; cmd/go/internal/work.cgoldflags *[]string }
*struct { F uintptr; cmd/go/internal/workcmd.arg string }
*struct { F uintptr; cmd/go/internal/workcmd.lookDir func(string) }
*struct { F uintptr; cmd/go/internal/workcmd.oldPath string; cmd/go/internal/workcmd.oldVersion string; cmd/go/inter
*struct { F uintptr; cmd/go/internal/workcmd.path string; cmd/go/internal/workcmd.version string; cmd/go/internal/wo
*struct { F uintptr; cmd/go/internal/workcmd.workDir string; cmd/go/internal/workcmd.keepDirs map[string]string; cmd
*struct { F uintptr; cmd/go/internal/work.ctx *context.Context; cmd/go/internal/work.wg *sync.WaitGroup; cmd/go/inte
*struct { F uintptr; cmd/go/internal/work.err *error; cmd/go/internal/work.a *cmd/go/internal/work.Action }
*struct { F uintptr; cmd/go/internal/work.err *error; cmd/go/internal/work.b *cmd/go/internal/work.Builder; cmd/go/i
*struct { F uintptr; cmd/go/internal/work.inWorkq map[*cmd/go/internal/work.Action]int; cmd/go/internal/work.workq *
*struct { F uintptr; cmd/go/internal/work.leakedBuilders *int }
*struct { F uintptr; cmd/go/internal/work.libname *string }
*struct { F uintptr; cmd/go/internal/work.newID *int; cmd/go/internal/work.root *cmd/go/internal/work.Action; cmd/go
*struct { F uintptr; cmd/go/internal/work.oseq *int; cmd/go/internal/work.objdir string }
*struct { F uintptr; cmd/go/internal/work.p *cmd/go/internal/load.Package; cmd/go/internal/work.b *cmd/go/internal/w
*struct { F uintptr; cmd/go/internal/work.root *cmd/go/internal/work.Action }
*struct { F uintptr; cmd/go/internal/work.seen map[*cmd/go/internal/work.Action]bool; cmd/go/internal/work.syso *[]s
*struct { F uintptr; cmd/go/internal/work.seen map[*cmd/go/internal/work.Action]bool; cmd/go/internal/work.walk *fun
*struct { F uintptr; cmd/go/internal/work.tf *os.File }
*struct { F uintptr; cmd/internal/browser.errc chan error; cmd/internal/browser.cmd *os/exec.Cmd }
*struct { F uintptr; cmd/internal/buildid..autotmp_21 *debug/elf.File }
*struct { F uintptr; cmd/internal/buildid..autotmp_36 *os.File }
*struct { F uintptr; cmd/internal/buildid.name string }
*struct { F uintptr; cmd/internal/buildid.name string; cmd/internal/buildid.f *os.File }
*struct { F uintptr; cmd/internal/pkgpath..autotmp_14 string }
*struct { F uintptr; cmd/internal/pkgpattern.pattern string; cmd/internal/pkgpattern.wildCard bool }
*struct { F uintptr; cmd/internal/pkgpattern.vendorExclude bool; cmd/internal/pkgpattern.reg *regexp.Regexp }
*struct { F uintptr; cmd/vendor/golang.org/x/mod/modfile.block *cmd/vendor/golang.org/x/mod/modfile.LineBlock }
*struct { F uintptr; cmd/vendor/golang.org/x/mod/modfile.errs *cmd/vendor/golang.org/x/mod/modfile.ErrorList; cmd/ve
*struct { F uintptr; cmd/vendor/golang.org/x/mod/modfile.f *cmd/vendor/golang.org/x/mod/modfile.File }
*struct { F uintptr; cmd/vendor/golang.org/x/mod/modfile.filename string; cmd/vendor/golang.org/x/mod/modfile.line *
*struct { F uintptr; cmd/vendor/golang.org/x/mod/modfile.in *cmd/vendor/golang.org/x/mod/modfile.input; cmd/vendor/g
*struct { F uintptr; cmd/vendor/golang.org/x/mod/modfile.less func(*cmd/vendor/golang.org/x/mod/modfile.Line, *cmd/v
*struct { F uintptr; cmd/vendor/golang.org/x/mod/modfile.tokens []string; cmd/vendor/golang.org/x/mod/modfile.x *cmd
*struct { F uintptr; cmd/vendor/golang.org/x/mod/modfile.wrapError func(error) }
*struct { F uintptr; cmd/vendor/golang.org/x/mod/modfile.wrapError func(error) *cmd/vendor/golang.org/x/mod/modfile.
*struct { F uintptr; cmd/vendor/golang.org/x/mod/module.err *error; cmd/vendor/golang.org/x/mod/module.path string }
*struct { F uintptr; cmd/vendor/golang.org/x/mod/module.list []cmd/vendor/golang.org/x/mod/module.Version }
*struct { F uintptr; cmd/vendor/golang.org/x/mod/sumdb..autotmp_10 func(int, cmd/vendor/golang.org/x/mod/sumdb/tlog.
*struct { F uintptr; cmd/vendor/golang.org/x/mod/sumdb..autotmp_4 *sync.WaitGroup }
*struct { F uintptr; cmd/vendor/golang.org/x/mod/sumdb.c *cmd/vendor/golang.org/x/mod/sumdb.Client }
*struct { F uintptr; cmd/vendor/golang.org/x/mod/sumdb.c *cmd/vendor/golang.org/x/mod/sumdb.Client; cmd/vendor/golan
*struct { F uintptr; cmd/vendor/golang.org/x/mod/sumdb/dirhash..autotmp_14 *archive/zip.ReadCloser }
*struct { F uintptr; cmd/vendor/golang.org/x/mod/sumdb/dirhash.dir string; cmd/vendor/golang.org/x/mod/sumdb/dirhash
*struct { F uintptr; cmd/vendor/golang.org/x/mod/sumdb/dirhash.zfiles map[string]*archive/zip.File }
*struct { F uintptr; cmd/vendor/golang.org/x/mod/sumdb.err *error; cmd/vendor/golang.org/x/mod/sumdb.path string; cm
*struct { F uintptr; cmd/vendor/golang.org/x/mod/sumdb.errs []error; cmd/vendor/golang.org/x/mod/sumdb.i int }
*struct { F uintptr; cmd/vendor/golang.org/x/mod/sumdb/note.key []uint8 }
*struct { F uintptr; cmd/vendor/golang.org/x/mod/sumdb.wg *sync.WaitGroup; cmd/vendor/golang.org/x/mod/sumdb.errs []
*struct { F uintptr; cmd/vendor/golang.org/x/mod/zip..autotmp_15 io.ReadCloser }
*struct { F uintptr; cmd/vendor/golang.org/x/mod/zip..autotmp_33 *os.File }
*struct { F uintptr; cmd/vendor/golang.org/x/mod/zip.cf *cmd/vendor/golang.org/x/mod/zip.CheckedFiles }
*struct { F uintptr; cmd/vendor/golang.org/x/mod/zip.err *error }
*struct { F uintptr; cmd/vendor/golang.org/x/mod/zip.err *error; cmd/vendor/golang.org/x/mod/zip.zipFile string }
*struct { F uintptr; cmd/vendor/golang.org/x/mod/zip.errPaths map[string]struct {}; cmd/vendor/golang.org/x/mod/zip.
*struct { F uintptr; cmd/vendor/golang.org/x/mod/zip.haveGoMod map[string]bool }
*struct { F uintptr; cmd/vendor/golang.org/x/mod/zip.zw *archive/zip.Writer; cmd/vendor/golang.org/x/mod/zip.prefix 
*struct { F uintptr; context..autotmp_13 *sync.Mutex }
*struct { F uintptr; context..autotmp_3 *sync.Mutex }
*struct { F uintptr; context..autotmp_6 *sync.Mutex }
*struct { F uintptr; context.c *context.cancelCtx }
*struct { F uintptr; context.c *context.timerCtx }
*struct { F uintptr; context.c *context.timerCtx; context.cause error }
*struct { F uintptr; context.child context.canceler; context.parent context.Context }
*struct { F uintptr; context.parent context.Context; context.child context.canceler }
*struct { F uintptr; crypto/ecdh.k *crypto/ecdh.PrivateKey }
*struct { F uintptr; crypto/rand..autotmp_11 *time.Timer }
*struct { F uintptr; crypto/rand.readMax int; crypto/rand.f func([]uint8) error }
*struct { F uintptr; crypto/tls..autotmp_10 *sync.Mutex }
*struct { F uintptr; crypto/tls..autotmp_10 *sync.RWMutex }
*struct { F uintptr; crypto/tls..autotmp_11 *sync.Mutex }
*struct { F uintptr; crypto/tls..autotmp_11 *sync.RWMutex }
*struct { F uintptr; crypto/tls..autotmp_12 *sync.Mutex }
*struct { F uintptr; crypto/tls..autotmp_12 *sync.RWMutex }
*struct { F uintptr; crypto/tls..autotmp_13 *sync.Mutex }
*struct { F uintptr; crypto/tls..autotmp_19 *sync/atomic.Int32 }
*struct { F uintptr; crypto/tls..autotmp_20 *sync.Mutex }
*struct { F uintptr; crypto/tls..autotmp_2 *sync.Mutex }
*struct { F uintptr; crypto/tls..autotmp_2 *sync.RWMutex }
*struct { F uintptr; crypto/tls..autotmp_3 *sync.Mutex }
*struct { F uintptr; crypto/tls..autotmp_4 *sync.RWMutex }
*struct { F uintptr; crypto/tls..autotmp_5 *sync.Mutex }
*struct { F uintptr; crypto/tls..autotmp_5 *sync.RWMutex }
*struct { F uintptr; crypto/tls.binder *[]uint8 }
*struct { F uintptr; crypto/tls.ca *[]uint8 }
*struct { F uintptr; crypto/tls.c *crypto/tls.cipherSuiteTLS13; crypto/tls.expMasterSecret []uint8 }
*struct { F uintptr; crypto/tls.cert **crypto/x509.Certificate }
*struct { F uintptr; crypto/tls.certificate crypto/tls.Certificate }
*struct { F uintptr; crypto/tls.cert *[]uint8 }
*struct { F uintptr; crypto/tls.chain *[]*crypto/x509.Certificate }
*struct { F uintptr; crypto/tls.context []uint8 }
*struct { F uintptr; crypto/tls.done chan struct {}; crypto/tls.interruptRes chan error; crypto/tls.ret *error }
*struct { F uintptr; crypto/tls.ecdsaCipherSuite bool; crypto/tls.vers uint16 }
*struct { F uintptr; crypto/tls.e *crypto/tls.cacheEntry; crypto/tls.cc *crypto/tls.certCache }
*struct { F uintptr; crypto/tls.err *error; crypto/tls.c *crypto/tls.Conn }
*struct { F uintptr; crypto/tls.extBytes []uint8 }
*struct { F uintptr; crypto/tls.extra *[]uint8 }
*struct { F uintptr; crypto/tls.handshakeCtx context.Context; crypto/tls.c *crypto/tls.Conn; crypto/tls.interruptRes
*struct { F uintptr; crypto/tls.hashFunc func() hash.Hash }
*struct { F uintptr; crypto/tls.h func() hash.Hash }
*struct { F uintptr; crypto/tls.i *int; crypto/tls.certificate crypto/tls.Certificate }
*struct { F uintptr; crypto/tls.ks *crypto/tls.keyShare }
*struct { F uintptr; crypto/tls.label string }
*struct { F uintptr; crypto/tls.m *crypto/tls.certificateMsgTLS13 }
*struct { F uintptr; crypto/tls.m *crypto/tls.certificateRequestMsgTLS13 }
*struct { F uintptr; crypto/tls.m *crypto/tls.certificateStatusMsg }
*struct { F uintptr; crypto/tls.m *crypto/tls.certificateVerifyMsg }
*struct { F uintptr; crypto/tls.m *crypto/tls.clientHelloMsg }
*struct { F uintptr; crypto/tls.m *crypto/tls.clientHelloMsg; crypto/tls.extBytes []uint8 }
*struct { F uintptr; crypto/tls.m *crypto/tls.encryptedExtensionsMsg }
*struct { F uintptr; crypto/tls.m *crypto/tls.finishedMsg }
*struct { F uintptr; crypto/tls.m *crypto/tls.keyUpdateMsg }
*struct { F uintptr; crypto/tls.m *crypto/tls.newSessionTicketMsgTLS13 }
*struct { F uintptr; crypto/tls.m *crypto/tls.serverHelloMsg }
*struct { F uintptr; crypto/tls.m *crypto/tls.serverHelloMsg; crypto/tls.extBytes []uint8 }
*struct { F uintptr; crypto/tls.outBufPtr *[]uint8; crypto/tls.outBuf *[]uint8 }
*struct { F uintptr; crypto/tls.proto *string }
*struct { F uintptr; crypto/tls.psk *crypto/tls.pskIdentity }
*struct { F uintptr; crypto/tls.s *crypto/tls.SessionState }
*struct { F uintptr; crypto/tls.sct *[]uint8 }
*struct { F uintptr; crypto/tls.serverRandom []uint8; crypto/tls.clientRandom []uint8; crypto/tls.version uint16; cr
*struct { F uintptr; crypto/tls.vers uint16 }
*struct { F uintptr; crypto/tls.vers uint16; crypto/tls.c *crypto/tls.Certificate; crypto/tls.chi *crypto/tls.Client
*struct { F uintptr; crypto/tls.v []uint8; crypto/tls.n int }
*struct { F uintptr; crypto/x509..autotmp_1 *sync.RWMutex }
*struct { F uintptr; crypto/x509..autotmp_2 *sync.RWMutex }
*struct { F uintptr; crypto/x509.c *crypto/x509.Certificate; crypto/x509.comparisonCount *int; crypto/x509.maxConstr
*struct { F uintptr; crypto/x509.cert *crypto/x509.Certificate }
*struct { F uintptr; crypto/x509.currentChain []*crypto/x509.Certificate; crypto/x509.sigChecks **int; crypto/x509.e
*struct { F uintptr; crypto/x509.emailAddresses *[]string; crypto/x509.dnsNames *[]string; crypto/x509.uris *[]*net/
*struct { F uintptr; crypto/x509.lazyCert *struct { sync.Once; crypto/x509.v *crypto/x509.Certificate }; crypto/x509
*struct { F uintptr; crypto/x509.unhandled *bool }
*struct { F uintptr; debug/buildinfo..autotmp_8 *os.File }
*struct { F uintptr; debug/buildinfo.bo encoding/binary.ByteOrder }
*struct { F uintptr; debug/buildinfo.err *error; debug/buildinfo.name string }
*struct { F uintptr; debug/dwarf.b *debug/dwarf.buf }
*struct { F uintptr; debug/dwarf.d *debug/dwarf.Data; debug/dwarf.off debug/dwarf.Offset }
*struct { F uintptr; debug/dwarf.e *debug/dwarf.Entry; debug/dwarf.r debug/dwarf.typeReader; debug/dwarf.err *error;
*struct { F uintptr; debug/dwarf.err *error; debug/dwarf.d *debug/dwarf.Data; debug/dwarf.name string; debug/dwarf.r
*struct { F uintptr; debug/dwarf.fixer *debug/dwarf.typeFixer }
*struct { F uintptr; debug/elf.f *debug/elf.File }
*struct { F uintptr; debug/elf.s *debug/elf.Section; debug/elf.zrd func(io.Reader) (io.ReadCloser, error) }
*struct { F uintptr; debug/pe.err *error; debug/pe.r io.ReadSeeker }
*struct { F uintptr; debug/plan9obj.n *int }
*struct { F uintptr; debug/plan9obj.syms *[]debug/plan9obj.Sym; debug/plan9obj.fname map[uint16]string }
*struct { F uintptr; encoding/asn1.l [][]uint8 }
*struct { F uintptr; encoding/json..autotmp_10 *sync.Pool; encoding/json..autotmp_11 interface {} }
*struct { F uintptr; encoding/json..autotmp_11 *encoding/json.scanner }
*struct { F uintptr; encoding/json..autotmp_12 *encoding/json.scanner }
*struct { F uintptr; encoding/json..autotmp_15 map[interface {}]struct {}; encoding/json..autotmp_16 interface {} }
*struct { F uintptr; encoding/json..autotmp_6 *sync.Pool; encoding/json..autotmp_7 interface {} }
*struct { F uintptr; encoding/json..autotmp_8 map[interface {}]struct {}; encoding/json..autotmp_9 interface {} }
*struct { F uintptr; encoding/json.err *error }
*struct { F uintptr; encoding/json.fields *[]encoding/json.field }
*struct { F uintptr; encoding/json.sv []encoding/json.reflectWithString }
*struct { F uintptr; encoding/json.wg *sync.WaitGroup; encoding/json.f *encoding/json.encoderFunc }
*struct { F uintptr; flag.isZeroValueErrs *[]error; flag.f *flag.FlagSet }
*struct { F uintptr; flag.result []*flag.Flag }
*struct { F uintptr; flag.typ *reflect.Type; flag.err *error; flag.flag *flag.Flag }
*struct { F uintptr; fmt..autotmp_16 *fmt.pp; fmt..autotmp_17 interface {}; fmt..autotmp_18 int32 }
*struct { F uintptr; fmt..autotmp_19 *fmt.pp; fmt..autotmp_20 interface {}; fmt..autotmp_21 int32 }
*struct { F uintptr; fmt..autotmp_22 *fmt.pp; fmt..autotmp_23 interface {}; fmt..autotmp_24 int32 }
*struct { F uintptr; fmt..autotmp_25 *fmt.pp; fmt..autotmp_26 interface {}; fmt..autotmp_27 int32 }
*struct { F uintptr; fmt..autotmp_6 *error }
*struct { F uintptr; fmt.err *error }
*struct { F uintptr; go/build.args *string; go/build.trimBytes func(int) }
*struct { F uintptr; go/build.badGoError *error; go/build.badGoFiles map[string]bool; go/build.p *go/build.Package }
*struct { F uintptr; go/build/constraint.err *error }
*struct { F uintptr; go/build.ctxt *go/build.Context; go/build.allTags map[string]bool }
*struct { F uintptr; go/build.ctxt *go/build.Context; go/build.p *go/build.Package; go/build.pkga *string; go/build.
*struct { F uintptr; go/build.ctxt *go/build.Context; go/build.srcDir string; go/build.path string; go/build.p *go/b
*struct { F uintptr; go/build.pos *go/token.Position; go/build.args *string }
*struct { F uintptr; go/doc/comment.add func(go/doc/comment.score·1, go/doc/comment.score·1) go/doc/comment.score·1;
*struct { F uintptr; go/doc/comment.c int; go/doc/comment.cmp func(go/doc/comment.score·1, go/doc/comment.score·1) i
*struct { F uintptr; go/doc/comment.item **go/doc/comment.ListItem; go/doc/comment.d *go/doc/comment.parseDoc; go/do
*struct { F uintptr; go/doc/comment.path string }
*struct { F uintptr; go/doc.comments []*go/ast.CommentGroup }
*struct { F uintptr; go/doc/comment.total []int; go/doc/comment.words []string; go/doc/comment.max int }
*struct { F uintptr; go/doc/comment.words []string; go/doc/comment.cmp func(go/doc/comment.score·1, go/doc/comment.s
*struct { F uintptr; go/doc/comment.writeUntil func(int); go/doc/comment.w *strings.Builder; go/doc/comment.out *[]g
*struct { F uintptr; go/doc/comment.wrote *int; go/doc/comment.out *[]go/doc/comment.Text; go/doc/comment.d *go/doc/
*struct { F uintptr; go/doc/comment.w *strings.Builder; go/doc/comment.s string; go/doc/comment.wrote *int }
*struct { F uintptr; go/doc.decls []go/ast.Decl }
*struct { F uintptr; go/doc.groupStarts []go/token.Pos }
*struct { F uintptr; go/doc.has *bool }
*struct { F uintptr; go/doc.imps []*go/ast.ImportSpec }
*struct { F uintptr; go/doc.inspectFunc *func(go/ast.Node) bool }
*struct { F uintptr; go/doc.list []*go/doc.Example }
*struct { F uintptr; go/doc.unresolved map[string]bool; go/doc.topDecls map[*go/ast.Object]go/ast.Decl; go/doc.usedO
*struct { F uintptr; go/parser..autotmp_10 *go/parser.parser }
*struct { F uintptr; go/parser..autotmp_11 *go/parser.parser }
*struct { F uintptr; go/parser..autotmp_12 *go/parser.parser }
*struct { F uintptr; go/parser..autotmp_14 *go/parser.parser }
*struct { F uintptr; go/parser..autotmp_15 *go/parser.parser }
*struct { F uintptr; go/parser..autotmp_16 *go/parser.parser }
*struct { F uintptr; go/parser..autotmp_17 *go/parser.parser }
*struct { F uintptr; go/parser..autotmp_19 *go/parser.parser }
*struct { F uintptr; go/parser..autotmp_22 *go/parser.parser }
*struct { F uintptr; go/parser..autotmp_24 *go/parser.parser }
*struct { F uintptr; go/parser..autotmp_25 *go/parser.parser }
*struct { F uintptr; go/parser..autotmp_2 *go/parser.parser }
*struct { F uintptr; go/parser..autotmp_2 *go/parser.resolver }
*struct { F uintptr; go/parser..autotmp_3 *go/parser.parser }
*struct { F uintptr; go/parser..autotmp_41 *go/parser.resolver }
*struct { F uintptr; go/parser..autotmp_42 *go/parser.resolver }
*struct { F uintptr; go/parser..autotmp_43 *go/parser.resolver }
*struct { F uintptr; go/parser..autotmp_44 *go/parser.resolver }
*struct { F uintptr; go/parser..autotmp_45 *go/parser.resolver }
*struct { F uintptr; go/parser..autotmp_46 *go/parser.resolver }
*struct { F uintptr; go/parser..autotmp_47 *go/parser.resolver }
*struct { F uintptr; go/parser..autotmp_48 *go/parser.resolver }
*struct { F uintptr; go/parser..autotmp_49 *go/parser.resolver }
*struct { F uintptr; go/parser..autotmp_4 *go/parser.parser }
*struct { F uintptr; go/parser..autotmp_50 *go/parser.resolver }
*struct { F uintptr; go/parser..autotmp_51 *go/parser.resolver }
*struct { F uintptr; go/parser..autotmp_52 *go/parser.resolver }
*struct { F uintptr; go/parser..autotmp_53 *go/parser.resolver }
*struct { F uintptr; go/parser..autotmp_54 *go/parser.resolver }
*struct { F uintptr; go/parser..autotmp_55 *go/parser.resolver }
*struct { F uintptr; go/parser..autotmp_56 *go/parser.resolver }
*struct { F uintptr; go/parser..autotmp_5 *go/parser.parser }
*struct { F uintptr; go/parser..autotmp_6 *go/parser.parser }
*struct { F uintptr; go/parser..autotmp_7 *go/parser.parser }
*struct { F uintptr; go/parser..autotmp_8 *go/parser.parser }
*struct { F uintptr; go/parser..autotmp_9 *go/parser.parser }
*struct { F uintptr; go/parser.p *go/parser.parser }
*struct { F uintptr; go/parser.p *go/parser.parser; go/parser.f **go/ast.File; go/parser.err *error }
*struct { F uintptr; go/parser.p *go/parser.parser; go/parser.n *int }
*struct { F uintptr; go/parser.res *go/token.Pos; go/parser.p *go/parser.parser }
*struct { F uintptr; go/parser.typ *go/ast.Expr; go/parser.names *[]*go/ast.Ident; go/parser.params *[]*go/ast.Field
*struct { F uintptr; go/token.a []*go/token.File; go/token.x int }
*struct { F uintptr; go/token.a []go/token.lineInfo; go/token.x int }
*struct { F uintptr; go/token..autotmp_2 *sync.Mutex }
*struct { F uintptr; go/token..autotmp_3 *sync.Mutex }
*struct { F uintptr; go/token..autotmp_6 *sync.RWMutex }
*struct { F uintptr; internal/buildcfg.flags *internal/buildcfg.ExperimentFlags }
*struct { F uintptr; internal/godebug..autotmp_3 *sync.Mutex }
*struct { F uintptr; internal/godebug.did map[string]bool }
*struct { F uintptr; internal/godebug.s *internal/godebug.Setting }
*struct { F uintptr; internal/intern..autotmp_1 *sync.Mutex }
*struct { F uintptr; internal/intern..autotmp_7 *sync.Mutex }
*struct { F uintptr; internal/poll..autotmp_10 *internal/poll.FD }
*struct { F uintptr; internal/poll..autotmp_11 *internal/poll.FD }
*struct { F uintptr; internal/poll..autotmp_12 *internal/poll.FD }
*struct { F uintptr; internal/poll..autotmp_13 *internal/poll.FD }
*struct { F uintptr; internal/poll..autotmp_15 *internal/poll.FD }
*struct { F uintptr; internal/poll..autotmp_16 *internal/poll.FD }
*struct { F uintptr; internal/poll..autotmp_18 *internal/poll.splicePipe }
*struct { F uintptr; internal/poll..autotmp_19 *internal/poll.FD }
*struct { F uintptr; internal/poll..autotmp_21 *internal/poll.FD }
*struct { F uintptr; internal/poll..autotmp_3 *internal/poll.FD }
*struct { F uintptr; internal/poll..autotmp_4 *internal/poll.FD }
*struct { F uintptr; internal/poll..autotmp_5 *internal/poll.FD }
*struct { F uintptr; internal/poll..autotmp_6 *internal/poll.FD }
*struct { F uintptr; internal/poll..autotmp_7 *internal/poll.FD }
*struct { F uintptr; internal/poll..autotmp_8 *internal/poll.FD }
*struct { F uintptr; internal/poll..autotmp_8 *sync.RWMutex }
*struct { F uintptr; internal/poll..autotmp_9 *internal/poll.FD }
*struct { F uintptr; internal/poll.fd *internal/poll.FD }
*struct { F uintptr; internal/poll.fd *internal/poll.FD; internal/poll.mode uint32 }
*struct { F uintptr; internal/poll.fd *internal/poll.FD; internal/poll.size int64 }
*struct { F uintptr; internal/poll.fd *internal/poll.FD; internal/poll.s *syscall.Stat_t }
*struct { F uintptr; internal/poll.fd *internal/poll.FD; internal/poll.uid int; internal/poll.gid int }
*struct { F uintptr; internal/reflectlite.is []int16 }
*struct { F uintptr; internal/reflectlite.is []int32 }
*struct { F uintptr; internal/reflectlite.is []int64 }
*struct { F uintptr; internal/reflectlite.is []int8 }
*struct { F uintptr; internal/reflectlite.ps []unsafe.Pointer }
*struct { F uintptr; internal/reflectlite.s *internal/unsafeheader.Slice; internal/reflectlite.size uintptr; interna
*struct { F uintptr; internal/reflectlite.ss []string }
*struct { F uintptr; internal/singleflight..autotmp_10 *internal/singleflight.Group; internal/singleflight..autotmp_
*struct { F uintptr; internal/singleflight..autotmp_7 *sync.Mutex }
*struct { F uintptr; internal/testlog..autotmp_1 *sync.Mutex }
*struct { F uintptr; internal/zstd.huffBits uint32; internal/zstd.huffMask uint32; internal/zstd.huffTable []uint16 
*struct { F uintptr; log..autotmp_23 *[]uint8 }
*struct { F uintptr; log..autotmp_24 *sync.Mutex }
*struct { F uintptr; log..autotmp_2 *sync.Mutex }
*struct { F uintptr; log.data []uint8 }
*struct { F uintptr; log.format string; log.v []interface {} }
*struct { F uintptr; log.s string }
*struct { F uintptr; main.close func() error }
*struct { F uintptr; main.cmd *cmd/go/internal/base.Command }
*struct { F uintptr; mime..autotmp_10 *os.File }
*struct { F uintptr; mime..autotmp_13 *os.File }
*struct { F uintptr; mime..autotmp_16 *sync.Mutex }
*struct { F uintptr; mime/multipart.file **os.File; mime/multipart.err *error; mime/multipart.combineFiles bool; mim
*struct { F uintptr; net..autotmp_11 *net.file }
*struct { F uintptr; net..autotmp_12 *sync.RWMutex }
*struct { F uintptr; net..autotmp_14 *net.file }
*struct { F uintptr; net..autotmp_15 func(int) error; net..autotmp_16 int }
*struct { F uintptr; net..autotmp_19 *net._Ctype_struct_addrinfo }
*struct { F uintptr; net..autotmp_20 *net._Ctype_struct_addrinfo }
*struct { F uintptr; net..autotmp_23 chan struct {} }
*struct { F uintptr; net..autotmp_24 func(context.Context, bool); net..autotmp_25 context.Context }
*struct { F uintptr; net..autotmp_24 *net.file }
*struct { F uintptr; net..autotmp_25 *net.file }
*struct { F uintptr; net..autotmp_26 *internal/poll.FD; net..autotmp_27 time.Time }
*struct { F uintptr; net..autotmp_26 *time.Timer }
*struct { F uintptr; net..autotmp_27 func(context.Context, bool); net..autotmp_28 context.Context }
*struct { F uintptr; net..autotmp_2 func(vendor/golang.org/x/net/dns/dnsmessage.Type); net..autotmp_3 vendor/golang.
*struct { F uintptr; net..autotmp_31 *net.file }
*struct { F uintptr; net..autotmp_36 *net.file }
*struct { F uintptr; net..autotmp_42 func(<-chan internal/singleflight.Result, context.CancelFunc); net..autotmp_43 
*struct { F uintptr; net..autotmp_45 func(<-chan internal/singleflight.Result, context.CancelFunc); net..autotmp_46 
*struct { F uintptr; net..autotmp_8 *net.nsswitchConfig }
*struct { F uintptr; net..autotmp_9 *net.resolverConfig }
*struct { F uintptr; net..autotmp_9 *sync.Mutex }
*struct { F uintptr; net..autotmp_9 *sync.WaitGroup }
*struct { F uintptr; net.blocking func() (go.shape.int, error); net.res chan net.result[go.shape.int]·1; net..dict *
*struct { F uintptr; net.blocking func() (go.shape.[]net.IPAddr, error); net.res chan net.result[go.shape.[]net.IPAd
*struct { F uintptr; net.c *[]net.nssCriterion }
*struct { F uintptr; net.ctxDone <-chan struct {}; net.fd *net.netFD; net.interruptRes chan error; net.ctx context.C
*struct { F uintptr; net.debugLevel *int; net.dnsMode *string }
*struct { F uintptr; net.done chan struct {}; net.interruptRes chan error; net.ret *error; net.fd *net.netFD }
*struct { F uintptr; net.hints *net._Ctype_struct_addrinfo; net.network string; net.service string }
*struct { F uintptr; net.hostname string; net.ret *net.hostLookupOrder }
*struct { F uintptr; net/http..autotmp_0 *sync.Mutex }
*struct { F uintptr; net/http..autotmp_10 *sync.Mutex }
*struct { F uintptr; net/http..autotmp_11 *net/http.http2addConnCall; net/http..autotmp_12 *net/http.http2Transport;
*struct { F uintptr; net/http..autotmp_11 *sync.Mutex }
*struct { F uintptr; net/http..autotmp_12 *sync.Mutex }
*struct { F uintptr; net/http..autotmp_13 *sync.Mutex }
*struct { F uintptr; net/http..autotmp_14 *net/http.http2clientStream; net/http..autotmp_15 *net/http.Request }
*struct { F uintptr; net/http..autotmp_14 *net/http.persistConn }
*struct { F uintptr; net/http..autotmp_14 *sync.Mutex }
*struct { F uintptr; net/http..autotmp_14 *time.Timer }
*struct { F uintptr; net/http..autotmp_16 *net/http.http2ClientConn }
*struct { F uintptr; net/http..autotmp_16 *sync.Mutex }
*struct { F uintptr; net/http..autotmp_1 *sync.Mutex }
*struct { F uintptr; net/http..autotmp_20 *vendor/golang.org/x/net/http2/hpack.Decoder; net/http..autotmp_21 func(ve
*struct { F uintptr; net/http..autotmp_22 chan struct {} }
*struct { F uintptr; net/http..autotmp_23 chan struct {} }
*struct { F uintptr; net/http..autotmp_23 *time.Timer }
*struct { F uintptr; net/http..autotmp_27 *time.Timer }
*struct { F uintptr; net/http..autotmp_2 *sync.Mutex }
*struct { F uintptr; net/http..autotmp_2 *time.Timer }
*struct { F uintptr; net/http..autotmp_36 *sync.Pool; net/http..autotmp_37 interface {} }
*struct { F uintptr; net/http..autotmp_38 *sync.Pool; net/http..autotmp_39 interface {} }
*struct { F uintptr; net/http..autotmp_3 chan struct {} }
*struct { F uintptr; net/http..autotmp_3 func(io.Reader); net/http..autotmp_4 io.Reader }
*struct { F uintptr; net/http..autotmp_3 *sync.Mutex }
*struct { F uintptr; net/http..autotmp_40 *sync.Mutex }
*struct { F uintptr; net/http..autotmp_41 net.Conn; net/http..autotmp_42 time.Time }
*struct { F uintptr; net/http..autotmp_4 *net/http.http2ClientConn }
*struct { F uintptr; net/http..autotmp_4 *net/http.Transport; net/http..autotmp_5 *net/http.wantConn }
*struct { F uintptr; net/http..autotmp_4 *sync.Mutex }
*struct { F uintptr; net/http..autotmp_5 *net/http.http2ClientConn }
*struct { F uintptr; net/http..autotmp_5 *sync.Cond }
*struct { F uintptr; net/http..autotmp_5 *sync.Mutex }
*struct { F uintptr; net/http..autotmp_5 *time.Timer }
*struct { F uintptr; net/http..autotmp_66 net.Conn }
*struct { F uintptr; net/http..autotmp_67 *net/http.persistConn }
*struct { F uintptr; net/http..autotmp_68 *net/http.persistConn }
*struct { F uintptr; net/http..autotmp_6 chan struct {} }
*struct { F uintptr; net/http..autotmp_6 *net/http.http2clientConnReadLoop }
*struct { F uintptr; net/http..autotmp_6 *sync.Mutex }
*struct { F uintptr; net/http..autotmp_7 *net/http.Transport; net/http..autotmp_8 *net/http.wantConn }
*struct { F uintptr; net/http..autotmp_7 *sync.Cond }
*struct { F uintptr; net/http..autotmp_7 *sync.Mutex }
*struct { F uintptr; net/http..autotmp_8 chan struct {} }
*struct { F uintptr; net/http..autotmp_8 *crypto/tls.Conn }
*struct { F uintptr; net/http..autotmp_8 *sync.Mutex }
*struct { F uintptr; net/http..autotmp_9 *crypto/tls.Conn }
*struct { F uintptr; net/http..autotmp_9 *net/http.http2dialCall; net/http..autotmp_10 context.Context; net/http..au
*struct { F uintptr; net/http.buf []uint8 }
*struct { F uintptr; net/http.cancelc chan error }
*struct { F uintptr; net/http.cancel chan struct {}; net/http.rt net/http.RoundTripper; net/http.req *net/http.Reque
*struct { F uintptr; net/http.cc *net/http.http2ClientConn; net/http.done chan struct {}; net/http.cancelled *bool }
*struct { F uintptr; net/http.cc *net/http.http2ClientConn; net/http.p *[8]uint8; net/http.errc chan error }
*struct { F uintptr; net/http.cc *net/http.http2ClientConn; net/http.seenMaxConcurrentStreams *bool }
*struct { F uintptr; net/http.cc *net/http.http2ClientConn; net/http.traceHeaders bool; net/http.trace *net/http/htt
*struct { F uintptr; net/http.closed *bool; net/http.r *net/http.Request; net/http.err *error }
*struct { F uintptr; net/http.closed *bool; net/http.t *net/http.transferWriter; net/http.err *error }
*struct { F uintptr; net/http.cm *net/http.connectMethod }
*struct { F uintptr; net/http.c *net/http.Client; net/http.icookies map[string][]*net/http.Cookie; net/http.ireqhdr 
*struct { F uintptr; net/http.connPool *net/http.http2clientConnPool; net/http.t2 *net/http.http2Transport }
*struct { F uintptr; net/http.cs *net/http.http2clientStream; net/http.ctx context.Context }
*struct { F uintptr; net/http.cs *net/http.http2clientStream; net/http.err error }
*struct { F uintptr; net/http.cs *net/http.http2clientStream; net/http.reqBodyClosed chan struct {} }
*struct { F uintptr; net/http.cs *net/http.http2clientStream; net/http.req *net/http.Request; net/http.cc *net/http.
*struct { F uintptr; net/http.ctx context.Context; net/http.c net.Conn; net/http.errCh chan error; net/http.done cha
*struct { F uintptr; net/http.deadline time.Time }
*struct { F uintptr; net/http.didReadResponse chan struct {}; net/http.err *error; net/http.connectReq *net/http.Req
*struct { F uintptr; net/http.done chan struct {}; net/http.ctxErr *error; net/http.errCh chan error }
*struct { F uintptr; net/http.errc chan error }
*struct { F uintptr; net/http.err *error }
*struct { F uintptr; net/http.err *error; net/http.pc *net/http.persistConn; net/http.req *net/http.transportRequest
*struct { F uintptr; net/http.err *error; net/http.trailer net/http.Header }
*struct { F uintptr; net/http.err *error; net/http.w *net/http.wantConn; net/http.t *net/http.Transport }
*struct { F uintptr; net/http.fr *net/http.http2Framer }
*struct { F uintptr; net/http.fr *net/http.http2Framer; net/http.invalid *error; net/http.sawRegular *bool; net/http
*struct { F uintptr; net/http.hlSize *uint64 }
*struct { F uintptr; net/http.host string; net/http.req *net/http.Request; net/http.path string; net/http.trailers s
*struct { F uintptr; net/http.initialReqCancel <-chan struct {}; net/http.doCancel func(); net/http.timer *time.Time
*struct { F uintptr; net/http.ireq *net/http.Request; net/http.req **net/http.Request }
*struct { F uintptr; net/http.n *int; net/http.buf *bytes.Buffer }
*struct { F uintptr; net/http.once *sync.Once; net/http.stopTimerCh chan struct {}; net/http.cancelCtx func() }
*struct { F uintptr; net/http.pa string }
*struct { F uintptr; net/http.pc *net/http.persistConn; net/http.closeErr *error }
*struct { F uintptr; net/http.pc *net/http.persistConn; net/http.continueCh <-chan struct {} }
*struct { F uintptr; net/http.reqBodyClosed *bool; net/http.req **net/http.Request; net/http.resp **net/http.Respons
*struct { F uintptr; net/http.retres **net/http.Response; net/http.reterr *error }
*struct { F uintptr; net/http.snapshot bytes.Reader }
*struct { F uintptr; net/http.snapshot strings.Reader }
*struct { F uintptr; net/http.stopTimerCh chan struct {}; net/http.cancelCtx func() }
*struct { F uintptr; net/http.t net/http.Header }
*struct { F uintptr; net/http.t *net/http.transferWriter }
*struct { F uintptr; net/http.trace *net/http/httptrace.ClientTrace; net/http.err *error }
*struct { F uintptr; net/http.trace *net/http/httptrace.ClientTrace; net/http.tlsConn *crypto/tls.Conn; net/http.ctx
*struct { F uintptr; net/http.waitForBodyRead chan bool; net/http.eofc chan struct {} }
*struct { F uintptr; net/http.waitForBodyRead chan bool; net/http.eofc chan struct {}; net/http.pc *net/http.persist
*struct { F uintptr; net.lane chan net.result·3 }
*struct { F uintptr; net.lookupGroupCtx context.Context; net.resolverFunc func(context.Context, string, string) ([]n
*struct { F uintptr; net.net string; net.portnum int }
*struct { F uintptr; net.network string; net.name string }
*struct { F uintptr; net.oldCancel <-chan struct {}; net.cancel context.CancelFunc; net.subCtx context.Context }
*struct { F uintptr; net.primaries net.addrList; net.fallbacks net.addrList; net.sd *net.sysDialer; net.results chan
*struct { F uintptr; net.r *net.Resolver; net.ctx context.Context; net.conf *net.dnsConfig }
*struct { F uintptr; net.r *net.Resolver; net.ctx context.Context; net.conf *net.dnsConfig; net.fqdn string; net.lan
*struct { F uintptr; net.r *net.Resolver; net.ctx context.Context; net.conf *net.dnsConfig; net.lane chan net.result
*struct { F uintptr; net.sd *net.sysDialer }
*struct { F uintptr; net.trace *internal/nettrace.Trace; net.sd *net.sysDialer; net.raStr string; net.err *error }
*struct { F uintptr; net.written *int64; net.werr *error; net.handled *bool; net.c *net.netFD; net.remain int64 }
*struct { F uintptr; os..autotmp_10 *os.File }
*struct { F uintptr; os..autotmp_12 *os.File }
*struct { F uintptr; os..autotmp_15 *os.File }
*struct { F uintptr; os..autotmp_19 *os.File }
*struct { F uintptr; os..autotmp_8 *sync.RWMutex }
*struct { F uintptr; os.dirs []io/fs.DirEntry }
*struct { F uintptr; os/exec..autotmp_26 func(func() error); os/exec..autotmp_27 func() error }
*struct { F uintptr; os/exec..autotmp_28 *os/exec.Cmd; os/exec..autotmp_29 chan<- os/exec.ctxResult }
*struct { F uintptr; os/exec.cmd *os/exec.Cmd }
*struct { F uintptr; os/exec.c *os/exec.Cmd; os/exec.started *bool }
*struct { F uintptr; os/exec.pw *os.File; os/exec.c *os/exec.Cmd }
*struct { F uintptr; os/exec.statusc chan os/exec.goroutineStatus·1; os/exec.goroutineErr chan error }
*struct { F uintptr; os/exec.timer **time.Timer; os/exec.c *os/exec.Cmd }
*struct { F uintptr; os/exec.w io.Writer; os/exec.pr *os.File }
*struct { F uintptr; os.longName string; os.mode io/fs.FileMode }
*struct { F uintptr; os.longName string; os.perm io/fs.FileMode }
*struct { F uintptr; os.name string }
*struct { F uintptr; os.name string; os.fs *os.fileStat }
*struct { F uintptr; os.oldname string; os.newname string }
*struct { F uintptr; os.parentFd int; os.base string }
*struct { F uintptr; os.parentFd int; os.base string; os.statInfo *syscall.Stat_t }
*struct { F uintptr; os/signal..autotmp_5 *sync.Mutex }
*struct { F uintptr; os/signal..autotmp_6 *sync.Mutex }
*struct { F uintptr; os/signal.h *os/signal.handler }
*struct { F uintptr; os.utimes *[2]syscall.Timespec }
*struct { F uintptr; path/filepath..autotmp_20 *os.File }
*struct { F uintptr; path/filepath.dirs []io/fs.DirEntry }
*struct { F uintptr; R *cmd/go/internal/generate.Generator }
*struct { F uintptr; R *cmd/go/internal/modfetch.dbClient }
*struct { F uintptr; R *cmd/go/internal/modget.resolver }
*struct { F uintptr; R *cmd/go/internal/modload.ModuleGraph }
*struct { F uintptr; R *cmd/go/internal/test.runCache }
*struct { F uintptr; R *cmd/go/internal/trace.tracer }
*struct { F uintptr; R cmd/go/internal/work.toolchain }
*struct { F uintptr; R *cmd/internal/test2json.Converter }
*struct { F uintptr; R *cmd/internal/test2json.lineBuffer }
*struct { F uintptr; R *cmd/vendor/golang.org/x/mod/internal/lazyregexp.Regexp }
*struct { F uintptr; R *cmd/vendor/golang.org/x/mod/sumdb.Client }
*struct { F uintptr; R crypto.Hash }
*struct { F uintptr; R *crypto/tls.Conn }
*struct { F uintptr; reflect..autotmp_29 *sync.Mutex }
*struct { F uintptr; reflect..autotmp_3 *sync.Mutex }
*struct { F uintptr; reflect..autotmp_76 *sync.Mutex }
*struct { F uintptr; reflect.hash uint32 }
*struct { F uintptr; reflect.ifield int; reflect.imethod int }
*struct { F uintptr; reflect.length int; reflect.esize uintptr; reflect.eequal func(unsafe.Pointer, unsafe.Pointer) 
*struct { F uintptr; reflect.name string }
*struct { F uintptr; reflect.typ *reflect.structType }
*struct { F uintptr; reflect.x *internal/abi.Type }
*struct { F uintptr; regexp.ix *int; regexp.merged *[]int32; regexp.next *[]uint32 }
*struct { F uintptr; regexp.ok *bool; regexp.merged *[]int32; regexp.next *[]uint32 }
*struct { F uintptr; regexp.p **regexp.onePassProg; regexp.visitQueue *regexp.queueOnePass; regexp.check *func(uint3
*struct { F uintptr; regexp.repl func(string) string; regexp.src string }
*struct { F uintptr; regexp.repl func([]uint8) []uint8; regexp.src []uint8 }
*struct { F uintptr; regexp.repl string }
*struct { F uintptr; regexp.repl []uint8 }
*struct { F uintptr; regexp.re *regexp.Regexp; regexp.repl string; regexp.src string }
*struct { F uintptr; regexp.result *[][]int }
*struct { F uintptr; regexp.result *[][]string; regexp.s string }
*struct { F uintptr; regexp.result *[]string; regexp.s string }
*struct { F uintptr; regexp.result *[][][]uint8; regexp.b []uint8 }
*struct { F uintptr; regexp.result *[][]uint8; regexp.b []uint8 }
*struct { F uintptr; regexp.srepl *string; regexp.repl []uint8; regexp.re *regexp.Regexp; regexp.src []uint8 }
*struct { F uintptr; regexp/syntax.err *error; regexp/syntax.s string }
*struct { F uintptr; R encoding/binary.ByteOrder }
*struct { F uintptr; R encoding/json.arrayEncoder }
*struct { F uintptr; R encoding/json.condAddrEncoder }
*struct { F uintptr; R encoding/json.floatEncoder }
*struct { F uintptr; R encoding/json.mapEncoder }
*struct { F uintptr; R encoding/json.ptrEncoder }
*struct { F uintptr; R encoding/json.sliceEncoder }
*struct { F uintptr; R encoding/json.structEncoder }
*struct { F uintptr; R *flag.FlagSet }
*struct { F uintptr; R *go/doc.Package }
*struct { F uintptr; R *go/parser.parser }
*struct { F uintptr; R *internal/godebug.Setting }
*struct { F uintptr; R *internal/goroot.gccgoDirs }
*struct { F uintptr; R *internal/lazyregexp.Regexp }
*struct { F uintptr; R *internal/lazytemplate.Template }
*struct { F uintptr; R io.WriteCloser }
*struct { F uintptr; R *net.Dialer }
*struct { F uintptr; R *net/http.http2ClientConn }
*struct { F uintptr; R *net/http.http2clientStream }
*struct { F uintptr; R *net/http.http2Transport }
*struct { F uintptr; R *net/http.persistConn }
*struct { F uintptr; R *net/http.socksUsernamePassword }
*struct { F uintptr; R *net/http.Transport }
*struct { F uintptr; R *net.ipStackCapabilities }
*struct { F uintptr; R *net.nsswitchConfig }
*struct { F uintptr; R *net.Resolver }
*struct { F uintptr; R *net.resolverConfig }
*struct { F uintptr; R reflect.Value }
*struct { F uintptr; R runtime.metricReader }
*struct { F uintptr; R *strings.Replacer }
*struct { F uintptr; R *sync/atomic.Bool }
*struct { F uintptr; R *sync/atomic.Uint64 }
*struct { F uintptr; runtime/debug.buf *strings.Builder; runtime/debug.formatMod *func(string, runtime/debug.Module)
*struct { F uintptr; runtime/debug.err *error; runtime/debug.lineNum *int }
*struct { F uintptr; runtime/trace..autotmp_0 *sync.Mutex }
*struct { F uintptr; runtime/trace..autotmp_3 *sync.Mutex }
*struct { F uintptr; runtime/trace.w io.Writer }
*struct { F uintptr; R *vendor/golang.org/x/net/http/httpproxy.config }
*struct { F uintptr; sync..autotmp_19 *sync.Mutex }
*struct { F uintptr; sync..autotmp_2 *sync.Mutex }
*struct { F uintptr; sync..autotmp_3 *uint32 }
*struct { F uintptr; sync..autotmp_8 *sync.Mutex }
*struct { F uintptr; syscall..autotmp_0 *sync.Mutex }
*struct { F uintptr; syscall..autotmp_10 *sync.RWMutex }
*struct { F uintptr; syscall..autotmp_14 *sync.Mutex }
*struct { F uintptr; syscall..autotmp_31 int }
*struct { F uintptr; syscall..autotmp_32 *sync.Pool; syscall..autotmp_33 interface {} }
*struct { F uintptr; syscall..autotmp_3 *sync.RWMutex }
*struct { F uintptr; syscall..autotmp_6 *sync.RWMutex }
*struct { F uintptr; syscall..autotmp_9 *sync.RWMutex }
*struct { F uintptr; text/template..autotmp_11 *text/template.state; text/template..autotmp_12 int }
*struct { F uintptr; text/template..autotmp_18 *text/template.state; text/template..autotmp_19 int }
*struct { F uintptr; text/template..autotmp_2 *text/template.state; text/template..autotmp_3 int }
*struct { F uintptr; text/template..autotmp_3 *sync.RWMutex }
*struct { F uintptr; text/template..autotmp_6 *sync.RWMutex }
*struct { F uintptr; text/template..autotmp_7 *sync.RWMutex }
*struct { F uintptr; text/template..autotmp_9 *error }
*struct { F uintptr; text/template.err *error }
*struct { F uintptr; text/template/parse..autotmp_13 *text/template/parse.Tree; text/template/parse..autotmp_14 int 
*struct { F uintptr; text/template/parse..autotmp_3 *text/template/parse.Tree }
*struct { F uintptr; text/template/parse..autotmp_9 *text/template/parse.Tree; text/template/parse..autotmp_10 *erro
*struct { F uintptr; text/template.r *text/template/parse.RangeNode; text/template.s *text/template.state; text/temp
*struct { F uintptr; time..autotmp_12 uintptr }
*struct { F uintptr; time..autotmp_24 uintptr }
*struct { F uintptr; time.ok *bool; time..dict *[5]uintptr }
*struct { F uintptr; vendor/golang.org/x/crypto/cryptobyte.b *vendor/golang.org/x/crypto/cryptobyte.Builder }
*struct { F uintptr; vendor/golang.org/x/crypto/cryptobyte.bytes []uint8 }
*struct { F uintptr; vendor/golang.org/x/crypto/cryptobyte.data []uint8 }
*struct { F uintptr; vendor/golang.org/x/crypto/cryptobyte.n *math/big.Int }
*struct { F uintptr; vendor/golang.org/x/crypto/cryptobyte.oid encoding/asn1.ObjectIdentifier }
*struct { F uintptr; vendor/golang.org/x/crypto/cryptobyte.t time.Time }
*struct { F uintptr; vendor/golang.org/x/crypto/cryptobyte.t time.Time; vendor/golang.org/x/crypto/cryptobyte.b *ven
*struct { F uintptr; vendor/golang.org/x/crypto/cryptobyte.v bool }
*struct { F uintptr; vendor/golang.org/x/crypto/cryptobyte.v int64 }
*struct { F uintptr; vendor/golang.org/x/crypto/cryptobyte.v uint64 }
*struct { F uintptr; vendor/golang.org/x/net/http2/hpack.d *vendor/golang.org/x/net/http2/hpack.Decoder; vendor/gola
*struct { F uintptr; vendor/golang.org/x/net/http2/hpack.hf *[]vendor/golang.org/x/net/http2/hpack.HeaderField }
*struct { F uintptr; vendor/golang.org/x/text/unicode/norm.bp *int; vendor/golang.org/x/text/unicode/norm.s string }
*struct { go/build.vendor []string; go/build.goroot string; go/build.gopath []string }
struct { go/build.vendor []string; go/build.goroot string; go/build.gopath []string }
struct { go/parser.pos go/token.Pos; go/parser.lit string }
struct { GOTOOLCHAIN string; AutoFile string; AutoGoVersion string; AutoToolchain string }
*struct { ImportPath string }
struct { ImportPath string }
*struct { ImportPath string; Deps []struct { ImportPath string; Rev string } }
struct { ImportPath string; Deps []struct { ImportPath string; Rev string } }
*struct { ImportPath string; Revision string }
[]struct { ImportPath string; Revision string }
struct { ImportPath string; Revision string }
*struct { ImportPath string; Rev string }
[]struct { ImportPath string; Rev string }
struct { ImportPath string; Rev string }
struct { ImportStack []string; Pos string; Err string }
struct { internal/cpu._ internal/cpu.CacheLinePad; HasAES bool; HasADX bool; HasAVX bool; HasAVX2 bool; HasBMI1 bool
struct { internal/cpu._ internal/cpu.CacheLinePad; HasAES bool; HasPMULL bool; HasSHA1 bool; HasSHA2 bool; HasSHA512
struct { internal/cpu._ internal/cpu.CacheLinePad; HasZARCH bool; HasSTFLE bool; HasLDISP bool; HasEIMM bool; HasDFP
struct { internal/reflectlite.b bool; internal/reflectlite.x interface {} }
struct { internal/testlog.mu sync.Mutex; internal/testlog.val bool }
*struct { io.Reader; io.Closer }
struct { io.Reader; io.Closer }
*struct { io.Reader; io.WriterTo }
struct { io.Reader; io.WriterTo }
*struct { Logentry struct { Revision int64 "xml:\"revision,attr\""; Date string "xml:\"date\"" } "xml:\"logentry\"" 
struct { Logentry struct { Revision int64 "xml:\"revision,attr\""; Date string "xml:\"date\"" } "xml:\"logentry\"" }
*[]struct { Name string; Bool bool; Usage string }
*struct { Name string; Bool bool; Usage string }
[]struct { Name string; Bool bool; Usage string }
struct { Name string; Bool bool; Usage string }
*struct { net.laddr net.TCPAddr; net.value int }
[]struct { net.laddr net.TCPAddr; net.value int }
struct { net.laddr net.TCPAddr; net.value int }
*struct { Package []struct { Path string; Revision string } }
struct { Package []struct { Path string; Revision string } }
*struct { Path string; Revision string }
[]struct { Path string; Revision string }
struct { Path string; Revision string }
*struct { Patterns map[string][]string; Files map[string]string }
struct { Patterns map[string][]string; Files map[string]string }
struct { reflect.b bool; reflect.x interface {} }
*struct { reflect.ityp *internal/abi.Type; reflect.typ *internal/abi.Type; reflect.hash uint32; reflect._ [4]uint8; 
struct { reflect.ityp *internal/abi.Type; reflect.typ *internal/abi.Type; reflect.hash uint32; reflect._ [4]uint8; r
*struct { Revision int64 "xml:\"revision,attr\""; Date string "xml:\"date\"" }
struct { Revision int64 "xml:\"revision,attr\""; Date string "xml:\"date\"" }
*struct { RootPath string }
struct { RootPath string }
struct { runtime.arenaHints *runtime.arenaHint; runtime.quarantineList runtime.mSpanList; runtime.readyList runtime.
*struct { runtime.base runtime.offAddr; runtime.bound runtime.offAddr }
struct { runtime.base runtime.offAddr; runtime.bound runtime.offAddr }
struct { runtime.base uintptr; runtime.end uintptr }
struct { runtime.cgocheck int32; runtime.clobberfree int32; runtime.dontfreezetheworld int32; runtime.efence int32; 
*struct { runtime/cgo.cstr *uint8 }
struct { runtime/cgo.cstr *uint8 }
struct { runtime.enabled bool; runtime.pad [3]uint8; runtime.needed bool; runtime.alignme uint64 }
struct { runtime.fill uint64; runtime.capacity uint64 }
struct { runtime.gcPercentGoal runtime/internal/atomic.Uint64; runtime.memoryLimitGoal runtime/internal/atomic.Uint6
*struct { runtime.gList; runtime.n int32 }
struct { runtime.gList; runtime.n int32 }
struct { runtime.hooks []runtime.exitHook; runtime.runningExitHooks bool }
struct { runtime.index runtime.scavengeIndex; runtime.releasedBg runtime/internal/atomic.Uintptr; runtime.releasedEa
struct { runtime.item runtime.stackpoolItem; runtime._ [40]uint8 }
struct { runtime.len int; runtime.buf [128]*runtime.mspan }
struct { runtime.lock runtime.mutex; runtime.enabled bool; runtime.shutdown bool; runtime.headerWritten bool; runtim
struct { runtime.lock runtime.mutex; runtime.free [35]runtime.mSpanList }
struct { runtime.lock runtime.mutex; runtime.free *runtime.gcBitsArena; runtime.next *runtime.gcBitsArena; runtime.c
struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }
struct { runtime.lock runtime.mutex; runtime.list runtime.gList }
struct { runtime.lock runtime.mutex; runtime.newm runtime.muintptr; runtime.waiting bool; runtime.wake runtime.note;
struct { runtime.lock runtime.mutex; runtime.next int32; runtime.m map[int32]unsafe.Pointer; runtime.minv map[unsafe
struct { runtime.lock runtime.mutex; runtime.q runtime.gQueue }
struct { runtime.lock runtime.mutex; runtime.reuse []runtime.liveUserArenaChunk; runtime.fault []runtime.liveUserAre
struct { runtime.lock runtime.mutex; runtime.stack runtime.gList; runtime.noStack runtime.gList; runtime.n int32 }
struct { runtime.mcentral runtime.mcentral; runtime.pad [24]uint8 }
struct { runtime.mutex; runtime.persistentAlloc }
struct { runtime.note runtime.note; runtime.mask [3]uint32; runtime.wanted [3]uint32; runtime.ignored [3]uint32; run
struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }
struct { runtime.sema uint32; runtime.active bool; runtime.offset runtime/internal/atomic.Int64; runtime.records []r
struct { runtime.signalLock runtime/internal/atomic.Uint32; runtime.hz runtime/internal/atomic.Int32 }
struct { runtime.user bool; runtime.runnable runtime.gQueue; runtime.n int32 }
struct { sync.Mutex; cmd/go/internal/cache.m map[[32]uint8]string }
struct { sync.Mutex; cmd/go/internal/cache.m map[string][32]uint8 }
struct { sync.Mutex; math/big.table [64]math/big.divisor }
struct { sync.Mutex; net.byName map[string]net.byName; net.byAddr map[string][]string; net.expire time.Time; net.pat
struct { sync.Mutex; os/signal.m map[chan<- os.Signal]*os/signal.handler; os/signal.ref [65]int64; os/signal.stoppin
struct { sync.Mutex; reflect.m sync.Map }
struct { sync.Mutex; runtime/trace.enabled sync/atomic.Bool }
struct { sync.Once; cmd/go/internal/modfetch.list []cmd/go/internal/modfetch.proxySpec; cmd/go/internal/modfetch.err
struct { sync.Once; cmd/go/internal/work.version; cmd/go/internal/work.err error }
*struct { sync.Once; crypto/x509.v *crypto/x509.Certificate }
struct { sync.Once; crypto/x509.v *crypto/x509.Certificate }
struct { sync.Once; net.val int }
struct { sync.Once; text/template.v map[string]reflect.Value }
struct { vendor/golang.org/x/sys/cpu._ vendor/golang.org/x/sys/cpu.CacheLinePad; HasAES bool; HasADX bool; HasAVX bo
st.TrackingWriter }
*sudog<bool>
sudog<bool>
*sudog<*cmd/go/internal/cache.ProgResponse>
sudog<*cmd/go/internal/cache.ProgResponse>
*sudog<cmd/go/internal/modcmd.token·1>
sudog<cmd/go/internal/modcmd.token·1>
*sudog<cmd/go/internal/modcmd.token·2>
sudog<cmd/go/internal/modcmd.token·2>
*sudog<cmd/go/internal/modconv.token·1>
sudog<cmd/go/internal/modconv.token·1>
*sudog<cmd/go/internal/modload.token·2>
sudog<cmd/go/internal/modload.token·2>
*sudog<cmd/go/internal/par.queueState>
sudog<cmd/go/internal/par.queueState>
*sudog<cmd/go/internal/trace.traceFile>
sudog<cmd/go/internal/trace.traceFile>
*sudog<[]error>
*sudog<error>
sudog<[]error>
sudog<error>
*sudog<int>
sudog<int>
*sudog<internal/singleflight.Result>
sudog<internal/singleflight.Result>
*sudog<map[*cmd/go/internal/modload.loadPkg]cmd/go/internal/modload.mismatch·4>
sudog<map[*cmd/go/internal/modload.loadPkg]cmd/go/internal/modload.mismatch·4>
*sudog<map[cmd/vendor/golang.org/x/mod/module.Version]bool>
sudog<map[cmd/vendor/golang.org/x/mod/module.Version]bool>
*sudog<net.dialResult·2>
sudog<net.dialResult·2>
*sudog<net/http.readResult>
sudog<net/http.readResult>
*sudog<net/http.requestAndChan>
sudog<net/http.requestAndChan>
*sudog<net/http.responseAndError>
sudog<net/http.responseAndError>
*sudog<net/http.writeRequest>
sudog<net/http.writeRequest>
*sudog<net.result·3>
sudog<net.result·3>
*sudog<net.result[go.shape.int]·1>
sudog<net.result[go.shape.int]·1>
*sudog<net.result[go.shape.[]net.IPAddr]·1>
sudog<net.result[go.shape.[]net.IPAddr]·1>
*sudog<net.result[int]·1>
sudog<net.result[int]·1>
*sudog<net.result[[]net.IPAddr]·1>
sudog<net.result[[]net.IPAddr]·1>
*sudog<os/exec.ctxResult>
sudog<os/exec.ctxResult>
*sudog<os/exec.goroutineStatus·1>
sudog<os/exec.goroutineStatus·1>
*sudog<os.Signal>
sudog<os.Signal>
*sudog<struct {}>
sudog<struct {}>
*sudog<time.Time>
sudog<time.Time>
*sudog<uint32>
sudog<uint32>
sumdb.pc uintptr; cmd/vendor/golang.org/x/mod/sumdb.fn uintptr; cmd/vendor/golang.org/x/mod/sumdb._panic uintptr; cm
sync/atomic.align64
*sync/atomic.Bool
sync/atomic.Bool
*sync/atomic.efaceWords
sync/atomic.efaceWords
*sync/atomic.Int32
sync/atomic.Int32
*sync/atomic.Int64
sync/atomic.Int64
sync/atomic.noCopy
*sync/atomic.Pointer[cmd/go/internal/modload.cachedGraph]
sync/atomic.Pointer[cmd/go/internal/modload.cachedGraph]
*sync/atomic.Pointer[go.shape.interface {}]
sync/atomic.Pointer[go.shape.interface {}]
*sync/atomic.Pointer[go.shape.string]
sync/atomic.Pointer[go.shape.string]
*sync/atomic.Pointer[go.shape.struct { cmd/go/internal/modload.mg *cmd/go/internal/modload.ModuleGraph; cmd/go/inter
sync/atomic.Pointer[go.shape.struct { cmd/go/internal/modload.mg *cmd/go/internal/modload.ModuleGraph; cmd/go/intern
*sync/atomic.Pointer[go.shape.struct { go/token.name string; go/token.base int; go/token.size int; go/token.mutex sy
sync/atomic.Pointer[go.shape.struct { go/token.name string; go/token.base int; go/token.size int; go/token.mutex syn
*sync/atomic.Pointer[go.shape.struct { internal/godebug.text string; internal/godebug.bisect *internal/bisect.Matche
sync/atomic.Pointer[go.shape.struct { internal/godebug.text string; internal/godebug.bisect *internal/bisect.Matcher
*sync/atomic.Pointer[go.shape.struct { math/rand.src math/rand.Source; math/rand.s64 math/rand.Source64; math/rand.r
sync/atomic.Pointer[go.shape.struct { math/rand.src math/rand.Source; math/rand.s64 math/rand.Source64; math/rand.re
*sync/atomic.Pointer[go.shape.struct { net.servers []string; net.search []string; net.ndots int; net.timeout time.Du
sync/atomic.Pointer[go.shape.struct { net.servers []string; net.search []string; net.ndots int; net.timeout time.Dur
*sync/atomic.Pointer[go.shape.struct { sync.m map[interface {}]*sync.entry; sync.amended bool }]
sync/atomic.Pointer[go.shape.struct { sync.m map[interface {}]*sync.entry; sync.amended bool }]
*sync/atomic.Pointer[go/token.File]
sync/atomic.Pointer[go/token.File]
*sync/atomic.Pointer[interface {}]
sync/atomic.Pointer[interface {}]
*sync/atomic.Pointer[internal/godebug.value]
sync/atomic.Pointer[internal/godebug.value]
*sync/atomic.Pointer[math/rand.Rand]
sync/atomic.Pointer[math/rand.Rand]
*sync/atomic.Pointer[net.dnsConfig]
sync/atomic.Pointer[net.dnsConfig]
*sync/atomic.Pointer[string]
sync/atomic.Pointer[string]
*sync/atomic.Pointer[sync.readOnly]
sync/atomic.Pointer[sync.readOnly]
*sync/atomic.Uint32
sync/atomic.Uint32
*sync/atomic.Uint64
sync/atomic.Uint64
*sync/atomic.Value
sync/atomic.Value
*sync.Cond
sync.Cond
*sync.copyChecker
sync.copyChecker
sync.dequeueNil
*sync.eface
[]sync.eface
sync.eface
**sync.entry
*sync.entry
sync.entry
sync.Locker
*sync.Map
sync.Map
*sync.Mutex
sync.Mutex
sync.noCopy
*sync.notifyList
sync.notifyList
*sync.Once
sync.Once
**sync.Pool
*sync.Pool
[]*sync.Pool
sync.Pool
*sync.poolChain
sync.poolChain
**sync.poolChainElt
*sync.poolChainElt
sync.poolChainElt
*sync.poolDequeue
sync.poolDequeue
*sync.poolLocal
[]sync.poolLocal
sync.poolLocal
*sync.poolLocalInternal
sync.poolLocalInternal
*sync.readOnly
sync.readOnly
*sync.rlocker
sync.rlocker
*sync.RWMutex
sync.RWMutex
*sync.WaitGroup
sync.WaitGroup
syscall.capData
syscall.capHeader
syscall.caps
*syscall._C_int
syscall._C_int
*syscall.cloneArgs
syscall.cloneArgs
syscall.Conn
*syscall.Credential
syscall.Credential
*syscall.Errno
syscall.Errno
*syscall._Gid_t
[]syscall._Gid_t
syscall._Gid_t
*syscall.IfInfomsg
syscall.IfInfomsg
*[]syscall.Iovec
*syscall.Iovec
[]syscall.Iovec
syscall.Iovec
*syscall.IPMreq
syscall.IPMreq
*syscall.IPMreqn
syscall.IPMreqn
*syscall.IPv6Mreq
syscall.IPv6Mreq
*syscall.Linger
syscall.Linger
*syscall.mmapper
syscall.mmapper
*syscall.Msghdr
syscall.Msghdr
*syscall.NetlinkMessage
[]syscall.NetlinkMessage
syscall.NetlinkMessage
*syscall.NetlinkRouteAttr
[]syscall.NetlinkRouteAttr
syscall.NetlinkRouteAttr
*syscall.NetlinkRouteRequest
syscall.NetlinkRouteRequest
*syscall.NlMsghdr
syscall.NlMsghdr
*syscall.ProcAttr
syscall.ProcAttr
syscall.RawConn
syscall.RawSockaddr
*syscall.RawSockaddrAny
syscall.RawSockaddrAny
*syscall.RawSockaddrInet4
syscall.RawSockaddrInet4
*syscall.RawSockaddrInet6
syscall.RawSockaddrInet6
*syscall.RawSockaddrLinklayer
syscall.RawSockaddrLinklayer
*syscall.RawSockaddrNetlink
syscall.RawSockaddrNetlink
*syscall.RawSockaddrUnix
syscall.RawSockaddrUnix
*syscall.Rlimit
syscall.Rlimit
*syscall.RtAttr
syscall.RtAttr
syscall.RtGenmsg
*syscall.Rusage
syscall.Rusage
*syscall.Signal
syscall.Signal
*syscall.Sockaddr
syscall.Sockaddr
*syscall.SockaddrInet4
syscall.SockaddrInet4
*syscall.SockaddrInet6
syscall.SockaddrInet6
*syscall.SockaddrLinklayer
syscall.SockaddrLinklayer
*syscall.SockaddrNetlink
syscall.SockaddrNetlink
*syscall.SockaddrUnix
syscall.SockaddrUnix
*syscall._Socklen
syscall._Socklen
*syscall.Stat_t
syscall.Stat_t
*syscall.SysProcAttr
syscall.SysProcAttr
*syscall.SysProcIDMap
[]syscall.SysProcIDMap
syscall.SysProcIDMap
*syscall.Timespec
[]syscall.Timespec
syscall.Timespec
*syscall.Timeval
syscall.Timeval
*syscall.Utsname
syscall.Utsname
*syscall.WaitStatus
syscall.WaitStatus
t *[22]uintptr }
t32; net.singleRequest bool; net.useTCP bool; net.trustAD bool; net.noReload bool }
tat(context.Context, string) (*cmd/go/internal/modfetch/codehost.RevInfo, error); Tags(context.Context, string) (*cm
tBytes int64 }
tch.cachingRepo; cmd/go/internal/modfetch.rev string }
tch.cachingRepo; cmd/go/internal/modfetch.version string }
tch/codehost.RevInfo, error); Tags(context.Context, string) (*cmd/go/internal/modfetch/codehost.Tags, error) }; cmd/
tchMu chan map[*cmd/go/internal/modload.loadPkg]cmd/go/internal/modload.mismatch·4 }
t **cmd/go/internal/load.Package }
t.Context }
t.Context; cmd/go/internal/modfetch/codehost.r *cmd/go/internal/modfetch/codehost.gitRepo; cmd/go/internal/modfetch/
t.Context) (*cmd/go/internal/modfetch/codehost.RevInfo, error); ReadFile(context.Context, string, string, int64) ([]
t.Context, string, string, func(string) bool) (string, error); Stat(context.Context, string) (*cmd/go/internal/modfe
ted bool }, error); cmd/go/internal/par..dict *[11]uintptr }
/template.mark int }
ter) bool }
ternal/abi.Type; runtime.ot *internal/abi.PtrType }
ternal/load.Package }
ternal/load.Package; cmd/go/internal/load.imports []*cmd/go/internal/load.Package; cmd/go/internal/load.ximports []*
ternal/load.parentDir string }
ternal/modcmd.newPath string; cmd/go/internal/modcmd.newVersion string; cmd/go/internal/modcmd.arg string }
ternal/modfetch/codehost.RevInfo; cmd/go/internal/modfetch.statVers string }
ternal/modfetch/codehost.RevInfo, error); ReadFile(context.Context, string, string, int64) ([]uint8, error); ReadZip
ternal/modfetch.path string; cmd/go/internal/modfetch.rev *string }
ternal/modget.modMessage·2; cmd/go/internal/modget.i int }
ternal/modload.path string }
ternal/modload.prune cmd/go/internal/modload.pruning·6; cmd/go/internal/modload.have map[string]bool; cmd/go/interna
ternal/par..dict *[11]uintptr }
ternal/par..dict *[22]uintptr }
ternal/par.err error }]
ternal/par.err error }]; cmd/go/internal/par..dict *[22]uintptr }
ternal/par.v *cmd/go/internal/modfetch.RevInfo; cmd/go/internal/par.err error }]; cmd/go/internal/par..dict *[22]uin
ternal/par.v *cmd/go/internal/modindex.IndexPackage; cmd/go/internal/par.err error }]; cmd/go/internal/par..dict *[2
ternal/reflectlite.typ *internal/abi.Type; internal/reflectlite.tmp unsafe.Pointer }
ternal/search.Match }
ternal/work.Action }
ternal/work.gccgoToolchain }
/test.cancelSignaled *bool }
testlog.sp uintptr; internal/testlog.pc uintptr; internal/testlog.fn uintptr; internal/testlog._panic uintptr; inter
text }
text; cmd/go/internal/modfetch/codehost.r *cmd/go/internal/modfetch/codehost.gitRepo; cmd/go/internal/modfetch/codeh
text; cmd/go/internal/modfetch.mod cmd/vendor/golang.org/x/mod/module.Version; cmd/go/internal/modfetch.f *os.File }
text.Context }
text.Context; cmd/go/internal/modfetch.statVers string; cmd/go/internal/modfetch.canUseIncompatible func(string) boo
text.Context, io.Writer, string) error }]; cmd/go/internal/par..dict *[22]uintptr }
text, string) ([]uint8, error); Latest(context.Context) (*cmd/go/internal/modfetch.RevInfo, error); ModulePath() str
*text/template.common
text/template.common
*text/template.ExecError
text/template.ExecError
; text/template.fd uintptr; text/template.varp uintptr; text/template.framepc uintptr }
text/template.FuncMap
text/template.kind
text/template.missingKeyAction
text/template.missingValType
text/template.option
*text/template/parse.ActionNode
text/template/parse.ActionNode
*text/template/parse.BoolNode
text/template/parse.BoolNode
*text/template/parse.BranchNode
text/template/parse.BranchNode
*text/template/parse.BreakNode
text/template/parse.BreakNode
*text/template/parse.ChainNode
text/template/parse.ChainNode
**text/template/parse.CommandNode
*text/template/parse.CommandNode
[]*text/template/parse.CommandNode
text/template/parse.CommandNode
*text/template/parse.CommentNode
text/template/parse.CommentNode
*text/template/parse.ContinueNode
text/template/parse.ContinueNode
*text/template/parse.DotNode
text/template/parse.DotNode
*text/template/parse.elseNode
text/template/parse.elseNode
*text/template/parse.endNode
text/template/parse.endNode
*text/template/parse.FieldNode
text/template/parse.FieldNode
text/template/parse.framepc uintptr }
*text/template/parse.IdentifierNode
text/template/parse.IdentifierNode
*text/template/parse.IfNode
text/template/parse.IfNode
*text/template/parse.item
text/template/parse.item
*text/template/parse.itemType
text/template/parse.itemType
*text/template/parse.lexer
text/template/parse.lexer
text/template/parse.lexOptions
*text/template/parse.ListNode
text/template/parse.ListNode
text/template/parse.Mode
*text/template/parse.NilNode
text/template/parse.NilNode
*text/template/parse.Node
[]text/template/parse.Node
text/template/parse.Node
*text/template/parse.NodeType
text/template/parse.NodeType
*text/template/parse.NumberNode
text/template/parse.NumberNode
*text/template/parse.PipeNode
text/template/parse.PipeNode
*text/template/parse.Pos
text/template/parse.Pos
*text/template/parse.RangeNode
text/template/parse.RangeNode
text/template/parse.sp uintptr; text/template/parse.pc uintptr; text/template/parse.fn uintptr; text/template/parse.
*text/template/parse.stateFn
text/template/parse.stateFn
*text/template/parse.StringNode
text/template/parse.StringNode
*text/template/parse.TemplateNode
text/template/parse.TemplateNode
*text/template/parse.TextNode
text/template/parse.TextNode
**text/template/parse.Tree
*text/template/parse.Tree
text/template/parse.Tree
**text/template/parse.VariableNode
*text/template/parse.VariableNode
[]*text/template/parse.VariableNode
text/template/parse.VariableNode
*text/template/parse.WithNode
text/template/parse.WithNode
*text/template.state
text/template.state
**text/template.Template
*text/template.Template
text/template.Template
*text/template.variable
[]text/template.variable
text/template.variable
text/template.writeError
throwsplit bool; runtime.activeStackChans bool; runtime.parkingOnChan runtime/internal/atomic.Bool; runtime.raceigno
th string; cmd/go/internal/load.parentPath string; cmd/go/internal/load.parentDir string; cmd/go/internal/load.paren
tibleOk map[string]bool; cmd/go/internal/modfetch.ctx context.Context; cmd/go/internal/modfetch.info *cmd/go/interna
Tile); cmd/vendor/golang.org/x/mod/sumdb..autotmp_11 int; cmd/vendor/golang.org/x/mod/sumdb..autotmp_12 cmd/vendor/g
Time; cmd/go/internal/modfetch/codehost.text *strings.Builder }
*time.dataIO
time.dataIO
time/debug.Module; cmd/go/internal/load.ctx context.Context }
*time.Duration
time.Duration
*time.fileSizeError
time.fileSizeError
time.gTraceState; runtime.gcAssistBytes int64 }]
**time.Location
*time.Location
[]*time.Location
time.Location
*time.Month
time.Month
*time.ParseError
time.ParseError
time.recv [3]uint32; runtime.state runtime/internal/atomic.Uint32; runtime.delivering runtime/internal/atomic.Uint32
.Timer; net/http.timedOut *sync/atomic.Bool; net/http.stopTimerCh chan struct {} }
time.rule
time.ruleKind
*time.runtimeTimer
time.runtimeTimer
time.sigactiont }
time.spans [512]runtime.atomicMSpanPointer }]
time.sudog; runtime.cgoCtxt []uintptr; runtime.labels unsafe.Pointer; runtime.timer *runtime.timer; runtime.selectDo
*time.Ticker
time.Ticker
*time.Time
time.Time
time.Time; cmd/go/internal/modfetch/codehost.text *strings.Builder }
**time.Timer
*time.Timer
time.Timer
 time.Time; Uncommitted bool }; cmd/go/internal/par.err error }]
*time.Weekday
time.Weekday
*time.zone
[]time.zone
time.zone
*time.zoneTrans
[]time.zoneTrans
time.zoneTrans
t.lane chan net.result·3 }
tlog.Tile); cmd/vendor/golang.org/x/mod/sumdb..autotmp_11 int; cmd/vendor/golang.org/x/mod/sumdb..autotmp_12 cmd/ven
tmp_15 *cmd/go/internal/work.Action }
tmp_27 chan<- struct {} }
to/tls.pc uintptr; crypto/tls.fn uintptr; crypto/tls._panic uintptr; crypto/tls.link uintptr; crypto/tls.fd uintptr;
totmp_11 string }
tptr }
tptr; flag._panic uintptr; flag.link uintptr; flag.fd uintptr; flag.varp uintptr; flag.framepc uintptr }
tptr; go/token.framepc uintptr }
tptr; main._panic uintptr; main.link uintptr; main.fd uintptr; main.varp uintptr; main.framepc uintptr }
tptr; mime._panic uintptr; mime.link uintptr; mime.fd uintptr; mime.varp uintptr; mime.framepc uintptr }
tptr; net/http.framepc uintptr }
tptr; runtime.sp uintptr }
tptr; sync._panic uintptr; sync.link uintptr; sync.fd uintptr; sync.varp uintptr; sync.framepc uintptr }
tptr; time._panic uintptr; time.link uintptr; time.fd uintptr; time.varp uintptr; time.framepc uintptr }
tr }
/trace.traceFile }
trace.traceFile }
trace.varp uintptr; cmd/go/internal/trace.framepc uintptr }
tr; cmd/go/internal/modconv._panic uintptr; cmd/go/internal/modconv.link uintptr; cmd/go/internal/modconv.fd uintptr
tr; cmd/go/internal/modload._panic uintptr; cmd/go/internal/modload.link uintptr; cmd/go/internal/modload.fd uintptr
tr; cmd/vendor/golang.org/x/mod/sumdb/dirhash.pc uintptr; cmd/vendor/golang.org/x/mod/sumdb/dirhash.fn uintptr; cmd/
tr; cmd/vendor/golang.org/x/mod/zip.framepc uintptr }
tr; context.fn uintptr; context._panic uintptr; context.link uintptr; context.fd uintptr; context.varp uintptr; cont
t.RevInfo; cmd/go/internal/par.err error }]
tring) bool; cmd/go/internal/modload.have map[string]bool; cmd/go/internal/modload.isMatch func(string) bool; cmd/go
tring; cmd/go/internal/modload.compatVersion string; cmd/go/internal/modload.suggestUpgrade *bool; cmd/go/internal/m
tring }]; cmd/go/internal/par..dict *[22]uintptr }
tring; cmd/go/internal/work.gatherSyso *func(*cmd/go/internal/work.Action) }
tring; net/http.contentLength int64; net/http.addGzipHeader bool }
tRoot string; cmd/go/internal/load.parentIsStd bool; cmd/go/internal/load.mode int },go.shape.struct { cmd/go/intern
tr; os/exec.fn uintptr; os/exec._panic uintptr; os/exec.link uintptr; os/exec.fd uintptr; os/exec.varp uintptr; os/e
tr; reflect.fn uintptr; reflect._panic uintptr; reflect.link uintptr; reflect.fd uintptr; reflect.varp uintptr; refl
tr; runtime.ancestors *[]runtime.ancestorInfo; runtime.startpc uintptr; runtime.racectx uintptr; runtime.waiting *ru
tr; syscall.fn uintptr; syscall._panic uintptr; syscall.link uintptr; syscall.fd uintptr; syscall.varp uintptr; sysc
t *runtime.sysMemStat }
t, string, string, func(string) bool) (string, error); Stat(context.Context, string) (*cmd/go/internal/modfetch/code
tus runtime/internal/atomic.Uint32; runtime.stackLock uint32; runtime.goid uint64; runtime.schedlink runtime.guintpt
t.wg *sync.WaitGroup }
tx context.Context }
tx context.Context; cmd/go/internal/modfetch.allLine []string }
tx context.Context; cmd/go/internal/modload.path string; cmd/go/internal/modload.query string; cmd/go/internal/modlo
uest; net/http.conn net.Conn; net/http.resp **net/http.Response }
ueueState }
ug/dwarf.typeFixer }
uildid._panic uintptr; cmd/internal/buildid.link uintptr; cmd/internal/buildid.fd uintptr; cmd/internal/buildid.varp
uild.Package; go/build.setPkga func(); go/build.tried *struct { go/build.vendor []string; go/build.goroot string; go
uild.pkgtargetroot string }
*uint
[]uint
uint
*uint16
[]uint16
uint16
*[]uint32
*uint32
[][]uint32
[]uint32
uint32
uint32, []bool) bool; regexp.onePassRunes [][]int32; regexp.instQueue *regexp.queueOnePass }
uint32; net.singleRequest bool; net.useTCP bool; net.trustAD bool; net.noReload bool }
*uint64
[]uint64
uint64
**uint8
*[][][]uint8
*[][]uint8
*[]uint8
*uint8
[]*uint8
[][][]uint8
[][]uint8
[]uint8
uint8
) ([]uint8, error); ReadZip(context.Context, string, string, int64) (io.ReadCloser, error); RecentTag(context.Contex
uint8, error); ReadZip(context.Context, string, string, int64) (io.ReadCloser, error); RecentTag(context.Context, st
 uintptr }
*[]uintptr
*uintptr
[]uintptr
uintptr
uintptr }
 uintptr; archive/zip.varp uintptr; archive/zip.framepc uintptr }
 uintptr; cmd/go/internal/fsys.framepc uintptr }
 uintptr; cmd/go/internal/generate._panic uintptr; cmd/go/internal/generate.link uintptr; cmd/go/internal/generate.f
 uintptr; cmd/go/internal/list.framepc uintptr }
 uintptr; cmd/go/internal/load.framepc uintptr }
 uintptr; cmd/go/internal/modfetch._panic uintptr; cmd/go/internal/modfetch.link uintptr; cmd/go/internal/modfetch.f
 uintptr; cmd/go/internal/modindex._panic uintptr; cmd/go/internal/modindex.link uintptr; cmd/go/internal/modindex.f
 uintptr; cmd/go/internal/test.framepc uintptr }
 uintptr; cmd/go/internal/tool.framepc uintptr }
 uintptr; cmd/go/internal/work.framepc uintptr }
 uintptr; cmd/internal/buildid.framepc uintptr }
 uintptr; cmd/internal/pkgpath.framepc uintptr }
 uintptr; crypto/hmac.varp uintptr; crypto/hmac.framepc uintptr }
 uintptr; crypto/rand.varp uintptr; crypto/rand.framepc uintptr }
 uintptr; crypto/x509.varp uintptr; crypto/x509.framepc uintptr }
 uintptr; debug/dwarf.varp uintptr; debug/dwarf.framepc uintptr }
uintptr; go/token.fn uintptr; go/token._panic uintptr; go/token.link uintptr; go/token.fd uintptr; go/token.varp uin
 uintptr; mime/multipart.fd uintptr; mime/multipart.varp uintptr; mime/multipart.framepc uintptr }
uintptr; net/http.fn uintptr; net/http._panic uintptr; net/http.link uintptr; net/http.fd uintptr; net/http.varp uin
unc(cmd/vendor/golang.org/x/mod/module.Version); cmd/go/internal/modcmd.w *bufio.Writer }
*unicode.CaseRange
[]unicode.CaseRange
unicode.CaseRange
unicode.d
*unicode.foldPair
[]unicode.foldPair
unicode.foldPair
*unicode.Range16
[]unicode.Range16
unicode.Range16
*unicode.Range32
[]unicode.Range32
unicode.Range32
**unicode.RangeTable
*unicode.RangeTable
[]*unicode.RangeTable
unicode.RangeTable
unicode/utf8.acceptRange
*[]unsafe.Pointer
*unsafe.Pointer
[]unsafe.Pointer
unsafe.Pointer
unsafe.Pointer }
<unspecified>
untime._defer }
untime.gcscandone bool; runtime.throwsplit bool; runtime.activeStackChans bool; runtime.parkingOnChan runtime/intern
untime.gp *runtime.g; runtime.flags runtime.unwindFlags }
untime.lockedm runtime.muintptr; runtime.sig uint32; runtime.writebuf []uint8; runtime.sigcode0 uintptr; runtime.sig
untime.preemptShrink bool; runtime.asyncSafePoint bool; runtime.paniconfault bool; runtime.gcscandone bool; runtime.
untime.schedlink runtime.guintptr; runtime.waitsince int64; runtime.waitreason runtime.waitReason; runtime.preempt b
untime.StackRecord; runtime.labels []unsafe.Pointer }
url.URL; crypto/x509.ipAddresses *[]net.IP }
urrent *runtime.gcBitsArena; runtime.previous *runtime.gcBitsArena }
usedObjs map[*go/ast.Object]bool; go/doc.usedDecls map[go/ast.Decl]bool; go/doc.depDecls *[]go/ast.Decl; go/doc.insp
us runtime/internal/atomic.Uint32; runtime.stackLock uint32; runtime.goid uint64; runtime.schedlink runtime.guintptr
u *sync.Mutex; cmd/go/internal/modload.hasError *bool }
u *sync.Mutex; cmd/go/internal/modload.mg *cmd/go/internal/modload.ModuleGraph; cmd/go/internal/modload.hasError *bo
utex; cmd/go/internal/mvs.errs map[cmd/vendor/golang.org/x/mod/module.Version]error; cmd/go/internal/mvs.upgrades ma
[]val<[32]uint8>
[]val<archive/zip.Compressor>
[]val<archive/zip.Decompressor>
[]val<*archive/zip.File>
[]val<bool>
[]val<chan<- *cmd/go/internal/cache.ProgResponse>
[]val<chan struct {}>
[]val<cmd/go/internal/cache.ActionID>
[]val<*cmd/go/internal/fsys.node>
[]val<*cmd/go/internal/load.CoverVar>
[]val<*cmd/go/internal/load.Package>
[]val<[]*cmd/go/internal/load.Package>
[]val<*cmd/go/internal/modfetch/codehost.vcsCmd>
[]val<cmd/go/internal/modfetch.modSumStatus>
[]val<*cmd/go/internal/modfetch.RevInfo>
[]val<cmd/go/internal/modget.change·3>
[]val<cmd/go/internal/modget.modFlags·1>
[]val<*cmd/go/internal/modget.query>
[]val<cmd/go/internal/modget.versionReason>
[]val<*cmd/go/internal/modinfo.ModulePublic>
[]val<[]*cmd/go/internal/modinfo.ModulePublic>
[]val<*cmd/go/internal/modload.loadPkg>
[]val<cmd/go/internal/modload.mismatch·4>
[]val<*cmd/go/internal/modload.modFileIndex>
[]val<cmd/go/internal/modload.modPruning>
[]val<cmd/go/internal/modload.perPruning[cmd/go/internal/modload.dqState]>
[]val<cmd/go/internal/modload.requireMeta>
[]val<cmd/go/internal/modload.vendorMetadata>
[]val<cmd/go/internal/vcs.fetchResult>
[]val<*cmd/go/internal/work.Action>
[]val<cmd/vendor/golang.org/x/mod/modfile.elem·1>
[]val<*cmd/vendor/golang.org/x/mod/modfile.File>
[]val<*cmd/vendor/golang.org/x/mod/modfile.LineBlock>
[]val<*cmd/vendor/golang.org/x/mod/modfile.Replace>
[]val<*cmd/vendor/golang.org/x/mod/modfile.Require>
[]val<[]cmd/vendor/golang.org/x/mod/module.Version>
[]val<cmd/vendor/golang.org/x/mod/module.Version>
[]val<[]cmd/vendor/golang.org/x/mod/sumdb/note.Verifier>
[]val<cmd/vendor/golang.org/x/mod/zip.pathInfo>
[]val<*container/list.Element>
[]val<*crypto/tls.Certificate>
[]val<debug/dwarf.abbrev>
[]val<debug/dwarf.abbrevTable>
[]val<debug/dwarf.Class>
[]val<debug/dwarf.Type>
[]val<*debug/dwarf.typeUnit>
[]val<encoding/asn1.RawValue>
[]val<*encoding/json.field>
[]val<error>
[]val<*flag.Flag>
[]val<func(bool)>
[]val<func(error)>
[]val<func(string, *crypto/tls.Conn) net/http.RoundTripper>
[]val<func(string, []uint8) (*cmd/vendor/golang.org/x/mod/modfile.File, error)>
[]val<[]go/ast.Decl>
[]val<go/ast.Decl>
[]val<*go/ast.File>
[]val<*go/ast.Object>
[]val<*go/doc/comment.LinkDef>
[]val<[]*go/doc.Note>
[]val<[]go/token.Position>
[]val<go/token.Position>
[]val<go/token.Token>
[]val<[]int>
[]val<int>
[]val<int32>
[]val<int64>
[]val<interface {}>
[]val<*internal/abi.Type>
[]val<[]*internal/abi.Type>
[]val<*internal/intern.Value>
[]val<internal/platform.osArchInfo>
[]val<*internal/singleflight.call>
[]val<*internal/xcoff.Symbol>
[]val<io/fs.FileInfo>
[]val<map[cmd/vendor/golang.org/x/mod/module.Version][]string>
[]val<map[net/http.http2Flags]string>
[]val<map[string]int>
[]val<map[string]string>
[]val<[]*mime/multipart.FileHeader>
[]val<net.byName>
[]val<[]*net/http.Cookie>
[]val<*net/http.http2addConnCall>
[]val<[]*net/http.http2ClientConn>
[]val<*net/http.http2clientStream>
[]val<*net/http.http2dialCall>
[]val<net/http.http2frameParser>
[]val<[]*net/http.persistConn>
[]val<net/http.RoundTripper>
[]val<net/http.wantConnQueue>
[]val<[]net.nssSource>
[]val<*os/signal.handler>
[]val<reflect.Value>
[]val<regexp/syntax.charGroup>
[]val<*runtime/debug.Module>
[]val<runtime.metricData>
[]val<[]string>
[]val<string>
[]val<struct {}>
[]val<*sync.entry>
[]val<text/template/parse.itemType>
[]val<*text/template/parse.Tree>
[]val<*text/template.Template>
[]val<uint64>
[]val<[]uint8>
[]val<uint8>
[]val<uintptr>
[]val<*unicode.RangeTable>
[]val<unsafe.Pointer>
/vcs.fetchResult) (cmd/go/internal/vcs.fetchResult, error); cmd/go/internal/vcs.security cmd/go/internal/web.Securit
*vendor/golang.org/x/crypto/chacha20.Cipher
vendor/golang.org/x/crypto/chacha20.Cipher
*vendor/golang.org/x/crypto/chacha20poly1305.chacha20poly1305
vendor/golang.org/x/crypto/chacha20poly1305.chacha20poly1305
*vendor/golang.org/x/crypto/cryptobyte/asn1.Tag
vendor/golang.org/x/crypto/cryptobyte/asn1.Tag
 *vendor/golang.org/x/crypto/cryptobyte.Builder }
*vendor/golang.org/x/crypto/cryptobyte.Builder
vendor/golang.org/x/crypto/cryptobyte.Builder
vendor/golang.org/x/crypto/cryptobyte.BuilderContinuation
vendor/golang.org/x/crypto/cryptobyte.BuildError
vendor/golang.org/x/crypto/cryptobyte.MarshalingValue
vendor/golang.org/x/crypto/cryptobyte.openDefer bool; vendor/golang.org/x/crypto/cryptobyte.sp uintptr; vendor/golan
*vendor/golang.org/x/crypto/cryptobyte.String
vendor/golang.org/x/crypto/cryptobyte.String
*vendor/golang.org/x/crypto/hkdf.hkdf
vendor/golang.org/x/crypto/hkdf.hkdf
*vendor/golang.org/x/crypto/internal/poly1305.mac
vendor/golang.org/x/crypto/internal/poly1305.mac
*vendor/golang.org/x/crypto/internal/poly1305.MAC
vendor/golang.org/x/crypto/internal/poly1305.MAC
vendor/golang.org/x/crypto/internal/poly1305.macGeneric
*vendor/golang.org/x/crypto/internal/poly1305.macState
vendor/golang.org/x/crypto/internal/poly1305.macState
/vendor/golang.org/x/mod/modfile.FileSyntax }
vendor/golang.org/x/mod/modfile.openDefer bool; cmd/vendor/golang.org/x/mod/modfile.sp uintptr; cmd/vendor/golang.or
vendor/golang.org/x/mod/module.Version },go.shape.[]string]
vendor/golang.org/x/mod/sumdb/dirhash._panic uintptr; cmd/vendor/golang.org/x/mod/sumdb/dirhash.link uintptr; cmd/ve
*vendor/golang.org/x/net/dns/dnsmessage.AAAAResource
vendor/golang.org/x/net/dns/dnsmessage.AAAAResource
*vendor/golang.org/x/net/dns/dnsmessage.AResource
vendor/golang.org/x/net/dns/dnsmessage.AResource
*vendor/golang.org/x/net/dns/dnsmessage.Builder
vendor/golang.org/x/net/dns/dnsmessage.Builder
vendor/golang.org/x/net/dns/dnsmessage.Class
vendor/golang.org/x/net/dns/dnsmessage.CNAMEResource
*vendor/golang.org/x/net/dns/dnsmessage.header
vendor/golang.org/x/net/dns/dnsmessage.header
*vendor/golang.org/x/net/dns/dnsmessage.Header
vendor/golang.org/x/net/dns/dnsmessage.Header
*vendor/golang.org/x/net/dns/dnsmessage.Name
vendor/golang.org/x/net/dns/dnsmessage.Name
*vendor/golang.org/x/net/dns/dnsmessage.nestedError
vendor/golang.org/x/net/dns/dnsmessage.nestedError
vendor/golang.org/x/net/dns/dnsmessage.OpCode
*vendor/golang.org/x/net/dns/dnsmessage.Option
[]vendor/golang.org/x/net/dns/dnsmessage.Option
vendor/golang.org/x/net/dns/dnsmessage.Option
*vendor/golang.org/x/net/dns/dnsmessage.OPTResource
vendor/golang.org/x/net/dns/dnsmessage.OPTResource
*vendor/golang.org/x/net/dns/dnsmessage.Parser
vendor/golang.org/x/net/dns/dnsmessage.Parser
*vendor/golang.org/x/net/dns/dnsmessage.Question
vendor/golang.org/x/net/dns/dnsmessage.Question
vendor/golang.org/x/net/dns/dnsmessage.RCode
*vendor/golang.org/x/net/dns/dnsmessage.ResourceHeader
vendor/golang.org/x/net/dns/dnsmessage.ResourceHeader
vendor/golang.org/x/net/dns/dnsmessage.section
*vendor/golang.org/x/net/dns/dnsmessage.Type
[]vendor/golang.org/x/net/dns/dnsmessage.Type
vendor/golang.org/x/net/dns/dnsmessage.Type
*vendor/golang.org/x/net/http2/hpack.Decoder
vendor/golang.org/x/net/http2/hpack.Decoder
*vendor/golang.org/x/net/http2/hpack.DecodingError
vendor/golang.org/x/net/http2/hpack.DecodingError
*vendor/golang.org/x/net/http2/hpack.dynamicTable
vendor/golang.org/x/net/http2/hpack.dynamicTable
*vendor/golang.org/x/net/http2/hpack.Encoder
vendor/golang.org/x/net/http2/hpack.Encoder
*[]vendor/golang.org/x/net/http2/hpack.HeaderField
*vendor/golang.org/x/net/http2/hpack.HeaderField
[]vendor/golang.org/x/net/http2/hpack.HeaderField
vendor/golang.org/x/net/http2/hpack.HeaderField
*vendor/golang.org/x/net/http2/hpack.headerFieldTable
vendor/golang.org/x/net/http2/hpack.headerFieldTable
vendor/golang.org/x/net/http2/hpack.incomparable
vendor/golang.org/x/net/http2/hpack.indexType
*vendor/golang.org/x/net/http2/hpack.InvalidIndexError
vendor/golang.org/x/net/http2/hpack.InvalidIndexError
*vendor/golang.org/x/net/http2/hpack.node
vendor/golang.org/x/net/http2/hpack.node
*vendor/golang.org/x/net/http2/hpack.pairNameValue
vendor/golang.org/x/net/http2/hpack.pairNameValue
vendor/golang.org/x/net/http2/hpack.undecodedString
*vendor/golang.org/x/net/http/httpproxy.allMatch
vendor/golang.org/x/net/http/httpproxy.allMatch
*vendor/golang.org/x/net/http/httpproxy.cidrMatch
vendor/golang.org/x/net/http/httpproxy.cidrMatch
*vendor/golang.org/x/net/http/httpproxy.config
vendor/golang.org/x/net/http/httpproxy.config
*vendor/golang.org/x/net/http/httpproxy.Config
vendor/golang.org/x/net/http/httpproxy.Config
*vendor/golang.org/x/net/http/httpproxy.domainMatch
vendor/golang.org/x/net/http/httpproxy.domainMatch
*vendor/golang.org/x/net/http/httpproxy.ipMatch
vendor/golang.org/x/net/http/httpproxy.ipMatch
*vendor/golang.org/x/net/http/httpproxy.matcher
[]vendor/golang.org/x/net/http/httpproxy.matcher
vendor/golang.org/x/net/http/httpproxy.matcher
vendor/golang.org/x/net/idna.category
*vendor/golang.org/x/net/idna.idnaTrie
vendor/golang.org/x/net/idna.idnaTrie
vendor/golang.org/x/net/idna.info
vendor/golang.org/x/net/idna.joinState
*vendor/golang.org/x/net/idna.labelError
vendor/golang.org/x/net/idna.labelError
*vendor/golang.org/x/net/idna.labelIter
vendor/golang.org/x/net/idna.labelIter
vendor/golang.org/x/net/idna.options
*vendor/golang.org/x/net/idna.Profile
vendor/golang.org/x/net/idna.Profile
*vendor/golang.org/x/net/idna.runeError
vendor/golang.org/x/net/idna.runeError
*vendor/golang.org/x/net/idna.sparseBlocks
vendor/golang.org/x/net/idna.sparseBlocks
*vendor/golang.org/x/net/idna.valueRange
[]vendor/golang.org/x/net/idna.valueRange
vendor/golang.org/x/net/idna.valueRange
vendor/golang.org/x/sys/cpu.CacheLinePad
*vendor/golang.org/x/sys/cpu.option
[]vendor/golang.org/x/sys/cpu.option
vendor/golang.org/x/sys/cpu.option
vendor/golang.org/x/text/secure/bidirule.ruleState
vendor/golang.org/x/text/secure/bidirule.ruleTransition
*vendor/golang.org/x/text/secure/bidirule.Transformer
vendor/golang.org/x/text/secure/bidirule.Transformer
*vendor/golang.org/x/text/unicode/bidi.bidiTrie
vendor/golang.org/x/text/unicode/bidi.bidiTrie
vendor/golang.org/x/text/unicode/bidi.bracketType
vendor/golang.org/x/text/unicode/bidi.Class
vendor/golang.org/x/text/unicode/bidi.Direction
vendor/golang.org/x/text/unicode/bidi.level
vendor/golang.org/x/text/unicode/bidi.Properties
vendor/golang.org/x/text/unicode/norm.Form
**vendor/golang.org/x/text/unicode/norm.formInfo
*vendor/golang.org/x/text/unicode/norm.formInfo
[]*vendor/golang.org/x/text/unicode/norm.formInfo
vendor/golang.org/x/text/unicode/norm.formInfo
*vendor/golang.org/x/text/unicode/norm.input
vendor/golang.org/x/text/unicode/norm.input
vendor/golang.org/x/text/unicode/norm.insertErr
*vendor/golang.org/x/text/unicode/norm.Iter
vendor/golang.org/x/text/unicode/norm.Iter
vendor/golang.org/x/text/unicode/norm.iterFunc
vendor/golang.org/x/text/unicode/norm.lookupFunc
*vendor/golang.org/x/text/unicode/norm.nfcTrie
vendor/golang.org/x/text/unicode/norm.nfcTrie
*vendor/golang.org/x/text/unicode/norm.nfkcTrie
vendor/golang.org/x/text/unicode/norm.nfkcTrie
*vendor/golang.org/x/text/unicode/norm.Properties
[]vendor/golang.org/x/text/unicode/norm.Properties
vendor/golang.org/x/text/unicode/norm.Properties
vendor/golang.org/x/text/unicode/norm.qcInfo
*vendor/golang.org/x/text/unicode/norm.reorderBuffer
vendor/golang.org/x/text/unicode/norm.reorderBuffer
*vendor/golang.org/x/text/unicode/norm.sparseBlocks
vendor/golang.org/x/text/unicode/norm.sparseBlocks
vendor/golang.org/x/text/unicode/norm.ssState
*vendor/golang.org/x/text/unicode/norm.streamSafe
vendor/golang.org/x/text/unicode/norm.streamSafe
*vendor/golang.org/x/text/unicode/norm.valueRange
[]vendor/golang.org/x/text/unicode/norm.valueRange
vendor/golang.org/x/text/unicode/norm.valueRange
vendorList []cmd/vendor/golang.org/x/mod/module.Version }
.Version }
Version }
.Version; cmd/go/internal/par.err error }]
vInfo; cmd/go/internal/modload.versions *cmd/go/internal/modfetch.Versions; cmd/go/internal/modload.query string; cm
vInfo, error); ModulePath() string; Stat(context.Context, string) (*cmd/go/internal/modfetch.RevInfo, error); Versio
vs.reqCache map[cmd/vendor/golang.org/x/mod/module.Version][]cmd/vendor/golang.org/x/mod/module.Version; cmd/go/inte
v string }
waitq<bool>
waitq<*cmd/go/internal/cache.ProgResponse>
waitq<cmd/go/internal/modcmd.token·1>
waitq<cmd/go/internal/modcmd.token·2>
waitq<cmd/go/internal/modconv.token·1>
waitq<cmd/go/internal/modload.token·2>
waitq<cmd/go/internal/par.queueState>
waitq<cmd/go/internal/trace.traceFile>
waitq<[]error>
waitq<error>
waitq<int>
waitq<internal/singleflight.Result>
waitq<map[*cmd/go/internal/modload.loadPkg]cmd/go/internal/modload.mismatch·4>
waitq<map[cmd/vendor/golang.org/x/mod/module.Version]bool>
waitq<net.dialResult·2>
waitq<net/http.readResult>
waitq<net/http.requestAndChan>
waitq<net/http.responseAndError>
waitq<net/http.writeRequest>
waitq<net.result·3>
waitq<net.result[go.shape.int]·1>
waitq<net.result[go.shape.[]net.IPAddr]·1>
waitq<net.result[int]·1>
waitq<net.result[[]net.IPAddr]·1>
waitq<os/exec.ctxResult>
waitq<os/exec.goroutineStatus·1>
waitq<os.Signal>
waitq<struct {}>
waitq<time.Time>
waitq<uint32>
Weighted; cmd/go/internal/list.wg *sync.WaitGroup }
work.Builder }
/work.BuildMode; cmd/go/internal/work.depMode cmd/go/internal/work.BuildMode; cmd/go/internal/work.p *cmd/go/interna
Writer, string) error }]; cmd/go/internal/par..dict *[22]uintptr }
/x509.certBytes *[]uint8 }
x; cmd/go/internal/modget.upgrades *[]cmd/go/internal/modget.pathSet }
x context.Context }
x context.Context; cmd/go/internal/modfetch.statVers string; cmd/go/internal/modfetch.canUseIncompatible func(string
xec.framepc uintptr }
x/mod/modfile.File; cmd/vendor/golang.org/x/mod/modfile.err *error }
x/mod/module.Version]bool; cmd/go/internal/modload.enqueue *func(cmd/vendor/golang.org/x/mod/module.Version, cmd/go/
x/mod/sumdb.tileReader }
xPackage; cmd/go/internal/par.err error }]
xt; cmd/go/internal/get.stk *cmd/go/internal/load.ImportStack }
xt, *cmd/go/internal/modfetch/codehost.Origin, string) error; DescendsFrom(context.Context, string, string) (bool, e
xt.Context) (*cmd/go/internal/modfetch.RevInfo, error); ModulePath() string; Stat(context.Context, string) (*cmd/go/
xt.Context, string, string, func(string) bool) (string, error); Stat(context.Context, string) (*cmd/go/internal/modf
xt.Context, string) ([]uint8, error); Latest(context.Context) (*cmd/go/internal/modfetch.RevInfo, error); ModulePath
xy string; cmd/go/internal/modfetch.path string },go.shape.interface { CheckReuse(context.Context, *cmd/go/internal/
yMode; cmd/go/internal/vcs.mod cmd/go/internal/vcs.ModuleMode }
ync.Mutex; cmd/go/internal/mvs.errs map[cmd/vendor/golang.org/x/mod/module.Version]error; cmd/go/internal/mvs.upgrad
ypto/tls.suite *crypto/tls.cipherSuite; crypto/tls.masterSecret []uint8 }
yResult, error); cmd/go/internal/modload.ctx context.Context; cmd/go/internal/modload.wg *sync.WaitGroup }
/zip.cf *cmd/vendor/golang.org/x/mod/zip.CheckedFiles }
